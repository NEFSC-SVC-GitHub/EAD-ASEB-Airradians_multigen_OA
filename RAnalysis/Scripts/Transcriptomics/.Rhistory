"grey50")) +
ggtitle(df_loop[1,7]) +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.ticks.length=unit(.25, "cm")) +
theme(legend.position = "none")
pdf(paste("../../Output/Transcriptomics/DESeq2/Plots_MeanSE/",df_loop[1,7],".pdf", sep = ''), width=5, height=5)
print(plot_loop)
dev.off()
}
geneID_loop
df_loop
df_loop %>%
ggplot(aes(x=pCO2,
y=mean.vstExp,
fill=pCO2)) +  # , colour=supp, group=supp))
theme_classic() +
geom_errorbar(aes(ymin=mean.vstExp-sderror.vstExp,
ymax=mean.vstExp+sderror.vstExp),
colour="black",
width=.1,
position=pd) +
geom_point(size = 4,
shape=21,
position=pd) +
xlab("pCO2 treatment") +
ylab("") +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("white",
"grey50")) +
ggtitle(df_loop[1,7]) +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.ticks.length=unit(.25, "cm")) +
theme(legend.position = "none")
for(i in 1:length(topgenes.IDs)) {
geneID_loop  <- topgenes.IDs[i]
df_loop      <- vstExp_DEGs_MEAN.SE %>%
dplyr::filter(Gene.ID %in% geneID_loop)
plot_loop    <- df_loop %>%
ggplot(aes(x=pCO2,
y=mean.vstExp,
fill=pCO2)) +  # , colour=supp, group=supp))
theme_classic() +
geom_errorbar(aes(ymin=mean.vstExp-sderror.vstExp,
ymax=mean.vstExp+sderror.vstExp),
colour="black",
width=.1,
position=pd) +
geom_point(size = 4,
shape=21,
position=pd) +
xlab("pCO2 treatment") +
ylab("") +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("white",
"grey50")) +
ggtitle(df_loop[1,7]) +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.ticks.length=unit(.25, "cm")) +
theme(legend.position = "none")
pdf(paste("../../Output/Transcriptomics/DESeq2/Plots_MeanSE/",df_loop[1,7],".pdf", sep = ''), width=5, height=5)
print(plot_loop)
dev.off()
}
rlogExp_df        <- as.data.frame(assay(rlogExp))
rlogExp_df        <- tibble::rownames_to_column(rlogExp_df, "Gene.ID")
rlogExp_DEGs      <- rlogExp_df %>%
dplyr::filter(Gene.ID %in% topgenes.IDs)
rlogExp_DEGs_melt <- reshape2::melt(rlogExp_DEGs, id.vars='Gene.ID') %>%
dplyr::rename(Sample.Name = variable, # to merge with 'Exp.metadata'
rlogExp = value) # the data to get mean SE values
DEGs_annotated   <- Airr_Cvirg_annotation %>%
dplyr::filter(Airradians_TranscriptID %in% topgenes.IDs) %>%
dplyr::select(Airradians_TranscriptID,blastxEval_CvirgProteinID) %>%
dplyr::rename(Gene.ID = Airradians_TranscriptID,
Protein.ID = blastxEval_CvirgProteinID)
rlogExp_DEGs_annotated <- merge(DEGs_annotated, rlogExp_DEGs_melt, by = "Gene.ID")
rlogExp_DEGs_MASTER    <- merge(rlogExp_DEGs_annotated,Exp.metadata, by = "Sample.Name")
rlogExp_DEGs_MEAN.SE   <- rlogExp_DEGs_MASTER %>%
dplyr:::group_by(Gene.ID, Protein.ID,pCO2) %>%
dplyr::summarise(mean.rlogExp    = mean(rlogExp),
sd.rlogExp     = sd(rlogExp),
n = n(),
sderror.rlogExp = sd.rlogExp/(sqrt(n))) %>%
dplyr::select(-n) %>%
dplyr::mutate(Protein_contig = paste(Protein.ID,
str_split(Gene.ID, "\\.", simplify=T)[,3],
sep="_"))
pd <- position_dodge(0.3)
for(i in 1:length(topgenes.IDs)) {
geneID_loop  <- topgenes.IDs[i]
df_loop      <- rlogExp_DEGs_MEAN.SE %>%
dplyr::filter(Gene.ID %in% geneID_loop)
plot_loop    <- df_loop %>%
ggplot(aes(x=pCO2,
y=mean.rlogExp,
fill=pCO2)) +  # , colour=supp, group=supp))
theme_classic() +
geom_errorbar(aes(ymin=mean.rlogExp-sderror.rlogExp,
ymax=mean.rlogExp+sderror.rlogExp),
colour="black",
width=.1,
position=pd) +
geom_point(size = 4,
shape=21,
position=pd) +
xlab("pCO2 treatment") +
ylab("") +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("white",
"grey50")) +
ggtitle(df_loop[1,7]) +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.ticks.length=unit(.25, "cm")) +
theme(legend.position = "none")
pdf(paste("../../Output/Transcriptomics/DESeq2/Plots_MeanSE/",df_loop[1,7],".pdf", sep = ''), width=5, height=5)
print(plot_loop)
dev.off()
}
# Exxplore the 'dds.run' model
# resprimary <- results(dds.d0, name="Primary_Treatment_M_vs_A", alpha = 0.05)
resprimary         <- results(dds.run, contrast=c("pCO2", "Low", "High"), alpha = 0.05) # FDR is the alpha 0.05
numDEGs_padj       <- data.frame(table(resprimary$padj<0.05))[2,2] # DEGs - NOT considering LFC - just p adj
numDEGs_pval       <- data.frame(table(resprimary$pvalue<0.05))[2,2] # DEGs - NOT considering LFC - just p adj
resprimary.ordered <- resprimary[order(resprimary$padj), ] # Order by adjusted p-value
num.DownReg        <- sum((resprimary.ordered$log2FoldChange[1:numDEGs_padj] > 0) == TRUE) #  LFC >= 1
num.UpReg          <- sum((resprimary.ordered$log2FoldChange[1:numDEGs_padj] < 0) == TRUE) # LFC >= 1
total              <- sum(num.DownReg,num.UpReg) # sum of DEGs with the criteria pdj < 0.05 + LFC>1 (< -1)
num.DownReg
num.UpReg
((resprimary.ordered$log2FoldChange[1:numDEGs_padj] > 0) == TRUE)
(resprimary.ordered$log2FoldChange[1:numDEGs_padj] > 0)
resprimary.ordered
resprimary.ordered$log2FoldChange
num.UpReg
num.DownReg        <- sum((resprimary.ordered$log2FoldChange[1:numDEGs_padj] > 0) == TRUE) #  LFC >= 1
num.UpReg          <- sum((resprimary.ordered$log2FoldChange[1:numDEGs_padj] < 0) == TRUE) # LFC >= 1
# Exxplore the 'dds.run' model
resprimary         <- results(dds.run, contrast=c("pCO2", "High", "Low"), alpha = 0.05) # FDR is the alpha 0.05
numDEGs_padj       <- data.frame(table(resprimary$padj<0.05))[2,2] # DEGs - NOT considering LFC - just p adj
numDEGs_pval       <- data.frame(table(resprimary$pvalue<0.05))[2,2] # DEGs - NOT considering LFC - just p adj
resprimary.ordered <- resprimary[order(resprimary$padj), ] # Order by adjusted p-value
num.DownReg        <- sum((resprimary.ordered$log2FoldChange[1:numDEGs_padj] > 0) == TRUE) #  LFC >= 1
num.DownReg
num.UpReg          <- sum((resprimary.ordered$log2FoldChange[1:numDEGs_padj] < 0) == TRUE) # LFC >= 1
num.UpReg
s
s
s
# Exxplore the 'dds.run' model
resprimary         <- results(dds.run, contrast=c("pCO2", "High", "Low"), alpha = 0.05) # FDR is the alpha 0.05
# Exxplore the 'dds.run' model
resprimary         <- results(dds.run, contrast=c("pCO2", "High", "Low"), alpha = 0.05) # FDR is the alpha 0.05
numDEGs_padj       <- data.frame(table(resprimary$padj<0.05))[2,2] # DEGs - NOT considering LFC - just p adj
# Exxplore the 'dds.run' model
resprimary         <- results(dds.run, contrast=c("pCO2", "High", "Low"), alpha = 0.05) # FDR is the alpha 0.05
numDEGs_padj       <- data.frame(table(resprimary$padj<0.05))[2,2] # DEGs - NOT considering LFC - just p adj
numDEGs_pval       <- data.frame(table(resprimary$pvalue<0.05))[2,2] # DEGs - NOT considering LFC - just p adj
numDEGs_padj       <- data.frame(table(resprimary$padj<0.05))[2,2] # DEGs - NOT considering LFC - just p adj
numDEGs_pval       <- data.frame(table(resprimary$pvalue<0.05))[2,2] # DEGs - NOT considering LFC - just p adj
resprimary.ordered <- resprimary[order(resprimary$padj), ] # Order by adjusted p-value
num.UpReg          <- sum((resprimary.ordered$log2FoldChange[1:numDEGs_padj] > 0) == TRUE) #  LFC >= 1
num.UpReg
num.DownReg        <- sum((resprimary.ordered$log2FoldChange[1:numDEGs_padj] < 0) == TRUE) # LFC >= 1
num.DownReg
total              <- sum(num.DownReg,num.UpReg) # sum of DEGs with the criteria pdj < 0.05 + LFC>1 (< -1)
resprimary.ordered$log2FoldChange
resprimary.ordered$log2FoldChange[1:numDEGs_padj]
resprimary.ordered$log2FoldChange
resprimary.ordered
View(resprimary.ordered)
# Exxplore the 'dds.run' model
resprimary         <- results(dds.run, contrast=c("pCO2", "High", "Low"), alpha = 0.05) # FDR is the alpha 0.05
numDEGs_padj       <- data.frame(table(resprimary$padj<0.05))[2,2] # DEGs - NOT considering LFC - just p adj
numDEGs_pval       <- data.frame(table(resprimary$pvalue<0.05))[2,2] # DEGs - NOT considering LFC - just p adj
resprimary.ordered <- resprimary[order(resprimary$padj), ] # Order by adjusted p-value
num.UpReg          <- sum((resprimary.ordered$log2FoldChange[1:numDEGs_padj] > 0) == TRUE) #  LFC >= 1
num.DownReg        <- sum((resprimary.ordered$log2FoldChange[1:numDEGs_padj] < 0) == TRUE) # LFC >= 1
total              <- sum(num.DownReg,num.UpReg) # sum of DEGs with the criteria pdj < 0.05 + LFC>1 (< -1)
# Write results - covert to as.data.frame for the ordered results
resdata.primary           <- merge(as.data.frame(resprimary.ordered),
as.data.frame(counts(dds.run, normalized=TRUE)),
by="row.names",
sort=FALSE) ## Merge with normalized count data
names(resdata.primary)[1] <- "Gene"
resdata.primary           <- resdata.primary[order(resdata.primary$padj), ] # Order by adjusted p-value
write.csv(resdata.primary, "../../Output/Transcriptomics/DESeq2/DESeq2results.csv") # write
# What are the Protein names of these DEGs?
# first gather gene IDs for the DEGs (note: this is also used for the pheatmap in the transformed Exp heatmap)
numDEGs_padj # 54 - number of DEGs (from above) - use as integer in call below
topgenes.IDs <- head(rownames(resprimary.ordered),numDEGs_padj) # call gene IDs for DEGs: pdj < 0.05 FDR < 0.05
length(topgenes.IDs) == numDEGs_padj # must be TRUE
# now load in the annotated csv
Airr_Cvirg_annotation <- read.csv(file="../../Output/Transcriptomics/Raw_counts_matrix/raw_count_matrix_WITH_ANNOTATION.csv",
sep = ',',
header = T) %>%
dplyr::select(c('Airradians_TranscriptID',
"blastxEval_CvirgTranscriptID",
"blastxEval_CvirgProteinID",
"blastxEval_CvirgGeneID",
"blastxEval_CvirgGOterms"))
# DEGs Protein IDs - lets take a look shall we!
DEGs_annotated <- Airr_Cvirg_annotation %>% filter(Airradians_TranscriptID %in% topgenes.IDs)
nrow(DEGs_annotated) # 52 - all are present!
View(DEGs_annotated)
assay(resprimary.ordered)
png("../../Output/Transcriptomics/DESeq2/FDR_hist.png", 1000, 1000, pointsize=20)
hist(resprimary$padj, breaks=20, col="grey") # view histogram
abline(h=c( (nrow(resprimary)*0.05),
((table(resprimary$padj < 0.1)[2]) + (nrow(resprimary)*0.1)),
((table(resprimary$padj < 0.05)[2]) + (nrow(resprimary)*0.05)) ),
col=c("blue", "red", "red"), lty=c(1,2,1), lwd=c(1, 3, 1)) # add line at
dev.off()
# volcano plot
png("../../Output/Transcriptomics/DESeq2/PrimaryTreatment-VolcanoPlot.png", 1000, 1000, pointsize=20)
EnhancedVolcano(resprimary,
lab = rownames(resprimary),
x = 'log2FoldChange',
y = 'padj',
title = 'pCO2 Treatment (Low v High)',
subtitle = "DESeq2 - Differential expression",
FCcutoff = 1,
pCutoff = 0.05,
pointSize = 4.0,
labSize = 6.0,
colAlpha = 1,
legendPosition = 'right',
legendLabSize = 12,
legendIconSize = 4.0,
widthConnectors = 0.75)
dev.off()
png("../../Output/Transcriptomics/DESeq2/dispersions.png", 1000, 1000, pointsize=20)
plotDispEsts(dds.run, main="dispersions")
dev.off()
rlogExp_df        <- as.data.frame(assay(rlogExp))
rlogExp_df        <- tibble::rownames_to_column(rlogExp_df, "Gene.ID")
rlogExp_DEGs      <- rlogExp_df %>%
dplyr::filter(Gene.ID %in% topgenes.IDs)
rlogExp_DEGs_melt <- reshape2::melt(rlogExp_DEGs, id.vars='Gene.ID') %>%
dplyr::rename(Sample.Name = variable, # to merge with 'Exp.metadata'
rlogExp = value) # the data to get mean SE values
DEGs_annotated   <- Airr_Cvirg_annotation %>%
dplyr::filter(Airradians_TranscriptID %in% topgenes.IDs) %>%
dplyr::select(Airradians_TranscriptID,blastxEval_CvirgProteinID) %>%
dplyr::rename(Gene.ID = Airradians_TranscriptID,
Protein.ID = blastxEval_CvirgProteinID)
rlogExp_DEGs_annotated <- merge(DEGs_annotated, rlogExp_DEGs_melt, by = "Gene.ID")
rlogExp_DEGs_MASTER    <- merge(rlogExp_DEGs_annotated,Exp.metadata, by = "Sample.Name")
rlogExp_DEGs_MEAN.SE   <- rlogExp_DEGs_MASTER %>%
dplyr:::group_by(Gene.ID, Protein.ID,pCO2) %>%
dplyr::summarise(mean.rlogExp    = mean(rlogExp),
sd.rlogExp     = sd(rlogExp),
n = n(),
sderror.rlogExp = sd.rlogExp/(sqrt(n))) %>%
dplyr::select(-n) %>%
dplyr::mutate(Protein_contig = paste(Protein.ID,
str_split(Gene.ID, "\\.", simplify=T)[,3],
sep="_"))
pd <- position_dodge(0.3)
topgenes.IDs
Protein_contig
df_loop
df_loop      <- rlogExp_DEGs_MEAN.SE %>%
dplyr::filter(Gene.ID %in% geneID_loop)
df_loop      <- rlogExp_DEGs_MEAN.SE %>%
dplyr::filter(Gene.ID %in% geneID_loop) %>%
dplyr::mutate(Protein_contig = str.replace("/", "",Protein_contig))
df_loop
str.replace(df_loop$Protein_contig,"/", "",)
str_remove_all(df_loop$Protein_contig,"-.)
for(i in 1:length(topgenes.IDs)) {
geneID_loop  <- topgenes.IDs[i]
df_loop      <- rlogExp_DEGs_MEAN.SE %>%
dplyr::filter(Gene.ID %in% geneID_loop) %>%
dplyr::mutate(Protein_contig = str.replace("/", "",Protein_contig))
plot_loop    <- df_loop %>%
ggplot(aes(x=pCO2,
y=mean.rlogExp,
fill=pCO2)) +  # , colour=supp, group=supp))
theme_classic() +
geom_errorbar(aes(ymin=mean.rlogExp-sderror.rlogExp,
ymax=mean.rlogExp+sderror.rlogExp),
colour="black",
str_remove_all(df_loop$Protein_contig,"-.")
str_remove_all(df_loop$Protein_contig,"-/")
str_remove_all(df_loop$Protein_contig,"/")
rlogExp_DEGs_MEAN.SE   <- rlogExp_DEGs_MASTER %>%
dplyr:::group_by(Gene.ID, Protein.ID,pCO2) %>%
dplyr::summarise(mean.rlogExp    = mean(rlogExp),
sd.rlogExp     = sd(rlogExp),
n = n(),
sderror.rlogExp = sd.rlogExp/(sqrt(n))) %>%
dplyr::select(-n) %>%
dplyr::mutate(Protein_contig = paste(Protein.ID,
str_split(Gene.ID, "\\.", simplify=T)[,3],
sep="_"))
pd <- position_dodge(0.3)
for(i in 1:length(topgenes.IDs)) {
geneID_loop  <- topgenes.IDs[i]
df_loop      <- rlogExp_DEGs_MEAN.SE %>%
dplyr::filter(Gene.ID %in% geneID_loop) %>%
dplyr::mutate(Protein_contig = str_remove_all(Protein_contig,"/"))
plot_loop    <- df_loop %>%
ggplot(aes(x=pCO2,
y=mean.rlogExp,
fill=pCO2)) +  # , colour=supp, group=supp))
theme_classic() +
geom_errorbar(aes(ymin=mean.rlogExp-sderror.rlogExp,
ymax=mean.rlogExp+sderror.rlogExp),
colour="black",
width=.1,
position=pd) +
geom_point(size = 4,
shape=21,
position=pd) +
xlab("pCO2 treatment") +
ylab("") +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("white",
"grey50")) +
ggtitle(df_loop[1,7]) +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.ticks.length=unit(.25, "cm")) +
theme(legend.position = "none")
pdf(paste("../../Output/Transcriptomics/DESeq2/Plots_MeanSE/",df_loop[1,7],".pdf", sep = ''), width=5, height=5)
print(plot_loop)
dev.off()
}
rlogExp_DEGs_MEAN.SE   <- rlogExp_DEGs_MASTER %>%
dplyr:::group_by(Gene.ID, Protein.ID,pCO2) %>%
dplyr::summarise(mean.rlogExp    = mean(rlogExp),
sd.rlogExp     = sd(rlogExp),
n = n(),
sderror.rlogExp = sd.rlogExp/(sqrt(n))) %>%
dplyr::select(-n) %>%
dplyr::mutate(Protein_contig = paste(substr(Protein.ID,1,15),
str_split(Gene.ID, "\\.", simplify=T)[,3],
sep="_"))
for(i in 1:length(topgenes.IDs)) {
geneID_loop  <- topgenes.IDs[i]
df_loop      <- rlogExp_DEGs_MEAN.SE %>%
dplyr::filter(Gene.ID %in% geneID_loop) %>%
dplyr::mutate(Protein_contig = str_remove_all(Protein_contig,"/"))
plot_loop    <- df_loop %>%
ggplot(aes(x=pCO2,
y=mean.rlogExp,
fill=pCO2)) +  # , colour=supp, group=supp))
theme_classic() +
geom_errorbar(aes(ymin=mean.rlogExp-sderror.rlogExp,
ymax=mean.rlogExp+sderror.rlogExp),
colour="black",
width=.1,
position=pd) +
geom_point(size = 4,
shape=21,
position=pd) +
xlab("pCO2 treatment") +
ylab("") +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("white",
"grey50")) +
ggtitle(df_loop[1,7]) +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.ticks.length=unit(.25, "cm")) +
theme(legend.position = "none")
pdf(paste("../../Output/Transcriptomics/DESeq2/Plots_MeanSE/",df_loop[1,7],".pdf", sep = ''), width=5, height=5)
print(plot_loop)
dev.off()
}
for(i in 1:length(topgenes.IDs)) {
geneID_loop  <- topgenes.IDs[i]
df_loop      <- rlogExp_DEGs_MEAN.SE %>%
dplyr::filter(Gene.ID %in% geneID_loop) %>%
dplyr::mutate(Protein_contig = str_remove_all(Protein_contig,"/"))
plot_loop    <- df_loop %>%
ggplot(aes(x=pCO2,
y=mean.rlogExp,
fill=pCO2)) +  # , colour=supp, group=supp))
theme_classic() +
geom_errorbar(aes(ymin=mean.rlogExp-sderror.rlogExp,
ymax=mean.rlogExp+sderror.rlogExp),
colour="black",
width=.1,
position=pd) +
geom_point(size = 4,
shape=21,
position=pd) +
xlab("pCO2 treatment") +
ylab("") +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("white",
"grey50")) +
ggtitle(df_loop[1,7]) +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.ticks.length=unit(.25, "cm")) +
theme(legend.position = "none")
pdf(paste("../../Output/Transcriptomics/DESeq2/Plots_MeanSE/",df_loop[1,7],".pdf", sep = ''), width=5, height=5)
print(plot_loop)
dev.off()
}
rlogExp_DEGs_MEAN.SE   <- rlogExp_DEGs_MASTER %>%
dplyr:::group_by(Gene.ID, Protein.ID,pCO2) %>%
dplyr::summarise(mean.rlogExp    = mean(rlogExp),
sd.rlogExp     = sd(rlogExp),
n = n(),
sderror.rlogExp = sd.rlogExp/(sqrt(n))) %>%
dplyr::select(-n) %>%
dplyr::mutate(Protein_contig = paste(substr(Protein.ID,1,30),
str_split(Gene.ID, "\\.", simplify=T)[,3],
sep="_"))
pd <- position_dodge(0.3)
for(i in 1:length(topgenes.IDs)) {
geneID_loop  <- topgenes.IDs[i]
df_loop      <- rlogExp_DEGs_MEAN.SE %>%
dplyr::filter(Gene.ID %in% geneID_loop) %>%
dplyr::mutate(Protein_contig = str_remove_all(Protein_contig,"/"))
plot_loop    <- df_loop %>%
ggplot(aes(x=pCO2,
y=mean.rlogExp,
fill=pCO2)) +  # , colour=supp, group=supp))
theme_classic() +
geom_errorbar(aes(ymin=mean.rlogExp-sderror.rlogExp,
ymax=mean.rlogExp+sderror.rlogExp),
colour="black",
width=.1,
position=pd) +
geom_point(size = 4,
shape=21,
position=pd) +
xlab("pCO2 treatment") +
ylab("") +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("white",
"grey50")) +
ggtitle(df_loop[1,7]) +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.ticks.length=unit(.25, "cm")) +
theme(legend.position = "none")
pdf(paste("../../Output/Transcriptomics/DESeq2/Plots_MeanSE/",df_loop[1,7],".pdf", sep = ''), width=5, height=5)
print(plot_loop)
dev.off()
}
for(i in 1:length(topgenes.IDs)) {
geneID_loop  <- topgenes.IDs[i]
df_loop      <- rlogExp_DEGs_MEAN.SE %>%
dplyr::filter(Gene.ID %in% geneID_loop) %>%
dplyr::mutate(Protein_contig = str_remove_all(Protein_contig,"/"))
plot_loop    <- df_loop %>%
ggplot(aes(x=pCO2,
y=mean.rlogExp,
fill=pCO2)) +  # , colour=supp, group=supp))
theme_classic() +
geom_errorbar(aes(ymin=mean.rlogExp-sderror.rlogExp,
ymax=mean.rlogExp+sderror.rlogExp),
colour="black",
width=.1,
position=pd) +
geom_point(size = 4,
shape=21,
position=pd) +
xlab("pCO2 treatment") +
ylab("") +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("white",
"grey50")) +
ggtitle(df_loop[1,7]) +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.ticks.length=unit(.25, "cm")) +
theme(legend.position = "none")
pdf(paste("../../Output/Transcriptomics/DESeq2/Plots_MeanSE/",df_loop[1,7],".pdf", sep = ''), width=5, height=5)
print(plot_loop)
dev.off()
}
df_loop
df_loop[1,4]
for(i in 1:length(topgenes.IDs)) {
geneID_loop  <- topgenes.IDs[i]
df_loop      <- rlogExp_DEGs_MEAN.SE %>%
dplyr::filter(Gene.ID %in% geneID_loop) %>%
dplyr::mutate(Protein_contig = str_remove_all(Protein_contig,"/"))
plot_loop    <- df_loop %>%
ggplot(aes(x=pCO2,
y=mean.rlogExp,
fill=pCO2)) +  # , colour=supp, group=supp))
theme_classic() +
geom_errorbar(aes(ymin=mean.rlogExp-sderror.rlogExp,
ymax=mean.rlogExp+sderror.rlogExp),
colour="black",
width=.1,
position=pd) +
geom_point(size = 4,
shape=21,
position=pd) +
xlab("pCO2 treatment") +
ylab("") +                 # note the mean was first by sample ID THEN by treatment
scale_fill_manual(values=c("white",
"grey50")) +
ggtitle(df_loop[1,7]) +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.ticks.length=unit(.25, "cm")) +
theme(legend.position = "none")
if(df_loop[1,4]>df_loop[2,4]) { # Upregulated, high pCO2 == high expression
pdf(paste("../../Output/Transcriptomics/DESeq2/Plots_MeanSE/Upregulated_DEGs/",df_loop[1,7],".pdf", sep = ''), width=5, height=5)
print(plot_loop)
dev.off()
} else {
pdf(paste("../../Output/Transcriptomics/DESeq2/Plots_MeanSE/Downregulated_DEGs/",df_loop[1,7],".pdf", sep = ''), width=5, height=5)
print(plot_loop)
dev.off()
}
}
