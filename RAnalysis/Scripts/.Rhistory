RR_master
RR_formatted <- RR_master %>%
dplyr::mutate(Date = as.Date(Date, format="%m/%d/%Y")) %>%
dplyr::mutate(Gen = case_when(Date < '2022-08-30' ~ "F1s",
Date > '2022-03-01' ~ "F2s")) %>%
dplyr::mutate(Gen_lifestage = case_when(Gen == 'F1s' & Date < '2022-02-02' ~ "F1s A: pre-winter",
Gen == 'F1s' & Date > '2021-10-26' ~ "F1s B: post-winter",
Date == '2022-08-30' & Num_indivs == 5 ~ "F2s A: larvae",
Date == '2022-08-30' & Num_indivs == 1 ~ "F2s B: spat"))%>%
dplyr::filter(!Fed_Unfed %in% 'Low food')
RR_formatted
WDW.BOXPLOT_facetted <- RR_formatted %>%
ggplot(aes(x = factor(Date),
y = resp_umol_L_hr_mg_WDW,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("white","grey")) +
theme_classic() +
#ylim(0, 12) +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single")) +
facet_wrap(~Gen_lifestage, scales = "free")
WDW.BOXPLOT_facetted
F1s.BOXPLOT_TDW_facetted <- RR_formatted %>%
dplyr::filter(!Gen %in% 'F2s') %>%
ggplot(aes(x = factor(Date),
y = resp_µmol_L_mg_TDW_hr,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("white","grey")) +
theme_classic() +
ylim(0, 0.2) +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single")) +
facet_wrap(~Gen_lifestage, scales = "free")
F1s.BOXPLOT_TDW_facetted # not that we do not have TDW for 9/14 and 9/30 data
F1s.BOXPLOT_WDW_facetted <- RR_formatted %>%
dplyr::filter(!Gen %in% 'F2s') %>%
ggplot(aes(x = factor(Date),
y = resp_umol_L_hr_mg_WDW,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("white","grey")) +
theme_classic() +
ylim(0, 0.2) +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single")) +
facet_wrap(~Gen_lifestage, scales = "free")
F1s.BOXPLOT_WDW_facetted # not that we do not have TDW for 9/14 and 9/30 data
F1s.BOXPLOT_WDW_facetted <- RR_formatted %>%
dplyr::filter(!Gen %in% 'F2s') %>%
ggplot(aes(x = factor(Date),
y = resp_umol_L_hr_mg_WDW,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("white","grey")) +
theme_classic() +
ylim(0, 0.2) +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single")) +
facet_wrap(~Gen_lifestage, scales = "free")
F1s.BOXPLOT_WDW_facetted # not that we do not have TDW for 9/14 and 9/30 data
WDW.BOXPLOT_facetted <- RR_formatted %>%
ggplot(aes(x = factor(Date),
y = resp_umol_L_hr_mg_WDW,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("white","grey")) +
theme_classic() +
#ylim(0, 12) +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single")) +
facet_wrap(~Gen_lifestage, scales = "free")
WDW.BOXPLOT_facetted
F1s.BOXPLOT_TDW_facetted <- RR_formatted %>%
dplyr::filter(!Gen %in% 'F2s') %>%
ggplot(aes(x = factor(Date),
y = resp_µmol_L_mg_TDW_hr,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("white","grey")) +
theme_classic() +
ylim(0, 0.2) +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single")) +
facet_wrap(~Gen_lifestage, scales = "free")
F1s.BOXPLOT_TDW_facetted # not that we do not have TDW for 9/14 and 9/30 data
F1s.BOXPLOT_WDW_facetted <- RR_formatted %>%
dplyr::filter(!Gen %in% 'F2s') %>%
ggplot(aes(x = factor(Date),
y = resp_umol_L_hr_mg_WDW,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("white","grey")) +
theme_classic() +
# ylim(0, 0.2) +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single")) +
facet_wrap(~Gen_lifestage, scales = "free")
F1s.BOXPLOT_WDW_facetted # not that we do not have TDW for 9/14 and 9/30 data
F1s.BOXPLOT_WDW_facetted <- RR_formatted %>%
dplyr::filter(!Gen %in% 'F2s') %>%
ggplot(aes(x = factor(Date),
y = resp_umol_L_hr_mg_WDW,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("white","grey")) +
theme_classic() +
# ylim(0, 0.2) +
ggtitle("Whole Dry weight") +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single")) +
facet_wrap(~Gen_lifestage, scales = "free")
F1s.BOXPLOT_WDW_facetted # not that we do not have TDW for 9/14 and 9/30 data
F1s.BOXPLOT_TDW_facetted <- RR_formatted %>%
dplyr::filter(!Gen %in% 'F2s') %>%
ggplot(aes(x = factor(Date),
y = resp_µmol_L_mg_TDW_hr,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("white","grey")) +
theme_classic() +
#ylim(0, 0.2) +
ggtitle("Tissue Dry weight") +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single")) +
facet_wrap(~Gen_lifestage, scales = "free")
F1s.BOXPLOT_TDW_facetted # not that we do not have TDW for 9/14 and 9/30 data
F1s.BOXPLOT_TDW_bfactor <- RR_formatted %>%
dplyr::filter(!Gen %in% 'F2s') %>%
dplyr::mutate(resp_umol_L_hr_bFactorNorm = resp_umol_L_hr/(Dry_Tissue_weight^bTDW)) %>%
ggplot(aes(x = factor(Date),
y = resp_umol_L_hr_bFactorNorm,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("white","grey")) +
theme_classic() +
#ylim(0, 0.2) +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single")) +
facet_wrap(~Gen_lifestage) #, scales = "free)
bTDW = 0.863 # review the outlier-omitted b factor plot in previous chunk
F1s.BOXPLOT_TDW_bfactor <- RR_formatted %>%
dplyr::filter(!Gen %in% 'F2s') %>%
dplyr::mutate(resp_umol_L_hr_bFactorNorm = resp_umol_L_hr/(Dry_Tissue_weight^bTDW)) %>%
ggplot(aes(x = factor(Date),
y = resp_umol_L_hr_bFactorNorm,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("white","grey")) +
theme_classic() +
#ylim(0, 0.2) +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single")) +
facet_wrap(~Gen_lifestage) #, scales = "free)
F1s.BOXPLOT_TDW_bfactor # not that we do not have TDW for 9/14 and 9/30 data
F1s.BOXPLOT_TDW_bfactor <- RR_formatted %>%
dplyr::filter(!Gen %in% 'F2s') %>%
dplyr::mutate(resp_umol_L_hr_bFactorNorm = resp_umol_L_hr/(Dry_Tissue_weight^bTDW)) %>%
ggplot(aes(x = factor(Date),
y = resp_umol_L_hr_bFactorNorm,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("white","grey")) +
theme_classic() +
#ylim(0, 0.2) +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single")) +
facet_wrap(~Gen_lifestage, scales = "free") #, scales = "free)
F1s.BOXPLOT_TDW_bfactor # not that we do not have TDW for 9/14 and 9/30 data
print(ggarrange(MO2_b.factorWDW_PLOT, MO2_b.factorWDW_PLOT_facetted, nrow = 2, ncol = 1)) # print the model diagnostics
RR_master_OM_WDW            <- RR_master %>% filter(!is.na(resp_umol_L_hr)) %>%
dplyr::filter(!is.na(whole_Dry_weight))
RR_master_OM_WDW$log10_VO2  <- log10(as.numeric(RR_master_OM_WDW$resp_umol_L_hr)) # assign resp value
RR_master_OM_WDW$log10_WDW  <- log10(as.numeric(RR_master_OM_WDW$whole_Dry_weight)) # assign length value
summary(lm(RR_master_OM_WDW$log10_VO2~RR_master_OM_WDW$log10_WDW)) # 0.58873 == b factor
MO2_b.factorWDW_PLOT <- RR_master_OM_WDW %>%
ggplot(aes(x=log10_WDW, y=log10_VO2)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_BodyMass; WDW in g") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none") +
ggtitle("Metabolic scaling: log10_MO2 = log10_a + (b.factor * log10_BodyMass)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "left")
MO2_b.factorWDW_PLOT
MO2_b.factorWDW_PLOT_facetted <- RR_master_OM_WDW %>%
ggplot(aes(x=log10_WDW, y=log10_VO2, color = pCO2)) +
geom_point() +
scale_color_manual(values=c("blue","orange")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_BodyMass; WDW in g") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none") +
ggtitle("Metabolic scaling: log10_MO2 = log10_a + (b.factor * log10_BodyMass)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "left") +
facet_wrap(~pCO2)
MO2_b.factorWDW_PLOT_facetted
print(ggarrange(MO2_b.factorWDW_PLOT, MO2_b.factorWDW_PLOT_facetted, nrow = 2, ncol = 1)) # print the model diagnostics
print(ggarrange(F1s.BOXPLOT_TDW_facetted, F1s.BOXPLOT_TDW_bfactor, nrow = 2, ncol = 1)) # print the model diagnostics
F1s.BOXPLOT_TDW_bfactor <- RR_formatted %>%
dplyr::filter(!Gen %in% 'F2s') %>%
dplyr::mutate(resp_umol_L_hr_bFactorNorm = resp_umol_L_hr/(Dry_Tissue_weight^bTDW)) %>%
ggplot(aes(x = factor(Date),
y = resp_umol_L_hr_bFactorNorm,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("white","grey")) +
theme_classic() +
ggtitle("b factor") +
#ylim(0, 0.2) +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single")) +
facet_wrap(~Gen_lifestage, scales = "free") #, scales = "free)
F1s.BOXPLOT_TDW_bfactor # not that we do not have TDW for 9/14 and 9/30 data
print(ggarrange(F1s.BOXPLOT_TDW_facetted, F1s.BOXPLOT_TDW_bfactor, nrow = 2, ncol = 1)) # print the model diagnostics
pdf(paste0(filename = "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Respiration/Boxplots_bFactor_TissueDryWeight.pdf"), width = 8, height = 8)
print(ggarrange(F1s.BOXPLOT_TDW_facetted, F1s.BOXPLOT_TDW_bfactor, nrow = 2, ncol = 1)) # print the model diagnostics
dev.off()
pdf(paste0(filename = "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Respiration/Boxplots_bFactor_TissueDryWeight.pdf"), width = 8, height = 8)
print(ggarrange(F1s.BOXPLOT_TDW_facetted, F1s.BOXPLOT_TDW_bfactor, nrow = 2, ncol = 1)) # print the model diagnostics
dev.off()
install.packages("LDheatmap")
install.packages("reshape2")
install.packages("gtools")
install.packages("LDheatmap")
BiocManager::install("snpStats")
install.packages("LDheatmap")
?bc
print(ggarrange(Length_WholeDryWeight_all, Length_WholeDryWeight_facetted, nrow = 2, ncol = 1)) # print the model diagnostics
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(ggplot2)
library(forcats)
library(lme4)
library(lmerTest)
library(performance)
library(car)
library(kableExtra)
library(pander)
library(data.table)
library(Rmisc)
library(devtools)
library(ggpubr)
library(SciViews)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis") # personal computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis") # Work computer
# LOAD DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
RR_master <- read.csv(file="Output/Respiration/Calculated_Resp_Master.csv", header=T) %>%
filter(!Food %in% 'unfed') %>% # view script REspirationRates_Calc.Rmd for the road to this master file
dplyr::mutate(resp_umol_L_hr_mg_WDW = resp_umol_L_hr/whole_Dry_weight)
MO2_b.factorWDW_PLOT
MO2_b.factorWDW_PLOT
print(ggarrange(MO2_b.factorWDW_PLOT, MO2_b.factorWDW_PLOT_facetted, nrow = 2, ncol = 1)) # print the model diagnostics
MO2_b.factorWDW_PLOT_facetted
MO2_b.factorWDW_PLOT <- RR_master_OM_WDW %>%
ggplot(aes(x=log10_WDW, y=log10_VO2)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_BodyMass; WDW in g") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none") +
ggtitle("Metabolic scaling: log10_MO2 = log10_a + (b.factor * log10_BodyMass)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "left")
MO2_b.factorWDW_PLOT
RR_master_OM_WDW            <- RR_master %>% filter(!is.na(resp_umol_L_hr)) %>%
dplyr::filter(!is.na(whole_Dry_weight))
RR_master_OM_WDW$log10_VO2  <- log10(as.numeric(RR_master_OM_WDW$resp_umol_L_hr)) # assign resp value
RR_master_OM_WDW$log10_WDW  <- log10(as.numeric(RR_master_OM_WDW$whole_Dry_weight)) # assign length value
summary(lm(RR_master_OM_WDW$log10_VO2~RR_master_OM_WDW$log10_WDW)) # 0.58873 == b factor
MO2_b.factorWDW_PLOT <- RR_master_OM_WDW %>%
ggplot(aes(x=log10_WDW, y=log10_VO2)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_BodyMass; WDW in g") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none") +
ggtitle("Metabolic scaling: log10_MO2 = log10_a + (b.factor * log10_BodyMass)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "left")
RR_master_OM_WDW
RR_master_OM_WDW %>%
ggplot(aes(x=log10_WDW, y=log10_VO2)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_BodyMass; WDW in g") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none") +
ggtitle("Metabolic scaling: log10_MO2 = log10_a + (b.factor * log10_BodyMass)") +
geom_smooth(method = lm, color = 'red')
RR_master_OM_WDW %>%
ggplot(aes(x=log10_WDW, y=log10_VO2)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_BodyMass; WDW in g") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none") +
ggtitle("Metabolic scaling: log10_MO2 = log10_a + (b.factor * log10_BodyMass)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "left")
library(dplyr)
library(ggplot2)
library(forcats)
library(lme4)
library(lmerTest)
library(performance)
library(car)
library(kableExtra)
library(pander)
library(data.table)
library(Rmisc)
library(devtools)
library(ggpubr)
library(SciViews)
MO2_b.factorWDW_PLOT <- RR_master_OM_WDW %>%
ggplot(aes(x=log10_WDW, y=log10_VO2)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_BodyMass; WDW in g") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none") +
ggtitle("Metabolic scaling: log10_MO2 = log10_a + (b.factor * log10_BodyMass)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "left")
?ggpmisc
library(ggpmisc)
install.packages("ggpmisc")
install.packages("ggpmisc")
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(ggplot2)
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(ggplot2)
library(forcats)
library(lme4)
library(lme4)
library(lmerTest)
library(lme4)
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(rlang)
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
install.packages("https://cran.r-project.org/src/contrib/Archive/rlang/rlang_1.0.6.tar.gz", repos = NULL, type="source")
install.packages("Rtools")
install.packages("https://cran.r-project.org/src/contrib/Archive/rlang/rlang_1.0.6.tar.gz", repos = NULL, type="source")
install.packages("Rtools", dependencies = FALSE)
