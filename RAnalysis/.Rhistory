dplyr::filter(!(log10_TDW > -1 & log10_VO2 < 0)) %>%  # outliers ommited (should be 2 data points)
ggplot(aes(x=log10_TDW, y=log10_VO2)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_BodyMass; TDW in g") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none") +
ggtitle("Metabolic scaling: log10_MO2 = log10_a + (b.factor * log10_BodyMass)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "left")
MO2_b.factor_PLOT_facetted_OM <- RR_master_OM %>%
dplyr::filter(!(log10_TDW > -1 & log10_VO2 < 0)) %>%  # outliers ommited (should be 2 data points)
ggplot(aes(x=log10_TDW, y=log10_VO2, color = pCO2)) +
geom_point() +
scale_color_manual(values=c("blue","orange")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_BodyMass; TDW in g") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none") +
ggtitle("Metabolic scaling: log10_MO2 = log10_a + (b.factor * log10_BodyMass)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "left") +
facet_wrap(~pCO2)
print(ggarrange(MO2_b.factor_PLOT_OM, MO2_b.factor_PLOT_facetted_OM, nrow = 2, ncol = 1)) # print the model diagnostics
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# GET B FACTOR FOR ALL AVAILABLE INDIVIDUALS WITH LENGTH AND MO2 ::::::::::::::::::::::::::::::
RR_master_OM               <- RR_master %>% filter(!is.na(resp_umol_L_hr)) %>%  filter(!is.na(Length_um))
RR_master_OM$log10_VO2     <- log10(as.numeric(RR_master_OM$resp_umol_L_hr)) # assign resp value
RR_master_OM$log10_Length  <- log10(as.numeric(RR_master_OM$Length_um)) # assign length value
MO2_b.factorLENGTH_PLOT <- RR_master_OM %>%
#filter(!resp_umol_L_hr < 0.08) %>%
ggplot(aes(x=log10_Length, y=log10_VO2)) +
geom_point() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none") +
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
label.x.npc = "left")
MO2_b.factorLENGTH_PLOT_facetted <- RR_master_OM %>%
ggplot(aes(x=log10_Length, y=log10_VO2, color = pCO2)) +
geom_point() +
scale_color_manual(values=c("blue","orange")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none") +
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T,
aes(label = paste(..eq.label..,
..rr.label.., sep = "~~~")),
label.x.npc = "left") +
facet_wrap(~pCO2)
print(ggarrange(MO2_b.factorLENGTH_PLOT, MO2_b.factorLENGTH_PLOT_facetted, nrow = 2, ncol = 1)) # print the model diagnostics
RR_master_OM_WDW            <- RR_master %>% filter(!is.na(resp_umol_L_hr)) %>%
dplyr::filter(!is.na(whole_Dry_weight))
RR_master_OM_WDW$log10_VO2  <- log10(as.numeric(RR_master_OM_WDW$resp_umol_L_hr)) # assign resp value
RR_master_OM_WDW$log10_WDW  <- log10(as.numeric(RR_master_OM_WDW$whole_Dry_weight)) # assign length value
MO2_b.factorWDW_PLOT <- RR_master_OM_WDW %>%
ggplot(aes(x=log10_WDW, y=log10_VO2)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_BodyMass; WDW in g") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none") +
ggtitle("Metabolic scaling: log10_MO2 = log10_a + (b.factor * log10_BodyMass)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "left")
MO2_b.factorWDW_PLOT_facetted <- RR_master_OM_WDW %>%
ggplot(aes(x=log10_WDW, y=log10_VO2, color = pCO2)) +
geom_point() +
scale_color_manual(values=c("blue","orange")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_BodyMass; WDW in g") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none") +
ggtitle("Metabolic scaling: log10_MO2 = log10_a + (b.factor * log10_BodyMass)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "left") +
facet_wrap(~pCO2)
# OUTPUT PLOTS
pdf(paste0(filename = "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Respiration/metabolic_scaling/MetabolicScaling_bFactor_WDW.pdf"), width = 8, height = 8)
print(ggarrange(MO2_b.factorWDW_PLOT, MO2_b.factorWDW_PLOT_facetted, nrow = 2, ncol = 1)) # print the model diagnostics
dev.off()
# OUTPUT PLOTS
pdf(paste0(filename = "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Respiration/metabolic_scaling/MetabolicScaling_bFactor_LENGTH.pdf"), width = 8, height = 8)
print(ggarrange(MO2_b.factorLENGTH_PLOT, MO2_b.factorLENGTH_PLOT_facetted, nrow = 2, ncol = 1)) # print the model diagnostics
dev.off()
print(ggarrange(MO2_b.factorLENGTH_PLOT, MO2_b.factorLENGTH_PLOT_facetted, nrow = 2, ncol = 1)) # print the model diagnostics
# OUTPUT PLOTS
pdf(paste0(filename = "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Respiration/metabolic_scaling/MetabolicScaling_bFactor_WDW.pdf"), width = 8, height = 8)
print(ggarrange(MO2_b.factorWDW_PLOT, MO2_b.factorWDW_PLOT_facetted, nrow = 2, ncol = 1)) # print the model diagnostics
dev.off()
print(ggarrange(MO2_b.factorWDW_PLOT, MO2_b.factorWDW_PLOT_facetted, nrow = 2, ncol = 1)) # print the model diagnostics
RR_formatted <- RR_master %>%
dplyr::mutate(Date = as.Date(Date, format="%m/%d/%Y")) %>%
dplyr::mutate(Gen = case_when(Date < '2022-03-01' ~ "F1s",
Date > '2022-02-02' & filetype == 'LoLigo_data' ~ "F1s",
Date > '2022-02-02' & filetype == 'SDR_data' ~ "F2s")) %>%
dplyr::mutate(Gen_lifestage = case_when(Gen == 'F1s' & Date < '2021-10-26' ~ "F1s A: small_juv",
Gen == 'F1s' &  Date > '2021-09-30' &
Date < '2022-03-01' ~ "F1s B: mid_juv",
Gen == 'F1s' &
Date > '2022-02-02' ~ "F1s C: late_juv_adult",
Date == '2022-08-30' & Num_indivs == 5 ~ "F2s A: larvae",
Date == '2022-08-30' & Num_indivs == 1 ~ "F2s B: spat")) %>%
dplyr::filter(!Fed_Unfed %in% 'Low food')
RR_formatted_F1s <- RR_formatted %>% dplyr::filter(!Gen %in% 'F2s')
f
F1s.BOXPLOT_TDW_facetted <- RR_formatted_F1s %>%
ggplot(aes(x = factor(Date),
y = resp_umol_L_mg_TDW_hr,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("forestgreen","orange")) +
theme_classic() +
#ylim(0, 0.2) +
ggtitle("Tissue Dry weight") +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single")) #+
#facet_wrap(~Gen_lifestage, scales = "free")
F1s.BOXPLOT_TDW_facetted # not that we do not have TDW for 9/14 and 9/30 data
F1s.BOXPLOT <- RR_formatted_F1s %>%
ggplot(aes(x = factor(Date),
y = resp_umol_L,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("forestgreen","orange")) +
theme_classic() +
#ylim(0, 0.2) +
ggtitle("Tissue Dry weight") +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single"))
F1s.BOXPLOT
RR_formatted_F1s
F1s.BOXPLOT <- RR_formatted_F1s %>%
ggplot(aes(x = factor(Date),
y = resp_umol_L_hr,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("forestgreen","orange")) +
theme_classic() +
#ylim(0, 0.2) +
ggtitle("Tissue Dry weight") +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single"))
F1s.BOXPLOT
ggarrange(F1s.BOXPLOT_facetted,F1s.BOXPLOT)
ggarrange(F1s.BOXPLOT_facetted,F1s.BOXPLOT)
F1s.BOXPLOT_facetted <- RR_formatted_F1s %>%
ggplot(aes(x = factor(Date),
y = resp_umol_L_hr,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("forestgreen","orange")) +
theme_classic() +
#ylim(0, 0.2) +
ggtitle("Raw resp") +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single")) +
facet_wrap(~Gen_lifestage, scales = "free")
ggarrange(F1s.BOXPLOT_facetted,F1s.BOXPLOT)
F1s.BOXPLOT_Length_facetted <- RR_formatted_F1s %>%
ggplot(aes(x = factor(Date),
y = resp_umol_L_mm_Length_hr,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("forestgreen","orange")) +
theme_classic() +
#ylim(0, 0.2) +
ggtitle("Resp / Length (raw)") +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single")) +
facet_wrap(~Gen_lifestage, scales = "free")
F1s.BOXPLOT_Length_nofacet <- RR_formatted_F1s %>%
ggplot(aes(x = factor(Date),
y = resp_umol_L_mm_Length_hr,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("forestgreen","orange")) +
theme_classic() +
ggtitle("Resp / Length (raw)") +
#ylim(0, 0.2) +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single"))
print(ggarrange(F1s.BOXPLOT_Length_facetted,F1s.BOXPLOT_Length_nofacet, nrow = 1, ncol = 2)) # print the model diagnostics
pdf(paste0(filename = "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Respiration/Respiration_Boxplots_LENGTH_raw.pdf"), width = 18, height = 8)
print(ggarrange(F1s.BOXPLOT_Length_facetted,F1s.BOXPLOT_Length_nofacet, nrow = 1, ncol = 2)) # print the model diagnostics
dev.off()
bLength = 2.18 # review the outlier-omitted b factor plot in previous chunk
meanLength   <- mean(RR_formatted_F1s$Length_um/1000) # 16.89333 mm
medianLength <- median(RR_formatted_F1s$Length_um/1000) # 12.61 mm
#View(RR_formatted_F1s$Length_um)
RR_formatted_F1s.length <- RR_formatted_F1s %>%
dplyr::mutate(Length_mm = Length_um/1000) %>%
dplyr::mutate(resp_umol_L_hr_bFactorNormLength.MEAN = (resp_umol_L_hr)*((meanLength/Length_mm)^bLength) ) %>% # RStd = (Lexp/Lstd)1.77 * RRexp
dplyr::mutate(resp_umol_L_hr_bFactorNormLength.MEDIAN = (resp_umol_L_hr)*((medianLength/Length_mm)^bLength) ) # RStd = (Lexp/Lstd)1.77 * RRexp
F1s.BOXPLOT_Length_bfactor.MEAN <- RR_formatted_F1s.length %>%
ggplot(aes(x = factor(Date),
y = resp_umol_L_hr_bFactorNormLength.MEAN,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("forestgreen","orange")) +
theme_classic() +
ggtitle("Resp * [ ( meanLength / Length_meas)^2.22 ]") +
#ylim(0, 0.2) +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single")) +
facet_wrap(~Gen_lifestage, scales = "free") #, scales = "free)
F1s.BOXPLOT_Length_bfactor.MEAN.nofacet <- RR_formatted_F1s.length %>%
ggplot(aes(x = factor(Date),
y = resp_umol_L_hr_bFactorNormLength.MEAN,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("forestgreen","orange")) +
theme_classic() +
ggtitle("Resp * [ (meanLength/Length_meas)^2.22 ]") +
#ylim(0, 0.2) +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single")) # no facet
# save
pdf(paste0(filename = "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Respiration/Respiration_Boxplots_LENGTH_bfactorMEAN.pdf"), width = 18, height = 8)
print(ggarrange(F1s.BOXPLOT_Length_bfactor.MEAN,F1s.BOXPLOT_Length_bfactor.MEAN.nofacet, nrow = 1, ncol = 2)) # print the model diagnostics
dev.off()
# print for Rmarkdown
print(ggarrange(F1s.BOXPLOT_Length_bfactor.MEAN,F1s.BOXPLOT_Length_bfactor.MEAN.nofacet, nrow = 1, ncol = 2)) # print the model diagnostics
bLength = 2.18 # review the outlier-omitted b factor plot in previous chunk
meanLength   <- mean(RR_formatted_F1s$Length_um/1000) # 16.89333 mm
medianLength <- median(RR_formatted_F1s$Length_um/1000) # 12.61 mm
#View(RR_formatted_F1s$Length_um)
RR_formatted_F1s.length <- RR_formatted_F1s %>%
dplyr::mutate(Length_mm = Length_um/1000) %>%
dplyr::mutate(resp_umol_L_hr_bFactorNormLength.MEAN = (resp_umol_L_hr)*((meanLength/Length_mm)^bLength) ) %>% # RStd = (Lexp/Lstd)1.77 * RRexp
dplyr::mutate(resp_umol_L_hr_bFactorNormLength.MEDIAN = (resp_umol_L_hr)*((medianLength/Length_mm)^bLength) ) # RStd = (Lexp/Lstd)1.77 * RRexp
F1s.BOXPLOT_Length_bfactor.MEAN <- RR_formatted_F1s.length %>%
ggplot(aes(x = factor(Date),
y = resp_umol_L_hr_bFactorNormLength.MEAN,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("forestgreen","orange")) +
theme_classic() +
ggtitle("Resp * [ ( meanLength / Length_meas)^2.18 ]") +
#ylim(0, 0.2) +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single")) +
facet_wrap(~Gen_lifestage, scales = "free") #, scales = "free)
F1s.BOXPLOT_Length_bfactor.MEAN.nofacet <- RR_formatted_F1s.length %>%
ggplot(aes(x = factor(Date),
y = resp_umol_L_hr_bFactorNormLength.MEAN,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("forestgreen","orange")) +
theme_classic() +
ggtitle("Resp * [ (meanLength/Length_meas)^2.18 ]") +
#ylim(0, 0.2) +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single")) # no facet
# save
pdf(paste0(filename = "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Respiration/Respiration_Boxplots_LENGTH_bfactorMEAN.pdf"), width = 18, height = 8)
print(ggarrange(F1s.BOXPLOT_Length_bfactor.MEAN,F1s.BOXPLOT_Length_bfactor.MEAN.nofacet, nrow = 1, ncol = 2)) # print the model diagnostics
dev.off()
F1s.BOXPLOT_Length_bfactor.MEDIAN <- RR_formatted_F1s.length %>%
ggplot(aes(x = factor(Date),
y = resp_umol_L_hr_bFactorNormLength.MEDIAN,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("forestgreen","orange")) +
theme_classic() +
ggtitle("Resp / [ (Length_meas / medianLength)^2.18 ]") +
#ylim(0, 0.2) +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single")) +
facet_wrap(~Gen_lifestage, scales = "free") #, scales = "free)
F1s.BOXPLOT_Length_bfactor.MEDIAN.nofacet <- RR_formatted_F1s.length %>%
ggplot(aes(x = factor(Date),
y = resp_umol_L_hr_bFactorNormLength.MEDIAN,
fill = pCO2)) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_fill_manual(values=c("forestgreen","orange")) +
theme_classic() +
ggtitle("Resp * [ ( medianLength / Length_meas)^2.18 ]") +
#ylim(0, 0.2) +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single")) # no facet
df(paste0(filename = "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Respiration/Respiration_Boxplots_LENGTH_bfactorMEDIAN.pdf"), width = 18, height = 8)
pdf(paste0(filename = "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Respiration/Respiration_Boxplots_LENGTH_bfactorMEDIAN.pdf"), width = 18, height = 8)
print(ggarrange(F1s.BOXPLOT_Length_bfactor.MEDIAN,F1s.BOXPLOT_Length_bfactor.MEDIAN.nofacet, nrow = 1, ncol = 2)) # print the model diagnostics
dev.off()
print(ggarrange(F1s.BOXPLOT_Length_bfactor.MEDIAN,F1s.BOXPLOT_Length_bfactor.MEDIAN.nofacet, nrow = 1, ncol = 2)) # print the model diagnostics
RR_formatted_F1s.length
print(ggarrange(F1s.BOXPLOT_Length_bfactor.MEDIAN,F1s.BOXPLOT_Length_bfactor.MEDIAN.nofacet, nrow = 1, ncol = 2)) # print the model diagnostics
unique(RR_formatted_F1s$Date) # 2021-09-14 2021-09-30 2021-10-26 2022-02-02 2022-03-01 2022-09-22
#unique(RR_formatted_F1s$Date) # "2021-09-14" "2021-09-30" "2021-10-26" "2022-02-02" "2022-03-01" "2022-09-22" "2022-10-26"
# f1s data
RR_formatted_F1s <- RR_formatted %>% dplyr::filter(!Gen %in% 'F2s') %>%
dplyr::mutate(resp_umol_L_hr_bFactorNormWDW = resp_umol_L_hr/(whole_Dry_weight^bWDW)) %>%
dplyr::mutate(Date = as.factor(Date))
#unique(RR_formatted_F1s$Date) # "2021-09-14" "2021-09-30" "2021-10-26" "2022-02-02" "2022-03-01" "2022-09-22" "2022-10-26"
# f1s data
RR_formatted_F1s <- RR_formatted %>% dplyr::filter(!Gen %in% 'F2s') %>%
dplyr::mutate(Length_mm = Length_um/1000) %>%
dplyr::mutate(resp_umol_L_hr_bFactorNormLength.MEAN = (resp_umol_L_hr)*((meanLength/Length_mm)^bLength) ) %>% # RStd = (Lexp/Lstd)1.77 * RRexp
dplyr::mutate(resp_umol_L_hr_bFactorNormLength.MEDIAN = (resp_umol_L_hr)*((medianLength/Length_mm)^bLength) ) %>%  # RStd = (Lexp/Lstd)1.77 * RRexp
dplyr::mutate(Date = as.factor(Date))
RR_formatted_F1s
# (1) First, run anova within date for all records (for looped!)
ANOVA_Dates       <- as.data.frame(unique(RR_formatted_F1s$Date)) # call a list to loop in
AOVdf_total       <- data.frame() # start dataframe, this will be the master output
DF_loop           <- data.frame(matrix(nrow = 1, ncol = 13)) # create dataframe to save during for loop
colnames(DF_loop) <- c('Date', 'Age', 'Metric', 'model', 'DF.num' , 'DF.denom', 'F_val','P_val', 'SigDif', 'ShapiroWilk', 'ResidNorm', 'Levenes', 'HomogVar') # names for comuns in the for loop
RR_formatted_F1s
# (1) First, run anova within date for all records (for looped!)
ANOVA_Dates       <- as.data.frame(unique(RR_formatted_F1s$Date)) # call a list to loop in
AOVdf_total       <- data.frame() # start dataframe, this will be the master output
DF_loop           <- data.frame(matrix(nrow = 1, ncol = 13)) # create dataframe to save during for loop
colnames(DF_loop) <- c('Date', 'Age', 'Metric', 'model', 'DF.num' , 'DF.denom', 'F_val','P_val', 'SigDif', 'ShapiroWilk', 'ResidNorm', 'Levenes', 'HomogVar') # names for comuns in the for loop
for (i in 1:nrow(ANOVA_Dates)) {
date_loop     <- as.character(ANOVA_Dates[i,])
data_loop     <- RR_formatted_F1s %>%
dplyr::filter(Date == date_loop) %>%
dplyr::select(Date, Age, pCO2, resp_umol_L_hr_bFactorNormLength.MEAN) %>%
na.omit()
AOVmod              <- aov(lm(data_loop$resp_umol_L_hr_bFactorNormLength.MEAN ~ data_loop$pCO2))
DF_loop$Date        <- date_loop
DF_loop$Age         <- data_loop$Age[1]
DF_loop$Metric      <- 'Respiration rate; WDW b factor normalized'
DF_loop$model       <- 'one-way AOV; x ~ treatment'
DF_loop$DF.num      <- summary(AOVmod)[[1]][["Df"]][1]
DF_loop$DF.denom    <- summary(AOVmod)[[1]][["Df"]][2]
DF_loop$F_val       <- summary(AOVmod)[[1]][["F value"]][1]
DF_loop$P_val       <- summary(AOVmod)[[1]][["Pr(>F)"]][1]
DF_loop$SigDif      <- if( (summary(AOVmod)[[1]][["Pr(>F)"]][1]) > 0.05) {
'NO'} else {'YES'}
DF_loop$ShapiroWilk <- shapiro.test(resid(AOVmod))[[2]]
DF_loop$ResidNorm   <- if( shapiro.test(resid(AOVmod))[[2]] > 0.05) {
'YES'} else {'NO'}
DF_loop$Levenes     <- leveneTest(AOVmod)[[3]][[1]]
DF_loop$HomogVar    <- if( leveneTest(AOVmod)[[3]][[1]] > 0.05) {
'YES'} else {'NO'}
# asign loop and cumulative output table
df          <- data.frame(DF_loop) # name dataframe for this single row
AOVdf_total <- rbind(AOVdf_total,DF_loop) #bind to a cumulative list dataframe
print(AOVdf_total) # print to monitor progress
}
AOVdf_total <- AOVdf_total %>% dplyr::arrange(Age)
View(AOVdf_total) # view all the anova tests within data
# WRITE CSV OF THE MASTER FILE
write.csv(AOVdf_total, "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Respiration/Respiration_ANOVA_table_Length_mean.csv")
# Two way anova for pH * time
total_mod  <- aov(lm(resp_umol_L_hr_bFactorNormLength.MEAN  ~ pCO2 * Date, data = RR_formatted_F1s))
leveneTest(total_mod) # 0.0672
shapiro.test(resid(total_mod)) # 0.002743
leveneTest(total_mod) # 0.0672
hist(resid(total_mod)) # positive skew
qqnorm(resid(total_mod))
summary(total_mod)
bc     <- boxcox(RR_formatted_F1s$resp_umol_L_hr_bFactorNormLength.MEAN ~ RR_formatted_F1s$pCO2 * RR_formatted_F1s$Date) # y ~ x
#find optimal lambda for Box-Cox transformation
library(MASS)
bc     <- boxcox(RR_formatted_F1s$resp_umol_L_hr_bFactorNormLength.MEAN ~ RR_formatted_F1s$pCO2 * RR_formatted_F1s$Date) # y ~ x
lambda <- bc$x[which.max(bc$y)] # 0.1414141
new_model <- lm(((resp_umol_L_hr_bFactorNormLength.MEAN^lambda-1)/lambda) ~ pCO2 * Date, data = RR_formatted_F1s) #fit new linear regression model using the Box-Cox transformation
leveneTest(new_model) # 0.0773  * - PASS
shapiro.test(resid(new_model)) # 0.5891 - normal
qqnorm(resid(new_model)) # boxcox resolves the qqnorm visual from the raw model greatly
summary(aov(new_model))  # date and pH significant
