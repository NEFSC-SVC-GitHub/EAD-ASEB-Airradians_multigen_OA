library(rMR)
library(dplyr)
library(stringr)
library(rlang)
library(ggplot2)
library(ggfortify)
library(DESeq2)
library(devtools)
library(ggbiplot)
library(VennDiagram)# venn diagrams
library(eulerr) #venn diagrams -  check out the R shiny app (http://eulerr.co/)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis")
# F1s :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;
# biodeposition
Biodep <- read.csv("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Biodeposition/Biodeposition_master_F1.csv", header = T) %>% dplyr::select(-X)
# Respiration rate (lolinR rates)
RR <- read.csv(file="Output/Respiration/F1_RR_calc_master.csv", header=T) %>%
filter(!Food %in% 'unfed') %>% # omit low food trial data
# filter out the F2 measurements
filter(!Date %in% c('8/30/2022', '11/16/2022')) %>% # an F2 measurement
filter(!(Date == '9/22/2022' & filetype =='SDR_data')) %>%
# unique(RR_master$Date) # "10/26/2021" "2/2/2022"   "3/1/2022"   "8/30/2022"  "9/14/2021"  "9/22/2022"  "9/30/2021"
dplyr::select(c(Date, Age,  pH, pCO2, Replicate, Chamber_tank, Run, Number, filetype, Channel,
Length_mm,
Dry_Shell_weight,
Dry_Tissue_weight,
whole_Dry_weight,
Lpc,
BLANK.mean_Lpc,
resp_blankStand,
volume,
Biovol_length3 ,
measured_volume,
calculated_volume,
resp_mg_hr,
resp_mg_hr_bFactorNormTDW.MEAN,
resp_mg_hr_bFactorNormLength.MEAN,
resp_umol_hr,
resp_umol_hr_bFactorNormTDW.MEAN,
resp_umol_hr_bFactorNormLength.MEAN)) %>%
dplyr::rename(RRvolume_vessel_mL = volume) %>%
dplyr::rename(RRvolume_measuredBiovol_mL = measured_volume) %>%
dplyr::rename(RRvolume_calculatedBiovol_mL = calculated_volume) %>%
dplyr::rename(RR_mgLmin_rawblankcor = resp_blankStand) %>%
dplyr::rename(RR_mgLmin_blankMean = BLANK.mean_Lpc) %>%
dplyr::rename(RR_mgLmin_raw = Lpc)
# Respiration rate (lolinR rates)
RR <- read.csv(file="Output/Respiration/F1/F1_RR_calc_master.csv", header=T) %>%
filter(!Food %in% 'unfed') %>% # omit low food trial data
# filter out the F2 measurements
filter(!Date %in% c('8/30/2022', '11/16/2022')) %>% # an F2 measurement
filter(!(Date == '9/22/2022' & filetype =='SDR_data')) %>%
# unique(RR_master$Date) # "10/26/2021" "2/2/2022"   "3/1/2022"   "8/30/2022"  "9/14/2021"  "9/22/2022"  "9/30/2021"
dplyr::select(c(Date, Age,  pH, pCO2, Replicate, Chamber_tank, Run, Number, filetype, Channel,
Length_mm,
Dry_Shell_weight,
Dry_Tissue_weight,
whole_Dry_weight,
Lpc,
BLANK.mean_Lpc,
resp_blankStand,
volume,
Biovol_length3 ,
measured_volume,
calculated_volume,
resp_mg_hr,
resp_mg_hr_bFactorNormTDW.MEAN,
resp_mg_hr_bFactorNormLength.MEAN,
resp_umol_hr,
resp_umol_hr_bFactorNormTDW.MEAN,
resp_umol_hr_bFactorNormLength.MEAN)) %>%
dplyr::rename(RRvolume_vessel_mL = volume) %>%
dplyr::rename(RRvolume_measuredBiovol_mL = measured_volume) %>%
dplyr::rename(RRvolume_calculatedBiovol_mL = calculated_volume) %>%
dplyr::rename(RR_mgLmin_rawblankcor = resp_blankStand) %>%
dplyr::rename(RR_mgLmin_blankMean = BLANK.mean_Lpc) %>%
dplyr::rename(RR_mgLmin_raw = Lpc)
# start end resp
O2consumption_start.end  <- read.csv(file="Output/Respiration/RR_start_end_master.csv", header=T)  %>%
dplyr::select(c(Date, pH, Chamber_tank, Run, Number, filetype, Channel, Start.End_RR_umolhr))
# ammonia excretion
ER <- read.csv(file="Output/ExcretionRates/F1/F1_ExcretionRates_master.csv", header=T)  %>%
dplyr::select(c(Date, pH, Replicate, Chamber_tank, Run, Number,
Length_um,
Dry_Tissue_weight,
ExcretionRate_ug_mL_hr,
ExcretionRate_umol_mL_hr )) %>%
dplyr::mutate(ExcretionRate_mg_hr = ExcretionRate_ug_mL_hr/1000) %>%
dplyr::rename(ExcretionRate_umol_hr = ExcretionRate_umol_mL_hr) %>%
dplyr::mutate(Length_mm = as.numeric(Length_um / 1000)) %>% # Length_mm matched biodep and RR
dplyr::select(-c(Length_um,ExcretionRate_ug_mL_hr)) # dont need this anymore do we
unique(ER$Date) # 20211026 20220202 20220301 20220922 20221026
unique(RR$Date)
# prep the resp data
RR_prepped <- RR %>% # just call desired dates tat overlap with biodep for merge
dplyr::mutate(Date = format(strptime(Date, format = "%m/%d/%Y"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
filter(Date %in% c('03/01/2022', '09/22/2022', '10/26/2022')) # the only dates we need to merge with biodep
RR_prepped$Dry_Tissue_weight <- as.numeric(RR_prepped$Dry_Tissue_weight)
nrow(RR_prepped) # 45
# prep the ER data  - lets match the RR data
meanTDW <- mean(ER$Dry_Tissue_weight) # 0.4378721
ER
ER_prepped <- ER %>%
dplyr::mutate(ExcretionRate_mg_hr_bFactorNormTDW.MEAN =
(ExcretionRate_mg_hr)*((meanTDW/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - mg
dplyr::mutate(ExcretionRate_umol_hr_bFactorNormTDW.MEAN =
(ExcretionRate_umol_hr)*((meanTDW/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - umol
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::filter(Date %in% c('03/01/2022', '09/22/2022', '10/26/2022'))  %>% # the only dates we need to merge with biodep
unique() # a few duplicates on 3/1/2022 for some strange reason....
nrow(ER_prepped) # 45
# prep the biodep data - lets match the RR data
# note the calc biodep is already corrected for 0.822 bfactor
Biodep_prepped <- Biodep %>% # unique(Biodep$Date) # "03/02/2022" "09/23/2022" "10/27/2022" - need to change to reflect RR_prepped (above)
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Replicate = gsub("[^a-zA-Z]", "", tank_ID)) %>% # new replicate column - reflects RR dataset
dplyr::rename(Dry_Tissue_weight = animal_dry_weight_g) %>% # change name to match RR
dplyr::rename(Length_mm = animal_length_mm) %>% # change name to match RR
dplyr::rename(pH = treatment) %>% # rename to match
dplyr::select(-c(tank_ID, animal_number, initial_filter_weight_mg, dry_filter_weight_mg,ash_filter_weight_mg, inclubation_time_hours, pCO2)) %>%
dplyr::mutate(Date = case_when(Date == "03/02/2022" ~ '03/01/2022',
Date == "09/23/2022" ~ '09/22/2022',
Date == "10/27/2022" ~ '10/26/2022'))
# prep the biodep data - lets match the RR data
# note the calc biodep is already corrected for 0.822 bfactor
Biodep_prepped <- Biodep %>% # unique(Biodep$Date) # "03/02/2022" "09/23/2022" "10/27/2022" - need to change to reflect RR_prepped (above)
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Replicate = gsub("[^a-zA-Z]", "", tank_ID)) %>% # new replicate column - reflects RR dataset
dplyr::rename(Dry_Tissue_weight = animal_dry_weight_g) %>% # change name to match RR
dplyr::rename(Length_mm = animal_length_mm) %>% # change name to match RR
dplyr::rename(pH = treatment) %>% # rename to match
dplyr::select(-c(animal_number, initial_filter_weight_mg, dry_filter_weight_mg,ash_filter_weight_mg, inclubation_time_hours, pCO2)) %>%
dplyr::mutate(Date = case_when(Date == "03/02/2022" ~ '03/01/2022',
Date == "09/23/2022" ~ '09/22/2022',
Date == "10/27/2022" ~ '10/26/2022'))
Biodep
Biodep %>% # unique(Biodep$Date) # "03/02/2022" "09/23/2022" "10/27/2022" - need to change to reflect RR_prepped (above)
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Replicate = gsub("[^a-zA-Z]", "", tank_ID)) %>% # new replicate column - reflects RR dataset
dplyr::rename(Dry_Tissue_weight = animal_dry_weight_g) %>% # change name to match RR
dplyr::rename(Length_mm = animal_length_mm) %>% # change name to match RR
dplyr::rename(pH = treatment) %>% # rename to match
dplyr::select(-c(animal_number, initial_filter_weight_mg, dry_filter_weight_mg,ash_filter_weight_mg, inclubation_time_hours, pCO2))
Biodep %>% # unique(Biodep$Date) # "03/02/2022" "09/23/2022" "10/27/2022" - need to change to reflect RR_prepped (above)
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Replicate = gsub("[^a-zA-Z]", "", tank_ID)) %>% # new replicate column - reflects RR dataset
dplyr::rename(Dry_Tissue_weight = animal_dry_weight_g) %>% # change name to match RR
dplyr::rename(Length_mm = animal_length_mm) %>% # change name to match RR
dplyr::rename(pH = treatment)
Biodep %>% # unique(Biodep$Date) # "03/02/2022" "09/23/2022" "10/27/2022" - need to change to reflect RR_prepped (above)
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y"))
Biodep %>% # unique(Biodep$Date) # "03/02/2022" "09/23/2022" "10/27/2022" - need to change to reflect RR_prepped (above)
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Replicate = gsub("[^a-zA-Z]", "", tank_ID))
Biodep
Biodep %>% # unique(Biodep$Date) # "03/02/2022" "09/23/2022" "10/27/2022" - need to change to reflect RR_prepped (above)
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Replicate = gsub("[^a-zA-Z]", "", tank_ID.y))
# prep the biodep data - lets match the RR data
# note the calc biodep is already corrected for 0.822 bfactor
Biodep_prepped <- Biodep %>% # unique(Biodep$Date) # "03/02/2022" "09/23/2022" "10/27/2022" - need to change to reflect RR_prepped (above)
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Replicate = gsub("[^a-zA-Z]", "", tank_ID.y)) %>% # new replicate column - reflects RR dataset
dplyr::rename(Dry_Tissue_weight = animal_dry_weight_g) %>% # change name to match RR
dplyr::rename(Length_mm = animal_length_mm) %>% # change name to match RR
dplyr::rename(pH = treatment) %>% # rename to match
dplyr::select(-c(tank_ID.y, animal_number, initial_filter_weight_mg, dry_filter_weight_mg,ash_filter_weight_mg, inclubation_time_hours, pCO2)) %>%
dplyr::mutate(Date = case_when(Date == "03/02/2022" ~ '03/01/2022',
Date == "09/23/2022" ~ '09/22/2022',
Date == "10/27/2022" ~ '10/26/2022'))
Biodep_prepped <- Biodep %>% # unique(Biodep$Date) # "03/02/2022" "09/23/2022" "10/27/2022" - need to change to reflect RR_prepped (above)
Biodep_prepped
# prep the biodep data - lets match the RR data
# note the calc biodep is already corrected for 0.822 bfactor
Biodep_prepped <- Biodep %>% # unique(Biodep$Date) # "03/02/2022" "09/23/2022" "10/27/2022" - need to change to reflect RR_prepped (above)
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Replicate = gsub("[^a-zA-Z]", "", tank_ID.y)) %>% # new replicate column - reflects RR dataset
dplyr::rename(Dry_Tissue_weight = animal_dry_weight_g) %>% # change name to match RR
dplyr::rename(Length_mm = animal_length_mm) %>% # change name to match RR
dplyr::rename(pH = treatment) %>% # rename to match
dplyr::select(-c(tank_ID.y, animal_number, initial_filter_weight_mg, dry_filter_weight_mg,ash_filter_weight_mg, inclubation_time_hours, pCO2)) %>%
dplyr::mutate(Date = case_when(Date == "03/02/2022" ~ '03/01/2022',
Date == "09/23/2022" ~ '09/22/2022',
Date == "10/27/2022" ~ '10/26/2022'))
Biodep_prepped
Biodep
# F1s :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;
# biodeposition
Biodep <- read.csv("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Biodeposition/Biodeposition_master_F1.csv", header = T) %>% dplyr::select(-X)
Biodep
Biodep %>% # unique(Biodep$Date) # "03/02/2022" "09/23/2022" "10/27/2022" - need to change to reflect RR_prepped (above)
dplyr::rename(tank_ID = tank_ID.x) %>%
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Replicate = gsub("[^a-zA-Z]", "", tank_ID)) %>% # new replicate column - reflects RR dataset
dplyr::rename(Dry_Tissue_weight = animal_dry_weight_g) %>% # change name to match RR
dplyr::rename(Length_mm = animal_length_mm) %>% # change name to match RR
dplyr::rename(pH = treatment)
# prep the biodep data - lets match the RR data
# note the calc biodep is already corrected for 0.822 bfactor
Biodep_prepped <- Biodep %>% # unique(Biodep$Date) # "03/02/2022" "09/23/2022" "10/27/2022" - need to change to reflect RR_prepped (above)
dplyr::rename(tank_ID = tank_ID.x) %>%
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Replicate = gsub("[^a-zA-Z]", "", tank_ID)) %>% # new replicate column - reflects RR dataset
dplyr::rename(Dry_Tissue_weight = animal_dry_weight_g) %>% # change name to match RR
dplyr::rename(Length_mm = animal_length_mm) %>% # change name to match RR
dplyr::rename(pH = treatment) %>% # rename to match
dplyr::select(-c(tank_ID.y, animal_number, initial_filter_weight_mg, dry_filter_weight_mg,ash_filter_weight_mg, inclubation_time_hours, pCO2)) %>%
dplyr::mutate(Date = case_when(Date == "03/02/2022" ~ '03/01/2022',
Date == "09/23/2022" ~ '09/22/2022',
Date == "10/27/2022" ~ '10/26/2022'))
Biodep_prepped$Chamber_tank <- paste(substring(Biodep$tank_ID  , 1, nchar(Biodep$tank_ID  )-1), Biodep_prepped$Replicate, sep = "_")
nrow(Biodep_prepped) # 43 rows
# call unique identifier to find discrepancies
RR_prepped$uniqueID <- paste(RR_prepped$Date,RR_prepped$Chamber_tank,RR_prepped$Length_mm,RR_prepped$Replicate, sep = '_')
ER_prepped$uniqueID <- paste(ER_prepped$Date,ER_prepped$Chamber_tank,ER_prepped$Length_mm,ER_prepped$Replicate, sep = '_')
Biodep_prepped$uniqueID <- paste(Biodep_prepped$Date,Biodep_prepped$Chamber_tank,Biodep_prepped$Length_mm,Biodep_prepped$Replicate, sep = '_')
# between RR and excretion!!  - excretion has 532 rows and RR has 45
# obvious that RR has omited values due to resp < blank that were omitted prior
subset(ER_prepped, !(uniqueID %in% RR_prepped$uniqueID)) # no discrepancies - these exactly reflect one another!
# btween RR and biodep!!
nrow(RR_prepped) == nrow(Biodep_prepped) # FALSE - there are rows not present in biodep that Resp has - lets call a uni que identifier (that we will omit at the merge of course)
subset(RR_prepped, !(uniqueID %in% Biodep_prepped$uniqueID)) # three discrepancies between the RR and the biodep (RR have 3 more!)
Biodep_prepped$uniqueID
RR_prepped$uniqueID
ER_prepped$uniqueID
Biodep_prepped$uniqueID
Biodep_prepped$Date
Biodep_prepped$Chamber_tank
Biodep_prepped$Chamber_tank <- paste(substring(Biodep$tank_ID, 1, nchar(Biodep$tank_ID)-1), Biodep_prepped$Replicate, sep = "_")
Biodep_prepped$Chamber_tank
ER_prepped$Chamber_tank
Biodep$tank_ID
Biodep$tank_ID
Biodep
Biodep_prepped$Chamber_tank <- paste0(Biodep$treatment, Biodep$Replicate, sep = "_")
Biodep_prepped$Chamber_tank
# prep the biodep data - lets match the RR data
# note the calc biodep is already corrected for 0.822 bfactor
Biodep_prepped <- Biodep %>% # unique(Biodep$Date) # "03/02/2022" "09/23/2022" "10/27/2022" - need to change to reflect RR_prepped (above)
dplyr::rename(tank_ID = tank_ID.x) %>%
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Replicate = gsub("[^a-zA-Z]", "", tank_ID)) %>% # new replicate column - reflects RR dataset
dplyr::rename(Dry_Tissue_weight = animal_dry_weight_g) %>% # change name to match RR
dplyr::rename(Length_mm = animal_length_mm) %>% # change name to match RR
dplyr::rename(pH = treatment) %>% # rename to match
dplyr::select(-c(tank_ID.y, animal_number, initial_filter_weight_mg, dry_filter_weight_mg,ash_filter_weight_mg, inclubation_time_hours, pCO2)) %>%
dplyr::mutate(Date = case_when(Date == "03/02/2022" ~ '03/01/2022',
Date == "09/23/2022" ~ '09/22/2022',
Date == "10/27/2022" ~ '10/26/2022'))
Biodep_prepped$Chamber_tank <- paste0(Biodep_prepped$treatment, Biodep_prepped$Replicate, sep = "_")
Biodep_prepped$Chamber_tank
Biodep_prepped$treatment
Biodep
Biodep_prepped$Chamber_tank <- paste0(Biodep_prepped$pH, Biodep_prepped$Replicate, sep = "_")
Biodep_prepped$Chamber_tank
Biodep_prepped$Replicate
Biodep_prepped$Chamber_tank <- paste0(Biodep_prepped$pH, , "_", Biodep_prepped$Replicate)
Biodep_prepped$Chamber_tank
Biodep_prepped$Chamber_tank <- paste0(Biodep_prepped$pH, "_", Biodep_prepped$Replicate)
Biodep_prepped$uniqueID <- paste(Biodep_prepped$Date,Biodep_prepped$Chamber_tank,Biodep_prepped$Length_mm,Biodep_prepped$Replicate, sep = '_')
Biodep_prepped$uniqueID
# between RR and excretion!!  - excretion has 532 rows and RR has 45
# obvious that RR has omited values due to resp < blank that were omitted prior
subset(ER_prepped, !(uniqueID %in% RR_prepped$uniqueID)) # no discrepancies - these exactly reflect one another!
# btween RR and biodep!!
nrow(RR_prepped) == nrow(Biodep_prepped) # FALSE - there are rows not present in biodep that Resp has - lets call a uni que identifier (that we will omit at the merge of course)
subset(RR_prepped, !(uniqueID %in% Biodep_prepped$uniqueID)) # three discrepancies between the RR and the biodep (RR have 3 more!)
RR_ER_merge <- merge(RR_prepped,ER_prepped)
nrow(RR_ER_merge) # 45 - no rows lost!
MASTER_ALL <- merge(RR_ER_merge, Biodep_prepped) %>%
dplyr::select(-uniqueID) %>%
dplyr::mutate(Age = case_when(Date == '3/1/2022'  ~ 218,
Date == '9/22/2022'  ~ 423,
Date == '10/26/2022' ~ 457)) %>%
dplyr::mutate(Temperature = case_when(Date == '03/01/2022' ~ '16C',
Date == '09/22/2022' ~ '20C',
Date == '10/26/2022' ~ '13.3C')) %>%
dplyr::mutate(pH_Temperature = paste(pCO2,'_',Temperature, sep = '')) %>%
dplyr::mutate(Age = as.factor(Age)) %>% dplyr::arrange(Age)
nrow(MASTER_ALL) # 42 rows - as expected!!!!!
write.csv(MASTER_ALL, "Output/F1_RR_ER_Biodep_master.csv")
# Run a PCA
MASTER_ALL <- subset(MASTER_ALL, !is.na(MASTER_ALL$AR))
list(colnames(MASTER_ALL)) # view list to call below for PCA
MASTER_ALL_1   <- prcomp(MASTER_ALL[,c(5,6,26,31,61:62)], # all numeric (phys + all modules) - PCA 1 = 0.4155  , PCA 2 0.2729   (cumulative 0.6883 )
center = TRUE,
scale. = TRUE)
summary(MASTER_ALL_1)
MASTER_ALL_1   <- prcomp(MASTER_ALL[,c(26,31,60,58,53,55,51)],
center = TRUE,
scale. = TRUE)
summary(MASTER_ALL_1)
# plot PCA
PCApCO2 <- ggbiplot(MASTER_ALL_1,
obs.scale = 1,
var.scale = 1,
groups = as.factor(MASTER_ALL$pCO2),
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.67) +
scale_color_discrete(name = '') +  theme_classic() +   ggtitle("pCO2") +
theme(legend.direction = 'horizontal',
legend.position = 'top')
PCApCO2
MASTER_ALL_1
MASTER_ALL
list(colnames(MASTER_ALL)) # view list to call below for PCA
MASTER_ALL_1   <- prcomp(MASTER_ALL[,c(26,31)], # only SMR and ER
center = TRUE,
scale. = TRUE)
# plot PCA
PCApCO2 <- ggbiplot(MASTER_ALL_1,
obs.scale = 1,
var.scale = 1,
groups = as.factor(MASTER_ALL$pCO2),
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.67) +
scale_color_discrete(name = '') +  theme_classic() +   ggtitle("pCO2") +
theme(legend.direction = 'horizontal',
legend.position = 'top')
PCApCO2
MASTER_ALL
list(colnames(MASTER_ALL)) # view list to call below for PCA
MASTER_ALL_1   <- prcomp(MASTER_ALL[,c(26,31,53,60,62,63)],
center = TRUE,
scale. = TRUE)
# plot PCA
PCApCO2 <- ggbiplot(MASTER_ALL_1,
obs.scale = 1,
var.scale = 1,
groups = as.factor(MASTER_ALL$pCO2),
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.67) +
scale_color_discrete(name = '') +  theme_classic() +   ggtitle("pCO2") +
theme(legend.direction = 'horizontal',
legend.position = 'top')
PCApCO2
PCA_Temp <- ggbiplot(MASTER_ALL_1,
obs.scale = 1,
var.scale = 1,
groups = as.factor(MASTER_ALL$Temperature),
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.67) +
scale_color_discrete(name = '') +  theme_classic() +   ggtitle("Temperature") +
theme(legend.direction = 'horizontal',
legend.position = 'top')
PCA_Temp
PCA_pCO2Temp <- ggbiplot(MASTER_ALL_1,
obs.scale = 1,
var.scale = 1,
groups = as.factor(MASTER_ALL$pH_Temperature),
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.67) +
scale_color_discrete(name = '') +  theme_classic() +   ggtitle("pCO2*Temperature") +
theme(legend.direction = 'horizontal',
legend.position = 'top')
PCA_pCO2Temp
PCA_Temp <- ggbiplot(MASTER_ALL_1,
obs.scale = 1,
var.scale = 1,
groups = as.factor(MASTER_ALL$Temperature),
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.67) +
scale_color_discrete(name = '') +  theme_classic() +   ggtitle("Temperature") +
theme(legend.direction = 'horizontal',
legend.position = 'top')
PCA_Temp
MASTER_ALL
MASTER_ALL
# TEMPERATURE HAS A BIG EFFECT!
MASTER_20C <- MASTER_ALL %>%  dplyr::filter(Temperature %in% '20C')
# TEMPERATURE HAS A BIG EFFECT!
MASTER_20C <- MASTER_ALL %>%  dplyr::filter(Temperature %in% '20C')
MASTER_20C_PCA <- prcomp(MASTER_20C[,c(26,31,53,60,62,63)],
center = TRUE,
scale. = TRUE)
PCA_20c_pCO2 <- ggbiplot(MASTER_20C_PCA,
obs.scale = 1,
var.scale = 1,
groups = as.factor(MASTER_ALL$pCO2),
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.67) +
scale_color_discrete(name = '') +  theme_classic() + ggtitle("pCO2 effet under 20C") +
theme(legend.direction = 'horizontal',
legend.position = 'top')
PCA_20c_pCO2
MASTER_20C_PCA <- prcomp(MASTER_20C[,c(26,31,53,60,62,63)],
center = TRUE,
scale. = TRUE)
PCA_20c_pCO2 <- ggbiplot(MASTER_20C_PCA,
obs.scale = 1,
var.scale = 1,
groups = as.factor(MASTER_20C$pCO2),
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.67) +
scale_color_discrete(name = '') +  theme_classic() + ggtitle("pCO2 effet under 20C") +
theme(legend.direction = 'horizontal',
legend.position = 'top')
PCA_20c_pCO2 <- ggbiplot(MASTER_20C_PCA,
obs.scale = 1,
var.scale = 1,
groups = as.factor(MASTER_20C$pCO2),
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.67) +
scale_color_discrete(name = '') +
theme_classic() +
ggtitle("pCO2 effet under 20C") +
theme(legend.direction = 'horizontal',
legend.position = 'top')
PCA_20c_pCO2
PCA_Temp
MASTER_16C     <- MASTER_ALL %>%  dplyr::filter(Temperature %in% '16C')
MASTER_16C_PCA <- prcomp(MASTER_16C[,c(26,31,53,60,62,63)],
center = TRUE,
scale. = TRUE)
PCA_16c_pCO2 <- ggbiplot(MASTER_16C_PCA,
obs.scale = 1,
var.scale = 1,
groups = as.factor(MASTER_16C$pCO2),
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.67) +
scale_color_discrete(name = '') +
theme_classic() +
ggtitle("pCO2 effet under 16C") +
theme(legend.direction = 'horizontal',
legend.position = 'top')
PCA_16c_pCO2
list(colnames(MASTER_ALL)) # view list to call below for PCA
MASTER_ALL_1   <- prcomp(MASTER_ALL[,c(26,31,53,63)],
center = TRUE,
scale. = TRUE)
# plot PCA
PCApCO2 <- ggbiplot(MASTER_ALL_1,
obs.scale = 1,
var.scale = 1,
groups = as.factor(MASTER_ALL$pCO2),
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.67) +
scale_color_discrete(name = '') +  theme_classic() +   ggtitle("pCO2") +
theme(legend.direction = 'horizontal',
legend.position = 'top')
PCApCO2
PCA_Temp <- ggbiplot(MASTER_ALL_1,
obs.scale = 1,
var.scale = 1,
groups = as.factor(MASTER_ALL$Temperature),
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.67) +
scale_color_discrete(name = '') +  theme_classic() +   ggtitle("Temperature") +
theme(legend.direction = 'horizontal',
legend.position = 'top')
PCA_Temp
# TEMPERATURE HAS A BIG EFFECT!
MASTER_20C     <- MASTER_ALL %>%  dplyr::filter(Temperature %in% '20C')
MASTER_20C_PCA <- prcomp(MASTER_20C[,c(26,31,53,63)],
center = TRUE,
scale. = TRUE)
PCA_20c_pCO2 <- ggbiplot(MASTER_20C_PCA,
obs.scale = 1,
var.scale = 1,
groups = as.factor(MASTER_20C$pCO2),
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.67) +
scale_color_discrete(name = '') +
theme_classic() +
ggtitle("pCO2 effet under 20C") +
theme(legend.direction = 'horizontal',
legend.position = 'top')
MASTER_16C     <- MASTER_ALL %>%  dplyr::filter(Temperature %in% '16C')
MASTER_16C_PCA <- prcomp(MASTER_16C[,c(26,31,53,63)],
center = TRUE,
scale. = TRUE)
PCA_16c_pCO2 <- ggbiplot(MASTER_16C_PCA,
obs.scale = 1,
var.scale = 1,
groups = as.factor(MASTER_16C$pCO2),
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.67) +
scale_color_discrete(name = '') +
theme_classic() +
ggtitle("pCO2 effet under 16C") +
theme(legend.direction = 'horizontal',
legend.position = 'top')
PCA_16c_pCO2
PCA_20c_pCO2
PCA_Temp
PCA_pCO2Temp <- ggbiplot(MASTER_ALL_1,
obs.scale = 1,
var.scale = 1,
groups = as.factor(MASTER_ALL$pH_Temperature),
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.67) +
scale_color_discrete(name = '') +  theme_classic() +   ggtitle("pCO2*Temperature") +
theme(legend.direction = 'horizontal',
legend.position = 'top')
PCA_pCO2Temp
PCA_Temp
