annotate("text", x=2, y=0.0000115, size = 4, label= paste('DF =',DF,'F =', signif(Fval, digits=3), 'p value =', signif(pval, digits=3), sep=" "))
Resp914_Length # print this figure...
Resp_0930 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '9/30/2021')  %>% # call only 9/14
dplyr::select(-Center) %>%
dplyr::mutate(pHxFood = paste(pH,Food, sep = "_")) %>%
dplyr::mutate(random_fact = as.factor(paste(Chamber_tank, Food, sep="_")))
Resp_0930 %>% dplyr::group_by(pH, Food, Replicate) %>% dplyr::summarise(n()) # tank replication
Resp_0930 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars=("pH")) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
# Visualize the data with the random effet as treplicate
Resp930_Length_reps <- ggboxplot(Resp_0930, x = "pHxFood", y = "resp_µmol_L_mm_Length_hr", color = "Replicate",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800", "brown", "grey"))
Resp930_Length_reps
# two way anova
LMmod_930_SL <- lm(resp_µmol_L_mm_Length_hr ~ pCO2 * Food, data=Resp_0930)
summary(aov(LMmod_930_SL))
#             Df   Sum Sq   Mean Sq F value Pr(>F)
# pCO2         1 0.000768 0.0007679   4.395 0.0408 *
# Food         1 0.000869 0.0008688   4.973 0.0300 *
# pCO2:Food    1 0.000084 0.0000840   0.481 0.4910
# Residuals   53 0.009259 0.0001747
shapiro.test(residuals(LMmod_930_SL)) #  0.04837
leveneTest(LMmod_930_SL) # 0.1818
# Linear mixed-effects model
require(nlme)
# Linear mixed effects model with random effect of Replicate
LMEmod_0930_SL<-lme(resp_µmol_L_mm_Length_hr ~ pCO2 * Food, random=~1|random_fact, data=Resp_0930)
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  39   |  131.3  | 4.696e-14 |
# |    **pCO2**     |   1   |  12   |  4.782  |  0.04928  | **
# |    **Food**     |   1   |  12   |  7.08   |  0.02076  | **
# |  **pCO2:Food**  |   1   |  12   | 0.1361  |  0.7186   |
pander(anova(LMEmod_0930_SL), style='rmarkdown')
# |     &nbsp;      | numDF | denDF | F-value | p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:--------:|
# | **(Intercept)** |   1   |  41   |  101.6  | 1.17e-12 |
# |    **pCO2**     |   1   |  12   |  3.448  | 0.08805  |
# |    **Food**     |   1   |  12   |  3.994  | 0.06883  |
# |  **pCO2:Food**  |   1   |  12   | 0.2928  |  0.5983  |
pander(anova(LMEmod_0930_SL), style='rmarkdown')
# call the results of LMER to add to boxplot below
DF   <- paste( (anova(LMEmod_0930_SL)[[1]])[3], (anova(LMEmod_0930_SL)[[2]])[3], sep = '/') # call DF
Fval <- (anova(LMEmod_0930_SL)[[3]])[3] # call f
pval <- (anova(LMEmod_0930_SL)[[4]])[3] # call p value
# plot
Resp930_Length <- ggplot(Resp_0930, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_µmol_L_mm_Length_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
#scale_y_continuous(expand = c(0, 0), limits = c(0, 120)) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210930 (shell length stand.)",
y = expression(Respiration~rate~"("~μmol~L^{-1}~O[2]%.%mm^{-1}~shell~length%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")"))  +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
Resp930_Length
Resp_1026 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '10/26/2021')  %>% # call only 10/14
dplyr::select(-Center) %>%
dplyr::mutate(pHxFood = paste(pH,Food, sep = "_")) %>%
dplyr::mutate(random_fact = as.factor(paste(Chamber_tank, Food, sep="_")))
Resp_1026 %>% dplyr::group_by(pH, Food, Replicate) %>% dplyr::summarise(n()) # tank replication
Resp_1026 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars=(c("Food","pH"))) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
# two way anova
LMmod_1026_SL <- lm(resp_µmol_L_mm_Length_hr ~ pCO2 * Food, data=Resp_1026)
summary(aov(LMmod_1026_SL))
#             Df   Sum Sq  Mean Sq F value   Pr(>F)
# pCO2         1 0.000000 0.000000   0.000    0.993
# Food         1 0.010103 0.010103  42.524 7.87e-07 ***
# pCO2:Food    1 0.000010 0.000010   0.042    0.840
# Residuals   25 0.005939 0.000238
shapiro.test(residuals(LMmod_1026_SL)) #  0.161
leveneTest(LMmod_1026_SL) # 0.1179
# linear mixed-effects model
require(nlme)
# Linear mixed effects model with random effect of Replicate
LMEmod_1026_SL<-lme(resp_µmol_L_mm_Length_hr ~ pCO2 * Food, random=~1|random_fact, data=Resp_1026)
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  13   |  87.44  | 3.896e-07 |
# |    **pCO2**     |   1   |  12   |  1.411  |  0.2578   |
# |    **Food**     |   1   |  12   |  28.72  | 0.0001711 | **
# |  **pCO2:Food**  |   1   |  12   |  2.45   |  0.1435   |
pander(anova(LMEmod_1026_SL), style='rmarkdown')
# call the results of LMER to add to boxplot below
DF   <- paste( (anova(LMEmod_01026_SL)[[1]])[3], (anova(LMEmod_01026_SL)[[2]])[3], sep = '/') # call DF
Fval <- (anova(LMEmod_01026_SL)[[3]])[3] # call f
pval <- (anova(LMEmod_01026_SL)[[4]])[3] # call p value
# plot
Resp1026_Length <- ggplot(Resp_1026, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_µmol_L_mm_Length_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 250)) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20211026 (shell length stand.)",
y = expression(Respiration~rate~"("~μmol~L^{-1}~O[2]%.%m^{-1}~shell~length%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")"))  +
facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food'))) # +
Resp1026_Length
library(dplyr)
library(tidyr)
Resp_1026$pHxFood <- as.factor(Resp_1026$pHxFood)
Resp_1026$resp_µmol_L_mm_Length_hr.noSCI     <- format(as.numeric(Resp_1026$resp_µmol_L_mm_Length_hr), scientific = FALSE, digits = 3)
Resp_1026$resp_µmol_L_mm_Length_hr.NUM       <- as.numeric(sprintf("%s", Resp_1026$resp_µmol_L_mm_Length_hr.noSCI))
df_mean <- Resp_1026 %>%
dplyr::group_by(pHxFood) %>%
dplyr::summarize(average = mean(resp_µmol_L_mm_Length_hr.NUM)) %>%
dplyr::ungroup()
p.box <- ggplot(Resp_1026, aes(x = pHxFood, y = resp_µmol_L_mm_Length_hr.NUM)) + geom_boxplot() + geom_point(data= df_mean, mapping = aes(x = pHxFood, y = average),
color="red")
p.box.data <- layer_data(p.box) %>%
select(x, ymin, lower, middle, upper, ymax, outliers, flipped_aes) %>%
dplyr::rename(mean = flipped_aes) %>%
dplyr::mutate(mean  = df_mean$average) %>%
mutate(pHxFood = factor(x, labels = levels(Resp_1026$pHxFood), ordered = TRUE)) %>%
select(-x)
p.box.data %>% unnest(outliers)
denisty_box_resp_92DPF <-ggplot(p.box.data) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxFood),color = "black") +
geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), color = "grey60", size = 1) +
# vertical lines at Q1 / Q2 / Q3
geom_vline(data = . %>% select(pHxFood, lower, mean, upper) %>% gather(key, value, -pHxFood), aes(xintercept = value)) +
# density plot
geom_density(data = Resp_1026, aes(x = resp_µmol_L_mm_Length_hr.NUM, group=pHxFood, fill=pHxFood, ..scaled..), alpha=.4, adjust=1.5) +
#  theme
theme_classic() +
facet_grid(pHxFood ~ .) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(title = "F1 Scallops: respiration rates 92 DPF)",
x = expression(Respiration~rate~"("~μmol~L^{-1}~O[2]%.%m^{-1}~shell~length%.% hr^{-1}~")"),
y = "Scaled density") +
scale_fill_manual(values=c("grey40", "grey40", "grey85", "grey85"))
denisty_box_resp_92DPF
ggplot(p.box.data) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxFood),color = "black") +
geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), color = "grey60", size = 1) +
# vertical lines at Q1 / Q2 / Q3
geom_vline(data = . %>% select(pHxFood, lower, mean, upper) %>% gather(key, value, -pHxFood), aes(xintercept = value)) +
# density plot
geom_density(data = Resp_1026, aes(x = resp_µmol_L_mm_Length_hr.NUM, group=pHxFood, fill=pHxFood, ..scaled..), alpha=.4, adjust=1.5) +
#  theme
theme_classic()
ggplot(p.box.data) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxFood),color = "black") +
geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), color = "grey60", size = 1) +
# vertical lines at Q1 / Q2 / Q3
geom_vline(data = . %>% select(pHxFood, lower, mean, upper) %>% gather(key, value, -pHxFood), aes(xintercept = value)) +
# density plot
geom_density(data = Resp_1026, aes(x = resp_µmol_L_mm_Length_hr.NUM, group=pHxFood, fill=pHxFood, ..scaled..), alpha=.4, adjust=1.5) +
#  theme
theme_classic() +
facet_grid(pHxFood ~ .) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(title = "F1 Scallops: respiration rates 92 DPF)",
x = expression(Respiration~rate~"("~μmol~L^{-1}~O[2]%.%m^{-1}~shell~length%.% hr^{-1}~")"),
y = "Scaled density") +
scale_fill_manual(values=c("grey40", "grey40", "grey85", "grey85"))
p.box.data
df_mean <- Resp_1026 %>%
dplyr::group_by(pHxFood) %>%
dplyr::summarize(average = mean(resp_µmol_L_mm_Length_hr.NUM)) %>%
dplyr::ungroup()
p.box <- ggplot(Resp_1026, aes(x = pHxFood, y = resp_µmol_L_mm_Length_hr.NUM)) + geom_boxplot() + geom_point(data= df_mean, mapping = aes(x = pHxFood, y = average),
color="red")
df_mean
p.box
denisty_box_resp_92DPF <-ggplot(p.box.data) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxFood),color = "black") +
geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), color = "grey60", size = 1) +
# vertical lines at Q1 / Q2 / Q3
geom_vline(data = . %>% select(pHxFood, lower, mean, upper) %>% gather(key, value, -pHxFood), aes(xintercept = value)) +
# density plot
geom_density(data = Resp_1026, aes(x = resp_µmol_L_mm_Length_hr.NUM, group=pHxFood, fill=pHxFood, ..scaled..), alpha=.4, adjust=1.5) +
#  theme
theme_classic() +
facet_grid(pHxFood ~ .) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(title = "F1 Scallops: respiration rates 92 DPF)",
x = expression(Respiration~rate~"("~μmol~L^{-1}~O[2]%.%m^{-1}~shell~length%.% hr^{-1}~")"),
y = "Scaled density") +
scale_fill_manual(values=c("grey40", "grey40", "grey85", "grey85"))
denisty_box_resp_92DPF
ggplot(p.box.data)
ggplot(p.box.data) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxFood),color = "black") +
geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), color = "grey60", size = 1)
ggplot(p.box.data) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxFood),color = "black")
ggplot(p.box.data) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxFood),color = "black") +
geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), size = 1)
denisty_box_resp_92DPF <-ggplot(p.box.data) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxFood),color = "black") +
# geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), color = "grey60", size = 1) +
# vertical lines at Q1 / Q2 / Q3
geom_vline(data = . %>% select(pHxFood, lower, mean, upper) %>% gather(key, value, -pHxFood), aes(xintercept = value)) +
# density plot
geom_density(data = Resp_1026, aes(x = resp_µmol_L_mm_Length_hr.NUM, group=pHxFood, fill=pHxFood, ..scaled..), alpha=.4, adjust=1.5) +
#  theme
theme_classic() +
facet_grid(pHxFood ~ .) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(title = "F1 Scallops: respiration rates 92 DPF)",
x = expression(Respiration~rate~"("~μmol~L^{-1}~O[2]%.%m^{-1}~shell~length%.% hr^{-1}~")"),
y = "Scaled density") +
scale_fill_manual(values=c("grey40", "grey40", "grey85", "grey85"))
denisty_box_resp_92DPF
Resp_0202 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '2/2/2022')  %>% # call only 10/14
dplyr::select(-Center)
Resp_0202 %>% dplyr::group_by(pH) %>% dplyr::summarise(n()) # tank replication
Resp_0202 %>% summarySE(measurevar="resp_µmol_L_g_TDW_hr", groupvars=(c("pH"))) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
Resp_0202 %>% summarySE(measurevar="resp_µmol_L_mg_TDW_hr", groupvars=(c("pH"))) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
# Linear mixed effects model with random effect of Replicate
LMmod_0202_SL<-aov(lm(resp_µmol_L_mm_Length_hr ~ pCO2, data=Resp_0202))
summary(LMmod_0202_SL)
# Linear mixed effects model with random effect of Replicate
LMmod_0202_SL<-aov(lm(resp_µmol_L_mg_TDW_hr ~ pCO2, data=Resp_0202))
summary(LMmod_0202_SL)
# plot
Resp0202_TDW <- ggplot(Resp_0202, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_µmol_L_g_TDW_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 250)) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210202 (Tissue dry weight stand.)",
y = expression(Respiration~rate~"("~μmol~L^{-1}~O[2]%.%m^{-1}~shell~length%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")"))
# plot
Resp0202_TDW <- ggplot(Resp_0202, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_µmol_L_mg_TDW_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 250)) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210202 (Tissue dry weight stand.)",
y = expression(Respiration~rate~"("~μmol~L^{-1}~O[2]%.%m^{-1}~shell~length%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")"))
Resp0202_TDW
# plot
Resp0202_TDW <- ggplot(Resp_0202, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_µmol_L_mm_Length_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 250)) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210202 (Tissue dry weight stand.)",
y = expression(Respiration~rate~"("~μmol~L^{-1}~O[2]%.%m^{-1}~shell~length%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")"))
Resp0202_TDW
# Visualize the data with the random effet as treplicate
Res0202_Length_reps <- ggboxplot(Resp_0202, x = "pH", y = "resp_µmol_L_mg_TDW_hr", color = "Replicate",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800", "brown", "grey", "purple", "blue", "black", "orange"))
# Visualize the data with the random effet as treplicate
Res0202_TDW_reps <- ggboxplot(Resp_0202, x = "pH", y = "resp_µmol_L_mg_TDW_hr", color = "Replicate",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800", "brown", "grey", "purple", "blue", "black", "orange"))
Res0202_TDW_reps
# Linear mixed effects model with random effect of Replicate
LMmod_0202_SL<-aov(lm(resp_µmol_L_mg_TDW_hr ~ pCO2, data=Resp_0202))
summary(LMmod_0202_SL)
# |    &nbsp;     | Df |  Sum Sq  | Mean Sq  | F value  | Pr(>F) |
# |:-------------:|:--:|:--------:|:--------:|:--------:|:------:|
# |   **pCO2**    | 1  | 1.56e-05 | 1.56e-05 | 0.006697 | 0.9358 |
# | **Residuals** | 16 | 0.03728  | 0.00233  |    NA    |   NA   |
pander(anova(LMmod_0202_SL), style='rmarkdown')
Resp0202_TDW
# plot
Resp0202_TDW <- ggplot(Resp_0202, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_µmol_L_g_TDW_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 250)) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210202 (Tissue dry weight stand.)",
y = expression(Respiration~rate~"("~μmol~L^{-1}~O[2]%.%m^{-1}~shell~length%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")"))
# plot
Resp0202_TDW <- ggplot(Resp_0202, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_µmol_L_mg_TDW_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 250)) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210202 (Tissue dry weight stand.)",
y = expression(Respiration~rate~"("~μmol~L^{-1}~O[2]%.%m^{-1}~shell~length%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")"))
Resp0202_TDW
# LOAD PACKAGES ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(devtools) # devtools::install_github # use devtools to instlal github link
library(LoLinR) # install_github('colin-olito/LoLinR') # install LoLinR from github
library(dplyr)
library(lubridate)
library(rMR)
library(dplyr)
library(stringr)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis")
# LOAD DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Resp_Master          <- read.csv(file="Output/Respiration/Calculated_Resp_Master.csv", header=T)
Excretion_Master     <- read.csv(file="Data/Excretion/Excretion_master.csv", header=T)
#merge
RespExcretion_Master <- merge(Resp_Master,Excretion_Master) # only 18 values as of 2/2/2022 that have both resp and excretion
# CALCULATE O:N :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Master_table <- as.data.frame(RespExcretion_Master %>%
dplyr::select(c('Date',  'pH', 'Replicate', 'Dry_Tissue_weight', 'resp_umol_L_hr', 'start.end_resp_umol_L_hr', 'Nitrogen_ug_mL_hr')) %>%
dplyr::rename(c('RESP_umol_L_hr' = 'resp_umol_L_hr', 'RESP.start.end_umol_L_hr' = 'start.end_resp_umol_L_hr', 'NITROGEN_ug_mL_hr' = 'Nitrogen_ug_mL_hr')) %>%
dplyr::mutate('ON_RESP.LoLinR' = (( (RESP_umol_L_hr/1000)*14)/(NITROGEN_ug_mL_hr)*1000)) %>%
dplyr::mutate('ON_RESP.start.end' = (( (RESP.start.end_umol_L_hr/1000)*14)/(NITROGEN_ug_mL_hr)*1000)))
# Summary (means SE):::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
as.data.frame(Master_table %>%
dplyr::filter(!ON_RESP.LoLinR < 0) %>%
summarySE(measurevar="ON_RESP.LoLinR", groupvars=c("Date", "pH")))
as.data.frame(Master_table %>%
dplyr::filter(!ON_RESP.start.end < 0) %>%
summarySE(measurevar="ON_RESP.start.end", groupvars=c("Date", "pH")))
# CALCULATE O:N :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Master_table <- as.data.frame(RespExcretion_Master %>%
dplyr::select(c('Date',  'pH', 'Replicate', 'Dry_Tissue_weight', 'resp_umol_L_hr', 'start.end_resp_umol_L_hr', 'Nitrogen_ug_mL_hr')) %>%
dplyr::rename(c('RESP_umol_L_hr' = 'resp_umol_L_hr', 'RESP.start.end_umol_L_hr' = 'start.end_resp_umol_L_hr', 'NITROGEN_ug_mL_hr' = 'Nitrogen_ug_mL_hr')) %>%
dplyr::mutate('ON_RESP.LoLinR' = (( (RESP_umol_L_hr)*14)/(NITROGEN_ug_mL_hr)*1000)) %>%
dplyr::mutate('ON_RESP.start.end' = (( (RESP.start.end_umol_L_hr/1000)*14)/(NITROGEN_ug_mL_hr)*1000)))
# Summary (means SE):::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
as.data.frame(Master_table %>%
dplyr::filter(!ON_RESP.LoLinR < 0) %>%
summarySE(measurevar="ON_RESP.LoLinR", groupvars=c("Date", "pH")))
RespExcretion_Master
# CALCULATE O:N :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Master_table <- as.data.frame(RespExcretion_Master %>%
# CALCULATE O:N :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Master_table <- as.data.frame(RespExcretion_Master %>%
dplyr::select(c('Date',  'pH', 'Replicate', 'Dry_Tissue_weight', 'resp_umol_L_hr', 'start.end_resp_umol_L_hr', 'Nitrogen_ug_mL_hr')) %>%
dplyr::rename(c('RESP_umol_L_hr' = 'resp_umol_L_hr', 'RESP.start.end_umol_L_hr' = 'start.end_resp_umol_L_hr', 'NITROGEN_ug_mL_hr' = 'Nitrogen_ug_mL_hr')) %>%
dplyr::mutate('ON_RESP.LoLinR' =  (RESP_umol_L_hr/1000) /(NITROGEN_ug_mL_hr/14) )  %>%
dplyr::mutate('ON_RESP.start.end' = (( (RESP.start.end_umol_L_hr/1000)*14)/(NITROGEN_ug_mL_hr)*1000)))
View(Master_table)
# CALCULATE O:N :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Master_table <- as.data.frame(RespExcretion_Master %>%
dplyr::select(c('Date',  'pH', 'Replicate', 'Dry_Tissue_weight', 'resp_umol_L_hr', 'start.end_resp_umol_L_hr', 'Nitrogen_ug_mL_hr')) %>%
dplyr::rename(c('RESP_umol_L_hr' = 'resp_umol_L_hr', 'RESP.start.end_umol_L_hr' = 'start.end_resp_umol_L_hr', 'NITROGEN_ug_mL_hr' = 'Nitrogen_ug_mL_hr')) %>%
dplyr::mutate('ON_RESP.LoLinR' =  (RESP_umol_L_hr/1000) /(NITROGEN_ug_mL_hr/14) )  %>%
dplyr::mutate('ON_RESP.start.end' = (( (RESP.start.end_umol_L_hr/1000)*14)/(NITROGEN_ug_mL_hr)*1000)))
View(Master_table)
# CALCULATE O:N :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Master_table <- as.data.frame(RespExcretion_Master %>%
dplyr::select(c('Date',  'pH', 'Replicate', 'Dry_Tissue_weight', 'resp_umol_L_hr', 'start.end_resp_umol_L_hr', 'Nitrogen_ug_mL_hr')) %>%
dplyr::rename(c('RESP_umol_L_hr'        = 'resp_umol_L_hr', 'RESP.start.end_umol_L_hr' = 'start.end_resp_umol_L_hr', 'NITROGEN_ug_mL_hr' = 'Nitrogen_ug_mL_hr')) %>%
dplyr::mutate('RESP_umol_L_g.tissue_hr' =  (RESP_umol_L_hr) / (Dry_Tissue_weight) )  %>%
dplyr::mutate('ON_RESP.LoLinR'          =  (RESP_umol_L_hr/1000) /(NITROGEN_ug_mL_hr/14) )  %>%
dplyr::mutate('ON_RESP.start.end'       = (( (RESP.start.end_umol_L_hr/1000)*14)/(NITROGEN_ug_mL_hr)*1000)))
View(Master_table)
# CALCULATE O:N :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Master_table <- as.data.frame(RespExcretion_Master %>%
dplyr::select(c('Date',  'pH', 'Replicate', 'Dry_Tissue_weight', 'resp_umol_L_hr', 'start.end_resp_umol_L_hr', 'Nitrogen_ug_mL_hr')) %>%
dplyr::rename(c('RESP_umol.02_L_hr'        = 'resp_umol_L_hr', 'RESP.start.end_umol.02_L_hr' = 'start.end_resp_umol_L_hr', 'NITROGEN_ug.N2_mL_hr' = 'Nitrogen_ug_mL_hr')) %>%
dplyr::mutate('RESP_umol.02_L_g.tissue_hr' =  (RESP_umol_L_hr) / (Dry_Tissue_weight) )  %>%
dplyr::mutate('RESP_mg.02_L_g.tissue_hr'   =  ((RESP_umol.02_L_g.tissue_hr) / (1000)) * 32 )  %>%
dplyr::mutate('ON_RESP.LoLinR'             =  (RESP_umol_L_hr/1000) /(NITROGEN_ug_mL_hr/14) )  %>%
dplyr::mutate('ON_RESP.start.end'          = (( (RESP.start.end_umol_L_hr/1000)*14)/(NITROGEN_ug_mL_hr)*1000)))
# CALCULATE O:N :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Master_table <- as.data.frame(RespExcretion_Master %>%
dplyr::select(c('Date',  'pH', 'Replicate', 'Dry_Tissue_weight', 'resp_umol_L_hr', 'start.end_resp_umol_L_hr', 'Nitrogen_ug_mL_hr')) %>%
dplyr::rename(c('RESP_umol.O2_L_hr'        = 'resp_umol_L_hr', 'RESP.start.end_umol.O2_L_hr' = 'start.end_resp_umol_L_hr', 'NITROGEN_ug.N2_mL_hr' = 'Nitrogen_ug_mL_hr')) %>%
dplyr::mutate('RESP_umol.O2_L_g.tissue_hr' =  (RESP_umol.O2_L_hr) / (Dry_Tissue_weight) )  %>%
dplyr::mutate('RESP_mg.O2_L_g.tissue_hr'   =  ((RESP_umol.O2_L_g.tissue_hr) / (1000)) * 32 )  %>%
dplyr::mutate('ON_RESP.LoLinR'             =  (RESP_umol.O2_L_hr/1000) /(NITROGEN_ug_mL_hr/14) )  %>%
dplyr::mutate('ON_RESP.start.end'          = (( (RESP.start.end_umol.O2_L_hr/1000)*14)/(NITROGEN_ug.N2_mL_hr)*1000)))
# CALCULATE O:N :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Master_table <- as.data.frame(RespExcretion_Master %>%
dplyr::select(c('Date',  'pH', 'Replicate', 'Dry_Tissue_weight', 'resp_umol_L_hr', 'start.end_resp_umol_L_hr', 'Nitrogen_ug_mL_hr')) %>%
dplyr::rename(c('RESP_umol.O2_L_hr'        = 'resp_umol_L_hr', 'RESP.start.end_umol.O2_L_hr' = 'start.end_resp_umol_L_hr', 'NITROGEN_ug.N2_mL_hr' = 'Nitrogen_ug_mL_hr')) %>%
dplyr::mutate('RESP_umol.O2_L_g.tissue_hr' =  (RESP_umol.O2_L_hr) / (Dry_Tissue_weight) )  %>%
dplyr::mutate('RESP_mg.O2_L_g.tissue_hr'   =  ((RESP_umol.O2_L_g.tissue_hr) / (1000)) * 32 )  %>%
dplyr::mutate('ON_RESP.LoLinR'             =  (RESP_umol.O2_L_hr/1000) /(NITROGEN_ug.N2_mL_hr/14) )  %>%
dplyr::mutate('ON_RESP.start.end'          = (( (RESP.start.end_umol.O2_L_hr/1000)*14)/(NITROGEN_ug.N2_mL_hr)*1000)))
View(Master_table)
RespExcretion_Master
# CALCULATE O:N :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Master_table <- as.data.frame(RespExcretion_Master %>%
dplyr::select(c('Date',  'pH', 'Replicate', 'volume', 'Dry_Tissue_weight', 'resp_umol_L_hr', 'start.end_resp_umol_L_hr', 'Nitrogen_ug_mL_hr')) %>%
dplyr::rename(c('RESP_umol.O2_L_hr'        = 'resp_umol_L_hr', 'RESP.start.end_umol.O2_L_hr' = 'start.end_resp_umol_L_hr', 'NITROGEN_ug.N2_mL_hr' = 'Nitrogen_ug_mL_hr')) %>%
dplyr::mutate('RESP_umol.O2_L_g.tissue_hr' =  (RESP_umol.O2_L_hr) / (Dry_Tissue_weight) )  %>%
dplyr::mutate('RESP_mg.O2_L_g.tissue_hr'   =  ((RESP_umol.O2_L_g.tissue_hr) / (1000)) * 32 )  %>%
dplyr::mutate('ON_RESP.LoLinR'             =  (RESP_umol.O2_L_hr/1000) /(NITROGEN_ug.N2_mL_hr/14) )  %>%
dplyr::mutate('ON_RESP.start.end'          = (( (RESP.start.end_umol.O2_L_hr/1000)*14)/(NITROGEN_ug.N2_mL_hr)*1000)))
Master_table
View(Master_table)
# CALCULATE O:N :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Master_table <- as.data.frame(RespExcretion_Master %>%
dplyr::select(c('Date',  'pH', 'Replicate', 'volume', 'Dry_Tissue_weight', 'resp_umol_L_hr', 'start.end_resp_umol_L_hr', 'Nitrogen_ug_mL_hr')) %>%
dplyr::rename(c('RESP_umol.O2_L_hr'        = 'resp_umol_L_hr', 'RESP.start.end_umol.O2_L_hr' = 'start.end_resp_umol_L_hr', 'NITROGEN_ug.N2_mL_hr' = 'Nitrogen_ug_mL_hr')) %>%
dplyr::mutate('RESP_umol.O2_L_g.tissue_hr' =  (RESP_umol.O2_L_hr) / (Dry_Tissue_weight))      %>%
dplyr::mutate('RESP_mg.O2_L_g.tissue_hr'   =  ((RESP_umol.O2_L_g.tissue_hr) / (1000)) * 32)   %>%
dplyr::mutate('NITROGEN_umol.N2_L_hr'      =  ((NITROGEN_ug.N2_mL_hr*(volume/1000))/14) )     %>%
dplyr::mutate('ON_RESP.LoLinR'             =  (RESP_umol.O2_L_hr / NITROGEN_umol.N2_L_hr))    %>%
dplyr::mutate('ON_RESP.start.end'          =  (RESP.start.end_umol.O2_L_hr / NITROGEN_umol.N2_L_hr)) )
View(Master_table)
View(Master_table)
# CALCULATE O:N :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Master_table <- as.data.frame(RespExcretion_Master %>%
dplyr::select(c('Date',  'pH', 'Replicate', 'volume', 'Dry_Tissue_weight', 'resp_umol_L_hr', 'start.end_resp_umol_L_hr', 'Nitrogen_ug_mL_hr')) %>%
dplyr::rename(c('RESP_umol.O2_L_hr'            = 'resp_umol_L_hr', 'RESP.start.end_umol.O2_L_hr' = 'start.end_resp_umol_L_hr', 'NITROGEN_ug.N2_mL_hr' = 'Nitrogen_ug_mL_hr')) %>%
dplyr::mutate('RESP_umol.O2_L_g.tissue_hr'     =  (RESP_umol.O2_L_hr) / (Dry_Tissue_weight))      %>%
dplyr::mutate('RESP_mg.O2_L_g.tissue_hr'       =  ((RESP_umol.O2_L_g.tissue_hr) / (1000)) * 32)   %>%
dplyr::mutate('NITROGEN_umol.N2_L_g.tissue_hr' =  (((NITROGEN_ug.N2_mL_hr*(volume/1000))/14) /(Dry_Tissue_weight)) ) %>%
dplyr::mutate('ON_RESP.LoLinR'                 =  (RESP_umol.O2_L_g.tissue_hr / NITROGEN_umol.N2_L_g.tissue_hr))    %>%
dplyr::mutate('ON_RESP.start.end'              =  (RESP.start.end_umol.O2_L_hr / NITROGEN_umol.N2_L_hr)) )
# CALCULATE O:N :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Master_table <- as.data.frame(RespExcretion_Master %>%
dplyr::select(c('Date',  'pH', 'Replicate', 'volume', 'Dry_Tissue_weight', 'resp_umol_L_hr', 'start.end_resp_umol_L_hr', 'Nitrogen_ug_mL_hr')) %>%
dplyr::rename(c('RESP_umol.O2_L_hr'            = 'resp_umol_L_hr', 'RESP.start.end_umol.O2_L_hr' = 'start.end_resp_umol_L_hr', 'NITROGEN_ug.N2_mL_hr' = 'Nitrogen_ug_mL_hr')) %>%
dplyr::mutate('RESP_umol.O2_L_g.tissue_hr'     =  (RESP_umol.O2_L_hr) / (Dry_Tissue_weight))      %>%
dplyr::mutate('RESP_mg.O2_L_g.tissue_hr'       =  ((RESP_umol.O2_L_g.tissue_hr) / (1000)) * 32)   %>%
dplyr::mutate('NITROGEN_umol.N2_L_g.tissue_hr' =  (((NITROGEN_ug.N2_mL_hr*(volume/1000))/14) /(Dry_Tissue_weight)) ) %>%
dplyr::mutate('ON_RESP.LoLinR'                 =  (RESP_umol.O2_L_g.tissue_hr / NITROGEN_umol.N2_L_g.tissue_hr))    %>%
dplyr::mutate('ON_RESP.start.end'              =  (RESP.start.end_umol.O2_L_hr / NITROGEN_umol.N2_L_g.tissue_hr)) )
View(Master_table)
# CALCULATE O:N :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Master_table <- as.data.frame(RespExcretion_Master %>%
dplyr::select(c('Date',  'pH', 'Replicate', 'volume', 'Dry_Tissue_weight', 'resp_umol_L_hr', 'start.end_resp_umol_L_hr', 'Nitrogen_ug_mL_hr')) %>%
dplyr::rename(c('RESP_umol.O2_L_hr'            = 'resp_umol_L_hr', 'RESP.start.end_umol.O2_L_hr' = 'start.end_resp_umol_L_hr', 'NITROGEN_ug.N2_mL_hr' = 'Nitrogen_ug_mL_hr')) %>%
dplyr::mutate('RESP_umol.O2_L_g.tissue_hr'     =  (RESP_umol.O2_L_hr) / (Dry_Tissue_weight))      %>%
dplyr::mutate('RESP_mg.O2_L_g.tissue_hr'       =  ((RESP_umol.O2_L_g.tissue_hr) / (1000)) * 32)   %>%
dplyr::mutate('NITROGEN_umol.N2_L_g.tissue_hr' =  (((NITROGEN_ug.N2_mL_hr*(volume/1000))/14) /(Dry_Tissue_weight)) ) %>%
dplyr::mutate('ON_RESP.LoLinR'                 =  (RESP_umol.O2_L_g.tissue_hr / NITROGEN_umol.N2_L_g.tissue_hr))    %>%
dplyr::mutate('ON_RESP.start.end'              =  ((RESP.start.end_umol.O2_L_hr/(Dry_Tissue_weight)) / NITROGEN_umol.N2_L_g.tissue_hr)) )
View(Master_table)
View(Master_table)
RespExcretion_Master
# CALCULATE O:N :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Master_table <- as.data.frame(RespExcretion_Master %>%
dplyr::select(c('Date',  'pH', 'Replicate', 'volume', 'Dry_Tissue_weight', 'resp_mg_L_hr', 'resp_umol_L_hr', 'start.end_resp_umol_L_hr', 'Nitrogen_ug_mL_hr')) %>%
dplyr::rename(c('RESP_mg.O2_L_hr' = 'resp_mg_L_hr',
'RESP.startend_resp_mg.O2_L_hr' = 'start.end_resp_mg_L_hr',
'NITROGEN_ug.N2_mL_hr' = 'Nitrogen_ug_mL_hr')) %>%
dplyr::mutate('NITROGEN_ug.N2_L_g.tissue_hr'          =  ((NITROGEN_ug.N2_mL_hr*(volume/1000)) /(Dry_Tissue_weight)) ) %>%
dplyr::mutate('RESP_mg.O2_L_g.tissue_hr'              =  (RESP_mg.O2_L_hr) / (Dry_Tissue_weight))                      %>%
dplyr::mutate('RESP.startend_mg.O2_L_g.tissue_hr'     =  (RESP.startend_resp_mg.O2_L_hr) / (Dry_Tissue_weight))        %>%
dplyr::mutate('ON_RESP.LoLinR'                 =  ( (RESP_mg.O2_L_g.tissue_hr/16) / (NITROGEN_ug.N2_L_g.tissue_hr/14)) )    %>%
dplyr::mutate('ON_RESP.start.end'              =  ( (RESP.startend_mg.O2_L_g.tissue_hr/16) / (NITROGEN_ug.N2_L_g.tissue_hr/14)))  )
# CALCULATE O:N :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Master_table <- as.data.frame(RespExcretion_Master %>%
dplyr::select(c('Date',  'pH', 'Replicate', 'volume', 'Dry_Tissue_weight', 'resp_mg_L_hr', 'resp_umol_L_hr', 'start.end_resp_mg_L_hr', 'Nitrogen_ug_mL_hr')) %>%
dplyr::rename(c('RESP_mg.O2_L_hr' = 'resp_mg_L_hr',
'RESP.startend_resp_mg.O2_L_hr' = 'start.end_resp_mg_L_hr',
'NITROGEN_ug.N2_mL_hr' = 'Nitrogen_ug_mL_hr')) %>%
dplyr::mutate('NITROGEN_ug.N2_L_g.tissue_hr'          =  ((NITROGEN_ug.N2_mL_hr*(volume/1000)) /(Dry_Tissue_weight)) ) %>%
dplyr::mutate('RESP_mg.O2_L_g.tissue_hr'              =  (RESP_mg.O2_L_hr) / (Dry_Tissue_weight))                      %>%
dplyr::mutate('RESP.startend_mg.O2_L_g.tissue_hr'     =  (RESP.startend_resp_mg.O2_L_hr) / (Dry_Tissue_weight))        %>%
dplyr::mutate('ON_RESP.LoLinR'                 =  ( (RESP_mg.O2_L_g.tissue_hr/16) / (NITROGEN_ug.N2_L_g.tissue_hr/14)) )    %>%
dplyr::mutate('ON_RESP.start.end'              =  ( (RESP.startend_mg.O2_L_g.tissue_hr/16) / (NITROGEN_ug.N2_L_g.tissue_hr/14)))  )
View(Master_table)
RespExcretion_Master %>%
dplyr::select(c('Date',  'pH', 'Replicate', 'volume', 'Dry_Tissue_weight', 'resp_mg_L_hr', 'resp_umol_L_hr', 'start.end_resp_mg_L_hr', 'Nitrogen_ug_mL_hr')) %>%
dplyr::rename(c('RESP_mg.O2_L_hr' = 'resp_mg_L_hr',
'RESP.startend_resp_mg.O2_L_hr' = 'start.end_resp_mg_L_hr',
'NITROGEN_ug.N2_mL_hr' = 'Nitrogen_ug_mL_hr')) %>%
dplyr::mutate('NITROGEN_ug.N2_L_hr'          =  (NITROGEN_ug.N2_mL_hr*(volume/1000)))
