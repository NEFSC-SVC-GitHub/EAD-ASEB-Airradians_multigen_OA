dplyr::filter(!pH %in% 7) %>%
ggplot(aes(x=Age_DPF, y=(Length_um/1000), color=pCO2)) +
geom_line(aes(linetype = factor(pCO2)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen", "darkorange2"))+
geom_errorbar(aes(ymin=(Length_um/1000)-(se/1000), ymax=(Length_um/1000)+(se/1000)), width=.2,
position=position_dodge(.1))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
scale_y_continuous(name ="Shell length (mm)")  +
scale_linetype_manual(values = c("500 μatm" = "solid", "800 μatm" = "dashed"))  +
theme(legend.position="none") +
theme_classic() +
ggtitle("F1 length") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~Life_stage, scales = 'free')
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Length/F1/F1_length_lineplot.pdf"))
F1_length_lineplot
dev.off()
## Use geom_line and geom_point to plot over time
F1_length_lineplot_Highincluded <- F1_length_MEANS %>%
mutate(Life_stage = factor(Life_stage, levels = c("larvae", "spat", "juvenile", "adult"))) %>% # relevel for the facets to occur in correct order
ggplot(aes(x=Age_DPF, y=(Length_um/1000), color=pCO2)) +
geom_line(aes(linetype = factor(pCO2)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("purple","forestgreen", "darkorange2"))+
geom_errorbar(aes(ymin=(Length_um/1000)-(se/1000), ymax=(Length_um/1000)+(se/1000)), width=.2,
position=position_dodge(.1))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
scale_y_continuous(name ="Shell length (mm)")  +
scale_linetype_manual(values = c("500 μatm" = "solid", "800 μatm" = "solid", "1200 uatm" = "solid"))  +
theme(legend.position="none") +
theme_classic() +
ggtitle("F1 length (high OA included)") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~Life_stage, scales = 'free')
F1_length_lineplot_Highincluded
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Length/F1/F1_length_lineplot_HighOA_included.pdf"))
F1_length_lineplot_Highincluded
dev.off()
F1_length_lineplot <- F1_length_MEANS %>%
mutate(Life_stage = factor(Life_stage, levels = c("larvae", "spat", "juvenile", "adult"))) %>% # relevel for the facets to occur in correct order
dplyr::filter(!pH %in% 7) %>%
ggplot(aes(x=Age_DPF, y=(Length_um/1000), color=pCO2)) +
geom_line(aes(linetype = factor(pCO2)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen", "darkorange2"))+
geom_errorbar(aes(ymin=(Length_um/1000)-(se/1000), ymax=(Length_um/1000)+(se/1000)), width=.2,
position=position_dodge(.1))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
scale_y_continuous(name ="Shell length (mm)")  +
scale_linetype_manual(values = c("500 μatm" = "solid", "800 μatm" = "solid"))  +
theme(legend.position="none") +
theme_classic() +
ggtitle("F1 length") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~Life_stage, scales = 'free')
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Length/F1/F1_length_lineplot.pdf"))
F1_length_lineplot
dev.off()
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Length/F1/F1_length_lineplot_HighOA_included.pdf"), width=8, height=6)
F1_length_lineplot_Highincluded
dev.off()
## Use geom_line and geom_point to plot over time
F1_length_lineplot_Highincluded <- F1_length_MEANS %>%
mutate(Life_stage = factor(Life_stage, levels = c("larvae", "spat", "juvenile", "adult"))) %>% # relevel for the facets to occur in correct order
ggplot(aes(x=Age_DPF, y=(Length_um/1000), color=pCO2)) +
geom_line(aes(linetype = factor(pCO2)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("purple","forestgreen", "darkorange2"))+
geom_errorbar(aes(ymin=(Length_um/1000)-(se/1000), ymax=(Length_um/1000)+(se/1000)), width=.2,
position=position_dodge(.1))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
scale_y_continuous(name ="Shell length (mm)")  +
#scale_linetype_manual(values = c("500 μatm" = "solid", "800 μatm" = "solid", "1200 uatm" = "solid"))  +
theme(legend.position="none") +
theme_classic() +
ggtitle("F1 length (high OA included)") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~Life_stage, scales = 'free')
F1_length_lineplot_Highincluded
F1_length_lineplot_Highincluded
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Length/F1/F1_length_lineplot_HighOA_included.pdf"), width=8, height=6)
F1_length_lineplot_Highincluded
dev.off()
## Use geom_line and geom_point to plot over time
F1_length_lineplot_Highincluded <- F1_length_MEANS %>%
mutate(Life_stage = factor(Life_stage, levels = c("larvae", "spat", "juvenile", "adult"))) %>% # relevel for the facets to occur in correct order
ggplot(aes(x=Age_DPF, y=(Length_um/1000), color=pCO2)) +
geom_line(aes(linetype = factor(pCO2)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("purple","forestgreen", "darkorange2"))+
geom_errorbar(aes(ymin=(Length_um/1000)-(se/1000), ymax=(Length_um/1000)+(se/1000)), width=.2,
position=position_dodge(.1))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
scale_y_continuous(name ="Shell length (mm)")  +
#scale_linetype_manual(values = c("500 μatm" = "solid", "800 μatm" = "solid", "1200 uatm" = "solid"))  +
theme(legend.position="none") +
theme_classic() +
ggtitle("F1 length (high OA included)") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~Life_stage, scales = 'free')
F1_length_lineplot_Highincluded
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Length/F1/F1_length_lineplot_HighOA_included.pdf"), width=8, height=6)
F1_length_lineplot_Highincluded
dev.off()
## Use geom_line and geom_point to plot over time
F1_length_lineplot_Highincluded <- F1_length_MEANS %>%
mutate(Life_stage = factor(Life_stage, levels = c("larvae", "spat", "juvenile", "adult"))) %>% # relevel for the facets to occur in correct order
ggplot(aes(x=Age_DPF, y=(Length_um/1000), color=pCO2)) +
geom_line(aes(linetype = factor(pCO2)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("purple","forestgreen", "darkorange2"))+
geom_errorbar(aes(ymin=(Length_um/1000)-(se/1000), ymax=(Length_um/1000)+(se/1000)), width=.2,
position=position_dodge(.1))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
scale_y_continuous(name ="Shell length (mm)")  +
scale_linetype_manual(values = c("500 μatm" = "solid", "800 μatm" = "solid", "1200 uatm" = "solid"))  +
theme(legend.position="none") +
theme_classic() +
ggtitle("F1 length (high OA included)") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~Life_stage, scales = 'free')
F1_length_lineplot_Highincluded
## Use geom_line and geom_point to plot over time
F1_length_lineplot_Highincluded <- F1_length_MEANS %>%
mutate(Life_stage = factor(Life_stage, levels = c("larvae", "spat", "juvenile", "adult"))) %>% # relevel for the facets to occur in correct order
ggplot(aes(x=Age_DPF, y=(Length_um/1000), color=pCO2)) +
geom_line(size = 0.5) +  # aes(linetype = factor(pCO2)),
geom_point()+
scale_color_manual(values=c("purple","forestgreen", "darkorange2"))+
geom_errorbar(aes(ymin=(Length_um/1000)-(se/1000), ymax=(Length_um/1000)+(se/1000)), width=.2,
position=position_dodge(.1))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
scale_y_continuous(name ="Shell length (mm)")  +
#scale_linetype_manual(values = c("500 μatm" = "solid", "800 μatm" = "solid", "1200 uatm" = "solid"))  +
theme(legend.position="none") +
theme_classic() +
ggtitle("F1 length (high OA included)") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~Life_stage, scales = 'free')
F1_length_lineplot_Highincluded
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Length/F1/F1_length_lineplot_HighOA_included.pdf"), width=9, height=6)
F1_length_lineplot_Highincluded
dev.off()
## Use geom_line and geom_point to plot over time
F1_length_lineplot <- F1_length_MEANS %>%
mutate(Life_stage = factor(Life_stage, levels = c("larvae", "spat", "juvenile", "adult"))) %>% # relevel for the facets to occur in correct order
dplyr::filter(!pH %in% 7) %>%
ggplot(aes(x=Age_DPF, y=(Length_um/1000), color=pCO2)) +
geom_line(size = 0.5) +  # aes(linetype = factor(pCO2)),
geom_point()+
scale_color_manual(values=c("forestgreen", "darkorange2"))+
geom_errorbar(aes(ymin=(Length_um/1000)-(se/1000), ymax=(Length_um/1000)+(se/1000)), width=.2,
position=position_dodge(.1))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
scale_y_continuous(name ="Shell length (mm)")  +
#scale_linetype_manual(values = c("500 μatm" = "solid", "800 μatm" = "solid"))  +
theme(legend.position="none") +
theme_classic() +
ggtitle("F1 length") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~Life_stage, scales = 'free')
F1_length_lineplot_Highincluded <- F1_length_MEANS %>%
mutate(Life_stage = factor(Life_stage, levels = c("larvae", "spat", "juvenile", "adult"))) %>% # relevel for the facets to occur in correct order
ggplot(aes(x=Age_DPF, y=(Length_um/1000), color=pCO2)) +
geom_line(size = 0.5) +  # aes(linetype = factor(pCO2)),
geom_point()+
scale_color_manual(values=c("purple","forestgreen", "darkorange2"))+
geom_errorbar(aes(ymin=(Length_um/1000)-(se/1000), ymax=(Length_um/1000)+(se/1000)), width=.2,
position=position_dodge(.1))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
scale_y_continuous(name ="Shell length (mm)")  +
#scale_linetype_manual(values = c("500 μatm" = "solid", "800 μatm" = "solid", "1200 uatm" = "solid"))  +
theme(legend.position="none") +
theme_classic() +
ggtitle("F1 length") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~Life_stage, scales = 'free')
F1_length_lineplot_Highincluded
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Length/F1/F1_length_lineplot_HighOA_included.pdf"), width=9, height=6)
F1_length_lineplot_Highincluded
dev.off()
facet_wrap(~Life_stage, scales = 'free')
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Length/F1/F1_length_lineplot.pdf"), width=9, height=6)
F1_length_lineplot
dev.off()
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(ggplot2)
library(forcats)
library(lme4)
library(lmerTest)
library(performance)
library(car)
library(kableExtra)
library(pander)
library(data.table)
library(Rmisc)
library(devtools)
library(ggpubr)
library(SciViews)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis") # personal computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis") # Work computer
# LOAD DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
RR_master <- read.csv(file="Output/Respiration/Calculated_Resp_Master.csv", header=T) %>%
filter(!Food %in% 'unfed') %>% # omit low food trial data
dplyr::mutate(resp_umol_L_hr_mg_WDW =
resp_umol_L_hr/whole_Dry_weight) %>%  # call whole dry weight corrected MO2
dplyr::mutate(resp_umol_L_hr_mmLength =
resp_umol_L_hr/ (1000/Length_um)) # call length corrected MO2
# View(RR_master)
RR_master
SumTab_Len <- RR_master[!is.na(RR_master$Length_um),] %>%
mutate(Length_mm = Length_um/1000) %>%
summarySE(measurevar="Length_mm", groupvars=c("Date", "pCO2"))
SumTab_Len
SumTab_Len <- RR_master[!is.na(RR_master$Length_um),] %>%
mutate(Length_mm = Length_um/1000) %>%
summarySE(measurevar="Length_mm", groupvars=c("Date"))
SumTab_Len
SumTab_Len <- RR_master[!is.na(RR_master$Length_um),] %>%
mutate(Length_mm = Length_um/1000) %>%
summarySE(measurevar="Length_mm", groupvars=c("Date")) %>%
dplyr::sort()
SumTab_Len <- RR_master[!is.na(RR_master$Length_um),] %>%
mutate(Length_mm = Length_um/1000) %>%
summarySE(measurevar="Length_mm", groupvars=c("Date")) %>%
dplyr::arrange(sor())
SumTab_Len <- RR_master[!is.na(RR_master$Length_um),] %>%
mutate(Length_mm = Length_um/1000) %>%
summarySE(measurevar="Length_mm", groupvars=c("Date")) %>%
dplyr::arrange(sort())
SumTab_Len
SumTab_Len <- RR_master[!is.na(RR_master$Length_um),] %>%
mutate(Length_mm = Length_um/1000) %>%
summarySE(measurevar="Length_mm", groupvars=c("Date")) %>%
dplyr::arrange()
SumTab_Len
SumTab_Len <- RR_master[!is.na(RR_master$Length_um),] %>%
mutate(Length_mm = Length_um/1000) %>%
summarySE(measurevar="Length_mm", groupvars=c("Date")) %>%
dplyr::arrange(Date)
SumTab_Len
SumTable <- RR_master[!is.na(RR_master$Length_um),] %>%
mutate(Length_mm = Length_um/1000) %>%
summarySE(measurevar="Length_mm", groupvars=c("Date")) %>%
dplyr::arrange(Date)
SumTable
library(ggplot2)
library(dplyr)
library(reshape2)
library(pander)
library(dplyr)
library(kableExtra)
library(data.table)
library(stringr)
library(latex2exp)
library(Rmisc)
library(aggregate)
library(car)
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis") # Work computer
biodep <- read.csv(file="Data/Biodeposition/Raw_masterdata_biodeposition.csv", header = TRUE)
## Particulate matter (total and particulate inorganic/organic matter)
biodep2 <- biodep %>%
# Total particulate matter
dplyr::mutate(TPM_mgL = case_when(vol_filtered_L > 0 ~ ((dry_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ,
is.na(vol_filtered_L) ~ (dry_filter_weight_mg - initial_filter_weight_mg) )) %>%
# Particulate Inorganic matter - NOTE: mg/L for the water samples, BUT just mg for the feces and pseuodofeces (although column reads mg_L)
dplyr::mutate(PIM_mgL = case_when(vol_filtered_L > 0 ~ ((ash_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ,
is.na(vol_filtered_L) ~ (ash_filter_weight_mg - initial_filter_weight_mg) )) %>%
# Particulate Organic matter - NOTE: mg/L for the water samples, BUT just mg for the feces and pseuodofeces (although column reads mg_L)
dplyr::mutate(POM_mgL = case_when(vol_filtered_L > 0 ~ ((dry_filter_weight_mg - ash_filter_weight_mg) / vol_filtered_L) ,
is.na(vol_filtered_L) ~ (dry_filter_weight_mg - ash_filter_weight_mg) )) %>%
# % of Total as Particulate Inorganic matter
dplyr::mutate(Perc_INORG = ((PIM_mgL/TPM_mgL)*100) ) %>%
# % of Total as Particulate Organic matter
dplyr::mutate(Perc_ORG = ((POM_mgL/TPM_mgL)*100) ) %>%
# EGESTION RATE DATA (just for feces samples)
# Egestion rate (mg / hour)
dplyr::mutate(ER_mghr = case_when(sample_type =='feces' ~ (TPM_mgL / inclubation_time_hours)) ) %>% # although column reads mgL, feces and pseudofeces are in units of just mg
# Organic Egestion Rate (OER) POM of feces/feces collection time
dplyr::mutate(OER_mghr = case_when(sample_type =='feces' ~ (POM_mgL / inclubation_time_hours)) ) %>% # although column reads mgL, feces and pseudofeces are in units of just mg
# Inorganic Egestion Rate (OER) PIM of feces/feces collection time
dplyr::mutate(IER_mghr = case_when(sample_type =='feces' ~ (PIM_mgL / inclubation_time_hours)) ) %>% # although column reads mgL, feces and pseudofeces are in units of just mg
# REJECTION RATE DATA (just for pseudofeces samples)
# Rejection rate (mg / hour)
dplyr::mutate(RR_mghr = case_when(sample_type =='pseudofeces' ~ (TPM_mgL / inclubation_time_hours)) ) %>% # although column reads mgL, feces and pseudofeces are in units of just mg
# Organic Rejection Rate (ORR) POM of pseudofeces/pseudofeces collection time
dplyr::mutate(ORR_mghr = case_when(sample_type =='pseudofeces' ~ (POM_mgL / inclubation_time_hours)) ) %>% # although column reads mgL, feces and pseudofeces are in units of just mg
# Inorganic Rejection Rate (IRR) PIM of pseudofeces/pseudofeces collection time
dplyr::mutate(IRR_mghr = case_when(sample_type =='pseudofeces' ~ (PIM_mgL / inclubation_time_hours)) )  # although column reads mgL, feces and pseudofeces are in units of just mg
View(biodep2)
# blanks - as 'water_Blank' - call to correct in biodep2 below...
WaterSamples_blank     <- biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Blank') %>%
dplyr::group_by(Date,treatment)
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ANALYSIS AND PLOTTING  :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Biodep_Master <- read.csv("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Biodeposition/Biodeposition_master.csv", header = T)
# (1) First, run anova within date for all records (for looped!)
ANOVA_Dates       <- as.data.frame(unique(Biodep_Master$Date)) # call a list to loop in
AOVdf_total       <- data.frame() # start dataframe, this will be the master output
DF_loop           <- data.frame(matrix(nrow = 1, ncol = 12)) # create dataframe to save during for loop
colnames(DF_loop) <- c('Date', 'Metric', 'model', 'DF.num' , 'DF.denom', 'F_val','P_val', 'SigDif', 'ShapiroWilk', 'ResidNorm', 'Levenes', 'HomogVar') # names for comuns in the for loop
cols_m_loop       <- as.data.frame(c('SE','OIR','FR_correct','RR_Percent','OIR','AR','AE')) %>% `colnames<-`('biodep_meas')
Biodep_Master
AE_boxplot <- Biodep_Master %>%
#filter(!AE < 0) %>%
ggplot(aes(pCO2 , AE , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white", "grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=6),
axis.title=element_text(size=6)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Assimilation Efficiency, F1 Scallops") +
facet_wrap(~Date)
AE_boxplot <- Biodep_Master %>%
#filter(!AE < 0) %>%
ggplot(aes(pCO2 , AE , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("forestgreen","orange")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=6),
axis.title=element_text(size=6)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Assimilation Efficiency, F1 Scallops") +
facet_wrap(~Date)
AE_boxplot
s
AE_boxplot <- Biodep_Master %>%
dplyr::mutate(Temperature = case_when(Date == '20220312' ~ '16C',
Date == '20210930' ~ '20C')) %>%
#filter(!AE < 0) %>%
ggplot(aes(pCO2 , AE , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("forestgreen","orange")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=6),
axis.title=element_text(size=6)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Assimilation Efficiency, F1 Scallops") +
facet_wrap(~Temperature)
AE_boxplot
AE_boxplot <- Biodep_Master %>%
dplyr::mutate(Temperature = case_when(Date == '20220312' ~ '16C',
Date == '20210923' ~ '20C')) %>%
#filter(!AE < 0) %>%
ggplot(aes(pCO2 , AE , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("forestgreen","orange")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=6),
axis.title=element_text(size=6)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Assimilation Efficiency, F1 Scallops") +
facet_wrap(~Temperature)
AE_boxplot
AE_boxplot <- Biodep_Master %>%
dplyr::mutate(Temperature = case_when(Date == '20220312' ~ '16C',
Date == '20220923' ~ '20C')) %>%
#filter(!AE < 0) %>%
ggplot(aes(pCO2 , AE , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("forestgreen","orange")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=6),
axis.title=element_text(size=6)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Assimilation Efficiency, F1 Scallops") +
facet_wrap(~Temperature)
AE_boxplot
AE_boxplot <- Biodep_Master %>%
dplyr::mutate(Temperature = case_when(Date == '20220302' ~ '16C',
Date == '20220923' ~ '20C')) %>%
#filter(!AE < 0) %>%
ggplot(aes(pCO2 , AE , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("forestgreen","orange")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=6),
axis.title=element_text(size=6)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Assimilation Efficiency, F1 Scallops") +
facet_wrap(~Temperature)
AE_boxplot
AE_boxplot <- Biodep_Master %>%
dplyr::mutate(Temperature = case_when(Date == '20220302' ~ '16C',
Date == '20220923' ~ '20C')) %>%
#filter(!AE < 0) %>%
ggplot(aes(pCO2 , AE , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("forestgreen","orange")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=6),
axis.title=element_text(size=6)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Assimilation Efficiency, F1 Scallops") +
facet_wrap(~Temperature)
# AE_boxplot
AR_boxplot <- Biodep_Master %>%
dplyr::mutate(Temperature = case_when(Date == '20220302' ~ '16C',
Date == '20220923' ~ '20C')) %>%
# filter(!AE < 0) %>%
ggplot(aes(pCO2 , AR , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("forestgreen","orange")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=6),
axis.title=element_text(size=6)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Assimilation Rate, F1 Scallops") +
facet_wrap(~Temperature)
# AR_boxplot
OIR_boxplot <- Biodep_Master %>%
dplyr::mutate(Temperature = case_when(Date == '20220302' ~ '16C',
Date == '20220923' ~ '20C')) %>%
#filter(!AE < 0) %>%
ggplot(aes(pCO2 , OIR , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("forestgreen","orange")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=6),
axis.title=element_text(size=6)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Organic Ingestion Rate, F1 Scallops") +
facet_wrap(~Temperature)
# OIR_boxplot
FR_boxplot <- Biodep_Master %>%
dplyr::mutate(Temperature = case_when(Date == '20220302' ~ '16C',
Date == '20220923' ~ '20C')) %>%
#filter(!AE < 0) %>%
ggplot(aes(pCO2 , FR , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("forestgreen","orange")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=6),
axis.title=element_text(size=6)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Filtration Rate, F1 Scallops") +
facet_wrap(~Temperature)
# FR_boxplot
RR_boxplot <- Biodep_Master %>%
dplyr::mutate(Temperature = case_when(Date == '20220302' ~ '16C',
Date == '20220923' ~ '20C')) %>%
#filter(!AE < 0) %>%
ggplot(aes(pCO2 , RR_Percent , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("forestgreen","orange")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=6),
axis.title=element_text(size=6)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Percent Rejection Rate, F1 Scallops") +
facet_wrap(~Temperature)
# RR_boxplot
SE_boxplot <- Biodep_Master %>%
dplyr::mutate(Temperature = case_when(Date == '20220302' ~ '16C',
Date == '20220923' ~ '20C')) %>%
#filter(!AE < 0) %>%
ggplot(aes(pCO2 , SE , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("forestgreen","orange")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=6),
axis.title=element_text(size=6)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Selection Efficiency, F1 Scallops") +
facet_wrap(~Temperature)
# SE_boxplot
# output the plot
library(ggpubr)
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Biodeposition/Biodeposition_Boxplots.pdf"), width = 10, height= 8)
ggarrange(SE_boxplot,RR_boxplot, OIR_boxplot, FR_boxplot, AE_boxplot, AR_boxplot)
dev.off()
ggarrange(SE_boxplot,RR_boxplot, OIR_boxplot, FR_boxplot, AE_boxplot, AR_boxplot)
