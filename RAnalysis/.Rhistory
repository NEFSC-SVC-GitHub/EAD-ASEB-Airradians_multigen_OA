dplyr::mutate(Num.genes.all  = (as.numeric(sub("/.*", "", BgRatio))),
log10_pvalue   = abs(log10(pvalue)),
pathway.name = sapply(strsplit(pathway.name, " - Crassostrea"),
"[",1)) %>% # ommit the unneeded pathway string
dplyr::select('Day', 'modColor', 'KEGGID_pathway', 'pathway.name',
'Num.genes.all', 'Num.genes.exp', 'Gene.IDs',
'Rich_factor', 'pvalue', 'log10_pvalue', 'qvalue') %>%
arrange(desc(as.numeric(Rich_factor)))
write.csv(KEGGoutput, file = paste("Output/Transcriptomics/WGCNA/challenge/KEGG/clusterProfiler/parsed_by_module/Challenge_",modColor,"_KEGG_clusterProfiler.csv", sep =''))
# Plot
plot<- KEGGoutput %>%
ggplot(aes(x=reorder(pathway.name, Rich_factor), y= Rich_factor)) +
geom_point( aes(col=qvalue, size=Num.genes.exp)) +   # Draw points
geom_segment(aes(x=pathway.name,
xend=pathway.name,
y=min(Rich_factor),
yend=max(Rich_factor)),
linetype=NA,
size=0) +   # Draw dashed lines
labs(title="Challenge",
x = "Pathway",
y = "Rich Factor",
subtitle=paste("WGCNA Module:", modColor, sep =' ')) +
theme_bw() +
coord_flip()
pdf(paste("Output/Transcriptomics/WGCNA/challenge/KEGG/clusterProfiler/parsed_by_module/Richfactor_plots/Challenge_",modColor,"_RichFactorPlot.pdf", sep =''),
width=8, height=6)
print(plot)
dev.off()
# stringsplit and unnest for a data set of genes and IDs associated with each pathway
KEGGoutput$Gene.IDs               <- as.vector(strsplit(as.character(KEGGoutput$Gene.IDs), "/"))
KEGGoutput_unnest                 <- unnest(KEGGoutput, Gene.IDs)
KEGGoutput_unnest$Cgigas_KEGGID   <- paste("crg:", KEGGoutput_unnest$Gene.IDs, sep='')
KEGGoutput_allgenes                 <- merge(KEGGoutput_unnest, Airr_Cvirg_Cgig_KEGG, by='Cgigas_KEGGID') %>%
group_by(pathway.name) %>%
arrange(Cvirginica_Protein_name, .by_group = TRUE) %>%
unique()
write.csv(KEGGoutput_allgenes, file = paste("Output/Transcriptomics/WGCNA/challenge/KEGG/clusterProfiler/parsed_by_module/Challenge_",modColor,"_KEGG_clusterProfiler_unlisted.csv", sep =''))
# print(KEGG.Day2_clustProfiler) # print to monitor progress
# master cumulative file
KEGG_clustProfiler_1 <- rbind(KEGG_clustProfiler_1,KEGGoutput) #bind to a cumulative list dataframe
} else {}
}
# prep loop for cumulative output table
df_total                   <- data.frame() # start dataframe
# run echirchKEGG using clusterProfiler
KEGG_clustProfiler_1    <- data.frame(matrix(nrow = 1, ncol = 11)) # create dataframe to save cumunalitively during for loop
colnames(KEGG_clustProfiler_1) <- c('Day', 'modColor', 'KEGGID_pathway', 'pathway.name' ,
'Num.genes.all', 'Num.genes.exp', 'Gene.IDs',
'Rich_factor', 'pvalue', 'log10_pvalue', 'qvalue') # names for comuns in the for loop
# run for loop
for (i in 1:nrow(WGCNA_sigmodules_1)) {
modColor     <- WGCNA_sigmodules_1[i,1]
pval_colname <- paste0('p.MM.',modColor)
mm_colname   <- paste0('MM.',modColor)
ModuleLoop   <- as.data.frame(Challenge_WGCNA.data.merged %>%
dplyr::filter(moduleColor %in% modColor)  %>%
dplyr::select(c('Airradians_TranscriptID',
'Cgigas_KEGGID', #'geneSymbol',
pval_colname, mm_colname)) %>%
dplyr::filter(.[[3]] < 0.05) %>%  # & .[[4]] > 0.6) %>%
dplyr::select(c('Airradians_TranscriptID', 'Cgigas_KEGGID', pval_colname)) %>%
na.omit() %>%
dplyr::mutate(Cgigas_KEGGID = gsub(".*:","",Cgigas_KEGGID)) %>%
unnest(Cgigas_KEGGID))
# ModuleLoop2   <- as.data.frame(Challenge_WGCNA.data.merged %>%
#                               dplyr::filter(moduleColor %in% 'salmon')  %>%
#                               dplyr::select(c('Airradians_TranscriptID',
#                                               'Cgigas_KEGGID', #'geneSymbol',
#                                                pval_colname, mm_colname)) %>%
#                               dplyr::filter(.[[3]] < 0.05) %>%  # & .[[4]] > 0.6) %>%
#                               dplyr::select(c('Airradians_TranscriptID', 'Cgigas_KEGGID', pval_colname)) %>%
#                               na.omit() %>%
#                               dplyr::mutate(Cgigas_KEGGID = gsub(".*:","",Cgigas_KEGGID)) %>%
#                               unnest(Cgigas_KEGGID))
# ModuleLoop <- rbind(ModuleLoop2[,c(1:2)],ModuleLoop[,c(1:2)])
# clusterProfiler
entrezID_vector <- as.vector(as.numeric(ModuleLoop$Cgigas_KEGGID))
KEGG_cgigas     <- enrichKEGG(gene = entrezID_vector,
organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
if (  nrow(as.data.frame(head(KEGG_cgigas))) > 0 ) {
# creat dateframe and write the csv file out
df                      <- as.data.frame(head(KEGG_cgigas))
rownames(df)            <- c()
KEGGoutput              <- as.data.frame(do.call(cbind.data.frame, df)) %>%
dplyr::mutate(
Rich_factor  = (  (as.numeric(sub("/.*", "", GeneRatio))) /
(as.numeric(sub("/.*", "", BgRatio)))),
Day = 'Day2',
modColor = modColor) %>%
dplyr::rename(KEGGID_pathway = ID,
pathway.name   = Description,
Gene.IDs       = geneID,
Num.genes.exp  = Count) %>%
dplyr::mutate(Num.genes.all  = (as.numeric(sub("/.*", "", BgRatio))),
log10_pvalue   = abs(log10(pvalue)),
pathway.name = sapply(strsplit(pathway.name, " - Crassostrea"),
"[",1)) %>% # ommit the unneeded pathway string
dplyr::select('Day', 'modColor', 'KEGGID_pathway', 'pathway.name',
'Num.genes.all', 'Num.genes.exp', 'Gene.IDs',
'Rich_factor', 'pvalue', 'log10_pvalue', 'qvalue') %>%
arrange(desc(as.numeric(Rich_factor)))
write.csv(KEGGoutput, file = paste("Output/Transcriptomics/WGCNA/challenge/KEGG/clusterProfiler/parsed_by_module/Challenge_",modColor,"_KEGG_clusterProfiler.csv", sep =''))
# Plot
plot<- KEGGoutput %>%
ggplot(aes(x=reorder(pathway.name, Rich_factor), y= Rich_factor)) +
geom_point( aes(col=qvalue, size=Num.genes.exp)) +   # Draw points
geom_segment(aes(x=pathway.name,
xend=pathway.name,
y=min(Rich_factor),
yend=max(Rich_factor)),
linetype=NA,
size=0) +   # Draw dashed lines
labs(title="Challenge",
x = "Pathway",
y = "Rich Factor",
subtitle=paste("WGCNA Module:", modColor, sep =' ')) +
theme_bw() +
coord_flip()
pdf(paste("Output/Transcriptomics/WGCNA/challenge/KEGG/clusterProfiler/parsed_by_module/Richfactor_plots/Challenge_",modColor,"_RichFactorPlot.pdf", sep =''),
width=8, height=6)
print(plot)
dev.off()
# stringsplit and unnest for a data set of genes and IDs associated with each pathway
KEGGoutput$Gene.IDs               <- as.vector(strsplit(as.character(KEGGoutput$Gene.IDs), "/"))
KEGGoutput_unnest                 <- unnest(KEGGoutput, Gene.IDs)
KEGGoutput_unnest$Cgigas_KEGGID   <- paste("crg:", KEGGoutput_unnest$Gene.IDs, sep='')
KEGGoutput_allgenes                 <- merge(KEGGoutput_unnest, Airr_Cvirg_Cgig_KEGG, by='Cgigas_KEGGID') %>%
group_by(pathway.name) %>%
arrange(Cvirginica_Protein_name, .by_group = TRUE) %>%
unique()
write.csv(KEGGoutput_allgenes, file = paste("Output/Transcriptomics/WGCNA/challenge/KEGG/clusterProfiler/parsed_by_module/Challenge_",modColor,"_KEGG_clusterProfiler_unlisted.csv", sep =''))
# print(KEGG.Day2_clustProfiler) # print to monitor progress
# master cumulative file
KEGG_clustProfiler_1 <- rbind(KEGG_clustProfiler_1,KEGGoutput) #bind to a cumulative list dataframe
} else {}
}
# first row NA for some reason, omit
KEGG_clustProfiler_1.OM <- na.omit(KEGG_clustProfiler_1)
options(scipen = 999)
# clusterprofiler output table
KEGG.Challenge_clustProfiler_output <- KEGG_clustProfiler_1.OM %>%  dplyr::mutate(
Samples    = 'Challenge',
Num.genes.exp = as.numeric(Num.genes.exp),
modColor      = factor(as.factor(modColor), levels= c('red', 'green','pink')),
Rich_factor   = as.numeric(signif(Rich_factor, digits = 2)),
log10_qvalue  = as.numeric(signif( abs(log10(qvalue)), digits = 3))
) %>%
dplyr::rename(
Description     = pathway.name,
module          = modColor,
Log_pvalue_adj  = log10_qvalue,
count           = Num.genes.exp
) %>%
dplyr::select(
c('Samples','module','Log_pvalue_adj','count','Rich_factor','Description')
) %>%
group_by(module) %>%
arrange(desc(Rich_factor), .by_group = TRUE)
KEGG.Challenge_clustProfiler_output
write.csv(KEGG.Challenge_clustProfiler_output, file = paste("Output/Transcriptomics/WGCNA/challenge/KEGG/clusterProfiler/Challenge_KEGG_clusterProfiler.csv", sep =''))
library(tidytext)
Challenge_SegmentPlot_clusterProfiler <- KEGG_clustProfiler_1.OM %>%
dplyr::filter(modColor %in% c('red', 'salmon','green','pink')) %>%
dplyr::mutate(modColor = factor(modColor , levels = c('red', 'salmon','green','pink'))) %>%
dplyr::mutate(pathway.name = reorder_within(pathway.name, log10_pvalue, modColor)) %>%
ggplot(aes(x=reorder(pathway.name, log10_pvalue), y= log10_pvalue, group = modColor)) +
geom_segment(aes(x=pathway.name, xend=pathway.name,
y=1, yend=log10_pvalue, color=modColor,
#aes(x=pathway.name, xend=pathway.name, y=min(log10_pvalue), yend=max(log10_pvalue)),
#linetype=NA,
size=3)) +   # Draw dashed lines
geom_point(aes(col=modColor, size=as.numeric(Num.genes.exp), fill = "white")) +   # Draw points
scale_color_manual(values = c('red', 'salmon','green','pink')) +
#ylim(0,8) +
labs(title="Day 14",
x = "Pathway",
y = "-Log(pvalue)",
subtitle="clusterProfiler") +
theme_classic() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="bottom"
) +
xlab("") +
ylab("") +
ggtitle("Challenge") +
theme(panel.border = element_blank(), # Set border
panel.grid.major = element_blank(), #Set major gridlines
panel.grid.minor = element_blank(), #Set minor gridlines
axis.line = element_line(colour = "black"), #Set axes color
plot.background=element_blank()) + #Set the plot background #set title attributes
coord_flip() +
facet_wrap(modColor ~.,
scales="free_y",
ncol= 1,
strip.position="right",
shrink = T)
Challenge_RichFactor_clusterProfiler <- KEGG_clustProfiler_1.OM %>%
dplyr::filter(modColor %in% c('red', 'salmon','green','pink')) %>%
dplyr::mutate(modColor = factor(modColor , levels = c('red', 'salmon','green','pink')),
pathway.name = as.character(reorder_within(pathway.name,
Rich_factor, modColor))) %>%
dplyr::mutate(pathway.name = sapply(strsplit(pathway.name, "_"), "[",1)) %>%
group_by(modColor) %>% arrange(desc(Rich_factor), .by_group = TRUE) %>%
ggplot(aes(x=reorder(pathway.name, as.numeric(Rich_factor)), y= Rich_factor)) +
geom_point( aes(col=log10_pvalue, size=as.numeric(Num.genes.exp))) +   # Draw points
scale_colour_gradient(low = "#D55E00", high = "#56B4E9", limits = c(0,30)) +
geom_segment(aes(x=pathway.name,
xend=pathway.name,
y=min(Rich_factor),
yend=max(Rich_factor)),
linetype=NA,
size=0) +   # Draw dashed lines
labs(title="Challenge",
x = "Pathway",
y = "Rich Factor",
subtitle="clusterProfiler") +
coord_flip() +
theme_bw() +
facet_wrap(~modColor,scales="free_y",ncol = 2) +
theme(
strip.background = element_rect(fill=NA),
strip.text = element_text(face="bold")
)
Challenge_RichFactor_clusterProfiler
pdf("Output/Transcriptomics/WGCNA/challenge/KEGG/clusterProfiler/Challenge_KEGG_RichFactor_clusterProfiler.pdf", width = 10, height = 5)
print(Challenge_RichFactor_clusterProfiler)
dev.off()
modColor     <- WGCNA_sigmodules_1[1,1]
pval_colname <- paste0('p.MM.',modColor)
mm_colname   <- paste0('MM.',modColor)
ModuleLoop   <- as.data.frame(Challenge_WGCNA.data.merged %>%
dplyr::filter(moduleColor %in% modColor)  %>%
dplyr::select(c('Airradians_TranscriptID',
'Cgigas_KEGGID', #'geneSymbol',
pval_colname, mm_colname)) %>%
dplyr::filter(.[[3]] < 0.05) %>%  # & .[[4]] > 0.6) %>%
dplyr::select(c('Airradians_TranscriptID', 'Cgigas_KEGGID', pval_colname)) %>%
na.omit() %>%
dplyr::mutate(Cgigas_KEGGID = gsub(".*:","",Cgigas_KEGGID)) %>%
unnest(Cgigas_KEGGID))
ModuleLoop2   <- as.data.frame(Challenge_WGCNA.data.merged %>%
dplyr::filter(moduleColor %in% 'salmon')  %>%
dplyr::select(c('Airradians_TranscriptID',
'Cgigas_KEGGID', #'geneSymbol',
pval_colname, mm_colname)) %>%
dplyr::filter(.[[3]] < 0.05) %>%  # & .[[4]] > 0.6) %>%
dplyr::select(c('Airradians_TranscriptID', 'Cgigas_KEGGID', pval_colname)) %>%
na.omit() %>%
dplyr::mutate(Cgigas_KEGGID = gsub(".*:","",Cgigas_KEGGID)) %>%
unnest(Cgigas_KEGGID))
ModuleLoop <- rbind(ModuleLoop2[,c(1:2)],ModuleLoop[,c(1:2)])
entrezID_vector <- as.vector(as.numeric(ModuleLoop$Cgigas_KEGGID))
KEGG_cgigas     <- enrichKEGG(gene = entrezID_vector,
organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
KEGG_cgigas
# creat dateframe and write the csv file out
df                      <- as.data.frame(head(KEGG_cgigas))
rownames(df)            <- c()
KEGGoutput              <- as.data.frame(do.call(cbind.data.frame, df)) %>%
dplyr::mutate(
Rich_factor  = (  (as.numeric(sub("/.*", "", GeneRatio))) /
(as.numeric(sub("/.*", "", BgRatio)))),
Day = 'Day2',
modColor = modColor) %>%
dplyr::rename(KEGGID_pathway = ID,
pathway.name   = Description,
Gene.IDs       = geneID,
Num.genes.exp  = Count) %>%
dplyr::mutate(Num.genes.all  = (as.numeric(sub("/.*", "", BgRatio))),
log10_pvalue   = abs(log10(pvalue)),
pathway.name = sapply(strsplit(pathway.name, " - Crassostrea"),
"[",1)) %>% # ommit the unneeded pathway string
dplyr::select('Day', 'modColor', 'KEGGID_pathway', 'pathway.name',
'Num.genes.all', 'Num.genes.exp', 'Gene.IDs',
'Rich_factor', 'pvalue', 'log10_pvalue', 'qvalue') %>%
arrange(desc(as.numeric(Rich_factor)))
KEGGoutput
# creat dateframe and write the csv file out
df                      <- as.data.frame(head(KEGG_cgigas))
rownames(df)            <- c()
KEGGoutput              <- as.data.frame(do.call(cbind.data.frame, df)) %>%
dplyr::mutate(
Rich_factor  = (  (as.numeric(sub("/.*", "", GeneRatio))) /
(as.numeric(sub("/.*", "", BgRatio)))),
Day = 'Day14',
modColor = modColor) %>%
dplyr::rename(KEGGID_pathway = ID,
pathway.name   = Description,
Gene.IDs       = geneID,
Num.genes.exp  = Count) %>%
dplyr::mutate(Num.genes.all  = (as.numeric(sub("/.*", "", BgRatio))),
log10_pvalue   = abs(log10(pvalue)),
pathway.name = sapply(strsplit(pathway.name, " - Crassostrea"),
"[",1)) %>% # ommit the unneeded pathway string
dplyr::select('Day', 'modColor', 'KEGGID_pathway', 'pathway.name',
'Num.genes.all', 'Num.genes.exp', 'Gene.IDs',
'Rich_factor', 'pvalue', 'log10_pvalue', 'qvalue') %>%
arrange(desc(as.numeric(Rich_factor)))
# Plot
plot<- KEGGoutput %>%
ggplot(aes(x=reorder(pathway.name, Rich_factor), y= Rich_factor)) +
geom_point( aes(col=qvalue, size=Num.genes.exp)) +   # Draw points
geom_segment(aes(x=pathway.name,
xend=pathway.name,
y=min(Rich_factor),
yend=max(Rich_factor)),
linetype=NA,
size=0) +   # Draw dashed lines
labs(title="Challenge",
x = "Pathway",
y = "Rich Factor",
subtitle=paste("WGCNA Module:", modColor, sep =' ')) +
theme_bw() +
coord_flip()
plot
# run echirchKEGG using clusterProfiler
KEGG_clustProfiler_1.front    <- data.frame(matrix(nrow = 1, ncol = 11)) # create dataframe to save cumunalitively during for loop
colnames(KEGG_clustProfiler_1.front) <- c('Day', 'modColor', 'KEGGID_pathway', 'pathway.name' ,
'Num.genes.all', 'Num.genes.exp', 'Gene.IDs',
'Rich_factor', 'pvalue', 'log10_pvalue', 'qvalue') # names for comuns in the for loop
Modred  <- as.data.frame(Challenge_WGCNA.data.merged %>%
dplyr::filter(moduleColor %in% red)  %>%
dplyr::select(c('Airradians_TranscriptID',
'Cgigas_KEGGID', #'geneSymbol',
'p.MM.red')) %>%
dplyr::filter(.[[3]] < 0.05) %>%  # & .[[4]] > 0.6) %>%
dplyr::select(c('Airradians_TranscriptID', 'Cgigas_KEGGID', 'p.MM.red')) %>%
na.omit() %>%
dplyr::mutate(Cgigas_KEGGID = gsub(".*:","",Cgigas_KEGGID)) %>%
unnest(Cgigas_KEGGID))
Challenge_WGCNA.data.merged
Modred  <- as.data.frame(Challenge_WGCNA.data.merged %>%
dplyr::filter(moduleColor %in% 'red')  %>%
dplyr::select(c('Airradians_TranscriptID',
'Cgigas_KEGGID', #'geneSymbol',
'p.MM.red')) %>%
dplyr::filter(.[[3]] < 0.05) %>%  # & .[[4]] > 0.6) %>%
dplyr::select(c('Airradians_TranscriptID', 'Cgigas_KEGGID', 'p.MM.red')) %>%
na.omit() %>%
dplyr::mutate(Cgigas_KEGGID = gsub(".*:","",Cgigas_KEGGID)) %>%
unnest(Cgigas_KEGGID))
Modsalmon  <- as.data.frame(Challenge_WGCNA.data.merged %>%
dplyr::filter(moduleColor %in% 'salmon')  %>%
dplyr::select(c('Airradians_TranscriptID',
'Cgigas_KEGGID', #'geneSymbol',
'p.MM.salmon')) %>%
dplyr::filter(.[[3]] < 0.05) %>%  # & .[[4]] > 0.6) %>%
dplyr::select(c('Airradians_TranscriptID', 'Cgigas_KEGGID', 'p.MM.salmon')) %>%
na.omit() %>%
dplyr::mutate(Cgigas_KEGGID = gsub(".*:","",Cgigas_KEGGID)) %>%
unnest(Cgigas_KEGGID))
Modules.frontloaded
Frontloaded_WGCNA.data <- read.csv(file="Output/Transcriptomics/WGCNA/challenge/WGCNA_Frontloaded_transcripts_moduleredsalmon.csv",
sep=',', header=TRUE) %>%  dplyr::rename('Airradians_TranscriptID' =
'Airradians.TranscriptID')
Frontloaded_WGCNA.data
Modules_redsalmon <- rbind(Modred,Modsalmon)
Modules_redsalmon <- rbind(Modred[,c(1:2)],Modsalmon[,c(1:2)])
Modules_redsalmon
Modules_redsalmon.frontloaded <- Modules_redsalmon %>%
dplyr::filter(Airradians_TranscriptID %in%
Frontloaded_WGCNA.data$Airradians_TranscriptID)
Modules_redsalmon.frontloaded
entrezID_vector <- as.vector(as.numeric(Modules_redsalmon.frontloaded$Cgigas_KEGGID))
KEGG_cgigas     <- enrichKEGG(gene = entrezID_vector,
organism  = 'crg', # 'hsa' is human 'crg' is pacific oyster
pvalueCutoff = 0.05)
KEGG_cgigas
KEGGoutput      <- as.data.frame(do.call(cbind.data.frame, df)) %>%
dplyr::mutate(
Rich_factor  = (  (as.numeric(sub("/.*", "", GeneRatio))) /
(as.numeric(sub("/.*", "", BgRatio)))),
Day = 'Day14',
modColor = modColor) %>%
dplyr::rename(KEGGID_pathway = ID,
pathway.name   = Description,
Gene.IDs       = geneID,
Num.genes.exp  = Count) %>%
dplyr::mutate(Num.genes.all  = (as.numeric(sub("/.*", "", BgRatio))),
log10_pvalue   = abs(log10(pvalue)),
pathway.name = sapply(strsplit(pathway.name, " - Crassostrea"),
"[",1)) %>% # ommit the unneeded pathway string
dplyr::select('Day', 'modColor', 'KEGGID_pathway', 'pathway.name',
'Num.genes.all', 'Num.genes.exp', 'Gene.IDs',
'Rich_factor', 'pvalue', 'log10_pvalue', 'qvalue') %>%
arrange(desc(as.numeric(Rich_factor)))
KEGGoutput
# prep loop for cumulative output table
df_total                   <- data.frame() # start dataframe
# run echirchKEGG using clusterProfiler
KEGG_clustProfiler_1.front          <- data.frame(matrix(nrow = 1, ncol = 11)) # create dataframe to save cumunalitively during for loop
colnames(KEGG_clustProfiler_1.front) <- c('Day', 'modColor', 'KEGGID_pathway', 'pathway.name' ,
'Num.genes.all', 'Num.genes.exp', 'Gene.IDs',
'Rich_factor', 'pvalue', 'log10_pvalue', 'qvalue') # names for comuns in the for loop
cbind.data.frame
df
KEGGoutput      <- as.data.frame(do.call(cbind.data.frame, df)) %>%
dplyr::mutate(
Rich_factor  = (  (as.numeric(sub("/.*", "", GeneRatio))) /
(as.numeric(sub("/.*", "", BgRatio)))),
Day = 'Day14',
modColor = modColor) %>%
dplyr::rename(KEGGID_pathway = ID,
pathway.name   = Description,
Gene.IDs       = geneID,
Num.genes.exp  = Count) %>%
dplyr::mutate(Num.genes.all  = (as.numeric(sub("/.*", "", BgRatio))),
log10_pvalue   = abs(log10(pvalue)),
pathway.name = sapply(strsplit(pathway.name, " - Crassostrea"),
"[",1)) %>% # ommit the unneeded pathway string
dplyr::select('Day', 'modColor', 'KEGGID_pathway', 'pathway.name',
'Num.genes.all', 'Num.genes.exp', 'Gene.IDs',
'Rich_factor', 'pvalue', 'log10_pvalue', 'qvalue') %>%
arrange(desc(as.numeric(Rich_factor)))
KEGGoutput
KEGGoutput
KEGG_cgigas
as.data.frame(do.call(cbind.data.frame, df))
df              <- as.data.frame(head(KEGG_cgigas))
rownames(df)    <- c()
KEGGoutput      <- as.data.frame(do.call(cbind.data.frame, df)) %>%
dplyr::mutate(
Rich_factor  = (  (as.numeric(sub("/.*", "", GeneRatio))) /
(as.numeric(sub("/.*", "", BgRatio)))),
Day = 'Day14',
modColor = modColor) %>%
dplyr::rename(KEGGID_pathway = ID,
pathway.name   = Description,
Gene.IDs       = geneID,
Num.genes.exp  = Count) %>%
dplyr::mutate(Num.genes.all  = (as.numeric(sub("/.*", "", BgRatio))),
log10_pvalue   = abs(log10(pvalue)),
pathway.name = sapply(strsplit(pathway.name, " - Crassostrea"),
"[",1)) %>% # ommit the unneeded pathway string
dplyr::select('Day', 'modColor', 'KEGGID_pathway', 'pathway.name',
'Num.genes.all', 'Num.genes.exp', 'Gene.IDs',
'Rich_factor', 'pvalue', 'log10_pvalue', 'qvalue') %>%
arrange(desc(as.numeric(Rich_factor)))
KEGGoutput
KEGGoutput      <- as.data.frame(do.call(cbind.data.frame, df)) %>%
dplyr::mutate(
Rich_factor  = (  (as.numeric(sub("/.*", "", GeneRatio))) /
(as.numeric(sub("/.*", "", BgRatio)))),
Day = 'Day14',
modColor = 'frontloaded from red and salmon') %>%
dplyr::rename(KEGGID_pathway = ID,
pathway.name   = Description,
Gene.IDs       = geneID,
Num.genes.exp  = Count) %>%
dplyr::mutate(Num.genes.all  = (as.numeric(sub("/.*", "", BgRatio))),
log10_pvalue   = abs(log10(pvalue)),
pathway.name = sapply(strsplit(pathway.name, " - Crassostrea"),
"[",1)) %>% # ommit the unneeded pathway string
dplyr::select('Day', 'modColor', 'KEGGID_pathway', 'pathway.name',
'Num.genes.all', 'Num.genes.exp', 'Gene.IDs',
'Rich_factor', 'pvalue', 'log10_pvalue', 'qvalue') %>%
arrange(desc(as.numeric(Rich_factor)))
KEGGoutput
write.csv(KEGGoutput, file = paste("Output/Transcriptomics/WGCNA/challenge/KEGG/clusterProfiler/Frontloaded_KEGG_clusterProfiler.csv", sep =''))
# Plot
plot<- KEGGoutput %>%
ggplot(aes(x=reorder(pathway.name, Rich_factor), y= Rich_factor)) +
geom_point( aes(col=qvalue, size=Num.genes.exp)) +   # Draw points
geom_segment(aes(x=pathway.name,
xend=pathway.name,
y=min(Rich_factor),
yend=max(Rich_factor)),
linetype=NA,
size=0) +   # Draw dashed lines
labs(title="Frontloaded genes",
x = "Pathway",
y = "Rich Factor",
subtitle=paste("WGCNA Module:", modColor, sep =' ')) +
theme_bw() +
coord_flip()
plot
# Plot
plot<- KEGGoutput %>%
ggplot(aes(x=reorder(pathway.name, Rich_factor), y= Rich_factor)) +
geom_point( aes(col=qvalue, size=Num.genes.exp)) +   # Draw points
geom_segment(aes(x=pathway.name,
xend=pathway.name,
y=min(Rich_factor),
yend=max(Rich_factor)),
linetype=NA,
size=0) +   # Draw dashed lines
labs(title="Frontloaded genes",
x = "Pathway",
y = "Rich Factor") +
theme_bw() +
coord_flip()
pdf(paste("Output/Transcriptomics/WGCNA/challenge/KEGG/clusterProfiler/Frontloaded_RichFactorPlot.pdf", sep =''),width=8, height=6)
print(plot)
dev.off()
KEGGoutput$Gene.IDs               <- as.vector(strsplit(as.character(KEGGoutput$Gene.IDs), "/"))
KEGGoutput_unnest                 <- unnest(KEGGoutput, Gene.IDs)
KEGGoutput_unnest$Cgigas_KEGGID   <- paste("crg:", KEGGoutput_unnest$Gene.IDs, sep='')
KEGGoutput_allgenes                 <- merge(KEGGoutput_unnest, Airr_Cvirg_Cgig_KEGG, by='Cgigas_KEGGID') %>%
group_by(pathway.name) %>%
arrange(Cvirginica_Protein_name, .by_group = TRUE) %>%
unique()
KEGGoutput_allgenes
write.csv(KEGGoutput_allgenes, file = paste("Output/Transcriptomics/WGCNA/challenge/KEGG/clusterProfiler/Frontloaded_KEGG_clusterProfiler_unlisted.csv", sep =''))
nrow(Modules_redsalmon)
nrow(Modules_redsalmon) # 448
nrow(Modules_redsalmon.frontloaded)
nrow(Modules_redsalmon.frontloaded) # 219
