Resp930_Length_reps <- ggboxplot(Resp_0930, x = "pHxFood", y = "resp_µmol_L_mm_Length_hr", color = "Replicate",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800", "brown", "grey"))
Resp930_Length_reps
require(nlme)
# Linear mixed effects model with random effect of Replicate
LMEmod_0930_SL<-lme(resp_µmol_L_mm_Length_hr ~ pCO2 * Food, random=~1|random_fact, data=Resp_0930)
# |     &nbsp;      | numDF | denDF | F-value | p-value |
# |:---------------:|:-----:|:-----:|:-------:|:-------:|
# | **(Intercept)** |   1   |  57   |  560.5  |    0    |
# |    **pCO2**     |   1   |  12   |  4.064  | 0.06677 | '
# |    **Food**     |   1   |  12   |  3.663  | 0.07977 | '
# |  **pCO2:Food**  |   1   |  12   | 0.01109 | 0.9179  |
pander(anova(LMEmod_0930_SL), style='rmarkdown')
Resp930_Length_reps
Resp_0930 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '9/30/2021')  %>% # call only 9/14
dplyr::select(-Center) %>%
dplyr::mutate(pHxFood = paste(pH,Food, sep = "_")) %>%
dplyr::mutate(random_fact = as.factor(paste(Chamber_tank, Food, sep="_")))
Resp_0930 %>% dplyr::group_by(pH, Food ) %>% dplyr::summarise(n()) # tank replication
Resp_0930 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars=("pH")) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
# Visualize the data with the random effet as treplicate
Resp930_Length_reps <- ggboxplot(Resp_0930, x = "pHxFood", y = "resp_µmol_L_mm_Length_hr", color = "Replicate",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800", "brown", "grey"))
Resp930_Length_reps
require(nlme)
# Linear mixed effects model with random effect of Replicate
LMEmod_0930_SL<-lme(resp_µmol_L_mm_Length_hr ~ pCO2 * Food, random=~1|random_fact, data=Resp_0930)
# |     &nbsp;      | numDF | denDF | F-value | p-value |
# |:---------------:|:-----:|:-----:|:-------:|:-------:|
# | **(Intercept)** |   1   |  57   |  560.5  |    0    |
# |    **pCO2**     |   1   |  12   |  4.064  | 0.06677 | '
# |    **Food**     |   1   |  12   |  3.663  | 0.07977 | '
# |  **pCO2:Food**  |   1   |  12   | 0.01109 | 0.9179  |
pander(anova(LMEmod_0930_SL), style='rmarkdown')
Resp930_Length_reps
Resp_0930$pHxFood <- as.factor(Resp_0930$pHxFood)
df_mean <- Resp_0930 %>%
dplyr::group_by(pHxFood) %>%
dplyr::summarize(average = mean(resp_µmol_L_mm_Length_hr)) %>%
dplyr::ungroup()
p.box <- ggplot(Resp_0930, aes(x = pHxFood, y = resp_µmol_L_mm_Length_hr)) + geom_boxplot() + geom_point(data= df_mean, mapping = aes(x = pHxFood, y = average),
color="red")
p.box.data <- layer_data(p.box) %>%
select(x, ymin, lower, middle, upper, ymax, outliers, flipped_aes) %>%
dplyr::rename(mean = flipped_aes) %>%
dplyr::mutate(mean  = df_mean$average) %>%
mutate(pHxFood = factor(x, labels = levels(Resp_0930$pHxFood), ordered = TRUE)) %>%
select(-x)
p.box.data %>% unnest(outliers)
denisty_box_resp_64DPF <-ggplot(p.box.data) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxFood),color = "black") +
# geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), color = "grey60", size = 1) +
# vertical lines at Q1 / Q2 / Q3
geom_vline(data = . %>% select(pHxFood, lower, mean, upper) %>% gather(key, value, -pHxFood), aes(xintercept = value)) +
# density plot
geom_density(data = Resp_0930, aes(x = resp_µmol_L_mm_Length_hr, group=pHxFood, fill=pHxFood, ..scaled..), alpha=.4, adjust=1.5) +
#  theme
theme_classic() +
xlim(0, 0.22) +
facet_grid(pHxFood ~ .) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(title = "F1 Scallops: respiration rates 64 DPF)",
x = expression(Respiration~rate~"("~μmol~L^{-1}~O[2]%.%m^{-1}~shell~length%.% hr^{-1}~")"),
y = "Scaled density") +
scale_fill_manual(values=c("grey40", "grey40", "grey85", "grey85"))
denisty_box_resp_64DPF
denisty_box_resp_64DPF <-ggplot(p.box.data) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxFood),color = "black") +
# geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), color = "grey60", size = 1) +
# vertical lines at Q1 / Q2 / Q3
geom_vline(data = . %>% select(pHxFood, lower, mean, upper) %>% gather(key, value, -pHxFood), aes(xintercept = value)) +
# density plot
geom_density(data = Resp_0930, aes(x = resp_µmol_L_mm_Length_hr, group=pHxFood, fill=pHxFood, ..scaled..), alpha=.4, adjust=1.5) +
#  theme
theme_classic() +
xlim(0, 0.22) +
facet_grid(pHxFood ~ .) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(title = "F1 Scallops: respiration rates 64 DPF)",
x = expression(Respiration~rate~"("~μmol~L^{-1}~O[2]%.%mm^{-1}~shell~length%.% hr^{-1}~")"),
y = "Scaled density") +
scale_fill_manual(values=c("grey40", "grey40", "grey85", "grey85"))
denisty_box_resp_64DPF
Resp_0202 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '2/2/2022')  %>% # call only 10/14
dplyr::select(-Center) %>%
dplyr::mutate(pHxFood = paste(pH,Food, sep = "_")) %>%
dplyr::mutate(random_fact = as.factor(paste(Chamber_tank, Food, sep="_")))
Resp_0202 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '2/2/2022')  %>% # call only 10/14
dplyr::select(-Center) %>%
dplyr::mutate(pHxFood = paste(pH, sep = "_")) %>%
dplyr::mutate(random_fact = as.factor(paste(Chamber_tank, Food, sep="_")))
Resp_0202 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '2/2/2022')  %>% # call only 10/14
dplyr::select(-Center)
Resp_0222 %>% dplyr::group_by(pH) %>% dplyr::summarise(n()) # tank replication
Resp_0202 %>% dplyr::group_by(pH) %>% dplyr::summarise(n()) # tank replication
Resp_0202
Resp_0202 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars=(c("Food","pH"))) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
Resp_0202 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars=(c("Food"))) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
Resp_0202 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars=("pH") %>%
Resp_0202 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars=("pH")) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
Resp_0202 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars=("pH")) %>%
Resp_0202 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars=(c("pH"))) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
Resp_0202
Resp_0202 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '2/2/2022')  %>% # call only 10/14
dplyr::select(-Center)
Resp_0202
blanks_means_0202 <- blanks_all_raw %>%
dplyr::filter(Date %in% '2/2/2022') %>%
dplyr::group_by(Date, Run, filetype) %>% # data on 2/2/22 specifically, positive blanks by run yields NAs - data witin RUN are similar amoung tretaments
dplyr::filter(Chamber_tank == "blank") %>%
dplyr::filter(Lpc <0) %>% # ommit blank calls that d/n represent oxygen consumption
dplyr::summarise(BLANK.mean_Lpc = mean(abs(Lpc)),
BLANK.sd.Lpc   = sd(abs(Lpc)),
BLANK.mean_Leq = mean(abs(Leq)),
BLANK.mean_Lz = mean(abs(Lz)),
n = n())
blanks_means_0202
# kable((blanks_all_raw)[,c(1:3,6,8,12:14)])
blanks_means <- blanks_all_raw %>%
dplyr::filter(!Date %in% '2/2/2022') %>% # omuit 2/2/2022 - all other dates have positiverates for all runs and treaments to nromalize data
dplyr::group_by(Date, Run, pH, filetype) %>% # grouped by date, run, and instrument
dplyr::filter(Chamber_tank == "blank") %>%
dplyr::filter(Lpc <0) %>% # ommit blank calls that d/n represent oxygen consumption
dplyr::summarise(BLANK.mean_Lpc = mean(abs(Lpc)),
BLANK.sd.Lpc   = sd(abs(Lpc)),
BLANK.mean_Leq = mean(abs(Leq)),
BLANK.mean_Lz = mean(abs(Lz)),
n = n())
blanks_means
blanks_all_raw %>%
dplyr::filter(Date %in% '2/2/2022') %>%
dplyr::group_by(Date, Run, filetype) %>% # data on 2/2/22 specifically, positive blanks by run yields NAs - data witin RUN are similar amoung tretaments
dplyr::filter(Chamber_tank == "blank") %>%
dplyr::filter(Lpc <0) %>% # ommit blank calls that d/n represent oxygen consumption
dplyr::summarise(BLANK.mean_Lpc = mean(abs(Lpc)),
BLANK.sd.Lpc   = sd(abs(Lpc)),
BLANK.mean_Leq = mean(abs(Leq)),
BLANK.mean_Lz = mean(abs(Lz)),
n = n())
blanks_all_raw %>%
dplyr::filter(Date %in% '2/2/2022') %>%
dplyr::group_by(Date, Run, filetype) %>% # data on 2/2/22 specifically, positive blanks by run yields NAs - data witin RUN are similar amoung tretaments
dplyr::filter(Chamber_tank == "blank") %>%
dplyr::filter(Lpc <0) %>% # ommit blank calls that d/n represent oxygen consumption
dplyr::summarise(BLANK.mean_Lpc = mean(abs(Lpc)),
BLANK.sd.Lpc   = sd(abs(Lpc)),
BLANK.mean_Leq = mean(abs(Leq)),
BLANK.mean_Lz = mean(abs(Lz)),
n = n()) %>%
dplyr::mutate(pH = 8)
blanks_means_0202_7.5 <- blanks_means_0202 %>% mutate(pH = 7.5)
blanks_means_0202     <- merge(blanks_means_0202_8, blanks_means_0202_7.5)
blanks_means_0202_8
blanks_means_0202_8   <- blanks_means_0202 %>% mutate(pH = 8)
blanks_means_0202_8
blanks_means_0202_7.5 <- blanks_means_0202 %>% mutate(pH = 7.5)
blanks_means_0202_7.5
blanks_means_0202_8   <- as.data.frame(blanks_means_0202 %>% mutate(pH = 8))
blanks_means_0202_8
blanks_means_0202_7.5 <- as.data.frame(blanks_means_0202 %>% mutate(pH = 7.5))
blanks_means_0202     <- merge(blanks_means_0202_8, blanks_means_0202_7.5)
blanks_means_0202
blanks_means_0202_7.5
blanks_means_0202_8
blanks_means_0202_7.5
blanks_means_0202 <- blanks_all_raw %>%
dplyr::filter(Date %in% '2/2/2022') %>%
dplyr::group_by(Date, Run, filetype) %>% # data on 2/2/22 specifically, positive blanks by run yields NAs - data witin RUN are similar amoung tretaments
dplyr::filter(Chamber_tank == "blank") %>%
dplyr::filter(Lpc <0) %>% # ommit blank calls that d/n represent oxygen consumption
dplyr::summarise(BLANK.mean_Lpc = mean(abs(Lpc)),
BLANK.sd.Lpc   = sd(abs(Lpc)),
BLANK.mean_Leq = mean(abs(Leq)),
BLANK.mean_Lz = mean(abs(Lz)),
n = n())
blanks_means_0202_8   <- as.data.frame(blanks_means_0202 %>% mutate(pH = 8))
blanks_means_0202_7.5 <- as.data.frame(blanks_means_0202 %>% mutate(pH = 7.5))
blanks_means_0202     <- merge(blanks_means_0202_8, blanks_means_0202_7.5)
kable(blanks_means_0202) # you see here an N of 1 for both runs 1 and 2 due to positive blanks that were omitted
blanks_means_0202
blanks_means_0202_8
blanks_means_0202     <- rbind(blanks_means_0202_8, blanks_means_0202_7.5)
blanks_means_0202
kable(blanks_means_0202) # you see here an N of 1 for both runs 1 and 2 due to positive blanks that were omitted
blanks_means_MASTER <- merge(blanks_means, blanks_means_0202)
blanks_means_MASTER <- merge(blanks_means, blanks_means_0202)
blanks_means_MASTER
blanks_means_MASTER <- rbind(blanks_means, blanks_means_0202)
blanks_means_MASTER
Resp.Master <- merge(resp.data_merged, blanks_means_MASTER, by=c("Date",  "Run", "pH","filetype")) %>% # NOTE: this repeats for every distinct length value
dplyr::mutate(resp_blankStand = Lpc - BLANK.mean_Lpc) # ommits respiration rate values showing an increase in O2 over time
Resp.Master_OM <- Resp.Master[!is.na(Resp.Master$Length_um),] %>% dplyr::filter(!resp_blankStand > 0) %>% # ommit respiration values that are positive
dplyr::mutate(volume = case_when(filetype == "LoLigo_data" & Date == '9/14/2021' ~ 2.2, # small vessels for loligo system - 22 ml vessels
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH1' ~ 68.55323, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021')  & Channel == 'CH2' ~ 68.85583, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH3' ~ 68.87473, # larger custom vessels measured individually... # note ch3 waused ch9 vessel on 2/2/2022
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH4' ~ 68.95481, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH5' ~ 68.57288, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH6' ~ 68.01878, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH7' ~ 68.54551, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH8' ~ 68.53297, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH1' ~ 68.55323, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022')  & Channel == 'CH2' ~ 68.85583, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH3' ~ 68.87473, # larger custom vessels measured individually... # note ch3 waused ch9 vessel on 2/2/2022
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH4' ~ 68.95481, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH5' ~ 68.57288, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH6' ~ 68.01878, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH7' ~ 68.54551, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH8' ~ 68.53297, # larger custom vessels measured individually...
filetype == "SDR_data" ~ 1.7)) %>% # 24-well plate - 1700ul
dplyr::mutate(resp_mg_L_hr =((abs(resp_blankStand)) *  # currently as just mg O2 per minute
(volume/1000) * # correct Liters - mg per L per min
60))  %>% # convert rate per minutes to rate per hour
dplyr::mutate(resp_umol_L_hr = (((resp_mg_L_hr) * (1000)) / 32) ) %>% #  convert mg L per hr to umol L hr- first by mg to ug (mg*1000 = ug) and then ug to umol (1 umol = 32 ug -  ug O2 div 32 ug/umol)
dplyr::mutate(Age = case_when(Date == '9/14/2021' ~ 50, Date == '9/30/2021' ~ 66, Date == '10/26/2021' ~ 92)) %>%
dplyr::mutate(Fed_Unfed = case_when(Fed_Unfed == 'F' ~ "High food", is.na(Fed_Unfed) ~ "High food", Fed_Unfed == 'U' ~ "Low food")) %>%
dplyr::mutate(pCO2 = case_when(pH == 8.0 ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
Resp.outliers <- Resp.Master %>% dplyr::filter(resp_blankStand > 0) # call the values with positive resp rates, measing they were slower than the blank!
Resp.outliers
# kable((blanks_all_raw)[,c(1:3,6,8,12:14)])
blanks_means <- blanks_all_raw %>%
dplyr::filter(!Date %in% '2/2/2022') %>% # omuit 2/2/2022 - all other dates have positive rates for all runs and treatments to normalize data
dplyr::group_by(Date, pH, filetype) %>% # grouped by date, pH, and instrument - similar amoung Runs
dplyr::filter(Chamber_tank == "blank") %>%
dplyr::filter(Lpc <0) %>% # ommit blank calls that d/n represent oxygen consumption
dplyr::summarise(BLANK.mean_Lpc = mean(abs(Lpc)),
BLANK.sd.Lpc   = sd(abs(Lpc)),
BLANK.mean_Leq = mean(abs(Leq)),
BLANK.mean_Lz = mean(abs(Lz)),
n = n())
kable(blanks_means)
blanks_means_0202 <- blanks_all_raw %>%
dplyr::filter(Date %in% '2/2/2022') %>%
dplyr::group_by(Date, Run, filetype) %>% # data on 2/2/22 specifically, positive blanks by run yields NAs - data witin RUN are similar amoung tretaments
dplyr::filter(Chamber_tank == "blank") %>%
dplyr::filter(Lpc <0) %>% # ommit blank calls that d/n represent oxygen consumption
dplyr::summarise(BLANK.mean_Lpc = mean(abs(Lpc)),
BLANK.sd.Lpc   = sd(abs(Lpc)),
BLANK.mean_Leq = mean(abs(Leq)),
BLANK.mean_Lz = mean(abs(Lz)),
n = n())
blanks_means_0202_8   <- as.data.frame(blanks_means_0202 %>% mutate(pH = 8))
blanks_means_0202_7.5 <- as.data.frame(blanks_means_0202 %>% mutate(pH = 7.5))
blanks_means_0202     <- rbind(blanks_means_0202_8, blanks_means_0202_7.5)
kable(blanks_means_0202) # you see here an N of 1 for both runs 1 and 2 due to positive blanks that were omitted
blanks_means_MASTER <- rbind(blanks_means, blanks_means_0202)
blanks_means_MASTER
resp.data_merged
blanks_means_MASTER
merge(resp.data_merged, blanks_means_MASTER, by=c("Date", "Run","filetype")) %>%
dplyr::filter(Date %in% '2/2/2022')
blanks_means_0202 <- blanks_all_raw %>%
dplyr::filter(Date %in% '2/2/2022') %>%
dplyr::group_by(Date, Run, filetype) %>% # data on 2/2/22 specifically, positive blanks by run yields NAs - data witin RUN are similar amoung tretaments
dplyr::filter(Chamber_tank == "blank") %>%
dplyr::filter(Lpc <0) %>% # ommit blank calls that d/n represent oxygen consumption
dplyr::summarise(BLANK.mean_Lpc = mean(abs(Lpc)),
BLANK.sd.Lpc   = sd(abs(Lpc)),
BLANK.mean_Leq = mean(abs(Leq)),
BLANK.mean_Lz = mean(abs(Lz)),
n = n())
blanks_means_0202_8   <- as.data.frame(blanks_means_0202 %>% mutate(pH = 8.0))
blanks_means_0202_7.5 <- as.data.frame(blanks_means_0202 %>% mutate(pH = 7.5))
blanks_means_0202     <- rbind(blanks_means_0202_8, blanks_means_0202_7.5)
blanks_means_MASTER <- rbind(blanks_means, blanks_means_0202)
merge(resp.data_merged, blanks_means_MASTER, by=c("Date", "Run","filetype")) %>%
dplyr::filter(Date %in% '2/2/2022')
resp.data_merged
merge(resp.data_merged, blanks_means_MASTER, by=c("Date", "Run","filetype")) %>%
dplyr::filter(Date %in% '2/2/2022')
blanks_means_0202 <- blanks_all_raw %>%
dplyr::filter(Date %in% '2/2/2022') %>%
dplyr::group_by(Date, Run, filetype) %>% # data on 2/2/22 specifically, positive blanks by run yields NAs - data witin RUN are similar amoung tretaments
dplyr::filter(Chamber_tank == "blank") %>%
dplyr::filter(Lpc <0) %>% # ommit blank calls that d/n represent oxygen consumption
dplyr::summarise(BLANK.mean_Lpc = mean(abs(Lpc)),
BLANK.sd.Lpc   = sd(abs(Lpc)),
BLANK.mean_Leq = mean(abs(Leq)),
BLANK.mean_Lz = mean(abs(Lz)),
n = n())
merge(resp.data_merged, blanks_means_0202, by=c("Date", "Run","filetype")) %>%
dplyr::filter(Date %in% '2/2/2022')
Resp.Master_1 <- merge(resp.data_merged, blanks_means, by=c("Date", "pH","filetype")) %>% # NOTE: this repeats for every distinct length value
dplyr::filter(!Date %in% '2/2/2022') %>%
dplyr::mutate(resp_blankStand = Lpc - BLANK.mean_Lpc) # ommits respiration rate values showing an increase in O2 over time
Resp.Master_1
Resp.Master_2 <- merge(resp.data_merged, blanks_means_0202, by=c("Date", "Run","filetype")) %>%
dplyr::filter(Date %in% '2/2/2022') %>%
dplyr::mutate(resp_blankStand = Lpc - BLANK.mean_Lpc)
Resp.Master_2
rbind(Resp.Master_1, Resp.Master_2)
Resp.Master <- rbind(Resp.Master_1, Resp.Master_2)
Resp.Master_OM <- Resp.Master[!is.na(Resp.Master$Length_um),] %>% dplyr::filter(!resp_blankStand > 0) %>% # ommit respiration values that are positive
dplyr::mutate(volume = case_when(filetype == "LoLigo_data" & Date == '9/14/2021' ~ 2.2, # small vessels for loligo system - 22 ml vessels
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH1' ~ 68.55323, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021')  & Channel == 'CH2' ~ 68.85583, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH3' ~ 68.87473, # larger custom vessels measured individually... # note ch3 waused ch9 vessel on 2/2/2022
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH4' ~ 68.95481, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH5' ~ 68.57288, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH6' ~ 68.01878, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH7' ~ 68.54551, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH8' ~ 68.53297, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH1' ~ 68.55323, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022')  & Channel == 'CH2' ~ 68.85583, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH3' ~ 68.87473, # larger custom vessels measured individually... # note ch3 waused ch9 vessel on 2/2/2022
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH4' ~ 68.95481, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH5' ~ 68.57288, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH6' ~ 68.01878, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH7' ~ 68.54551, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH8' ~ 68.53297, # larger custom vessels measured individually...
filetype == "SDR_data" ~ 1.7)) %>% # 24-well plate - 1700ul
dplyr::mutate(resp_mg_L_hr =((abs(resp_blankStand)) *  # currently as just mg O2 per minute
(volume/1000) * # correct Liters - mg per L per min
60))  %>% # convert rate per minutes to rate per hour
dplyr::mutate(resp_umol_L_hr = (((resp_mg_L_hr) * (1000)) / 32) ) %>% #  convert mg L per hr to umol L hr- first by mg to ug (mg*1000 = ug) and then ug to umol (1 umol = 32 ug -  ug O2 div 32 ug/umol)
dplyr::mutate(Age = case_when(Date == '9/14/2021' ~ 50, Date == '9/30/2021' ~ 66, Date == '10/26/2021' ~ 92)) %>%
dplyr::mutate(Fed_Unfed = case_when(Fed_Unfed == 'F' ~ "High food", is.na(Fed_Unfed) ~ "High food", Fed_Unfed == 'U' ~ "Low food")) %>%
dplyr::mutate(pCO2 = case_when(pH == 8.0 ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
Resp.outliers <- Resp.Master %>% dplyr::filter(resp_blankStand > 0) # call the values with positive resp rates, measing they were slower than the blank!
Resp.outliers
Resp.Master_OM %>% ggplot(aes(x = Length_um, y = Dry_Tissue_weight)) +
geom_smooth(method = "loess") +
theme_classic() +
ylab("Scallop_TissueDW_mg") +
xlab("Length_um") +
geom_point()
Resp.Master_OM
Resp.Master_OM %>% ggplot(aes(x = whole_Dry_weight, y = Dry_Tissue_weight)) +
geom_smooth(method = "loess") +
theme_classic() +
ylab("Scallop_TissueDW_mg") +
xlab("Length_um") +
geom_point()
Resp.Master_OM %>% ggplot(aes(x = whole_Dry_weight, y = Dry_Tissue_weight)) +
geom_smooth(method = "loess") +
theme_classic() +
ylab("Scallop_TissueDW_mg") +
xlab("whole_Dry_weight") +
geom_point()
Resp.Master_OM %>% ggplot(aes(x = whole_Dry_weight, y = Dry_Tissue_weight)) +
geom_smooth(method = "loess") +
theme_classic() +
ylab("Scallop_TissueDW_mg") +
xlab("whole_Dry_weight") +
geom_point()
Resp.Master_OM
Resp.Master_OM %>% ggplot(aes(x = Dry_Tissue_weight, y = resp_umol_L_hr)) +
geom_smooth(method = "loess") +
theme_classic() +
ylab("resp_umol_L_hr") +
xlab("Dry_Tissue_weight") +
geom_point()
y
Resp.Master_OM %>% ggplot(aes(x = Length_um, y = Dry_Tissue_weight)) +
geom_smooth(method = "loess") +
theme_classic() +
ylab("Scallop_TissueDW_mg") +
xlab("Length_um") +
geom_point()
Resp.Master_OM %>% ggplot(aes(x = whole_Dry_weight, y = Dry_Tissue_weight)) +
geom_smooth(method = "loess") +
theme_classic() +
ylab("Scallop_TissueDW_mg") +
xlab("whole_Dry_weight") +
geom_point()
Resp.Master_OM %>% ggplot(aes(x = Dry_Tissue_weight, y = resp_umol_L_hr)) +
geom_smooth(method = "loess") +
theme_classic() +
ylab("resp_umol_L_hr") +
xlab("Dry_Tissue_weight") +
geom_point()
Resp.Master_OM %>% ggplot(aes(x = whole_Dry_weight, y = resp_umol_L_hr)) +
geom_smooth(method = "loess") +
theme_classic() +
ylab("resp_umol_L_hr") +
xlab("whole_Dry_weight") +
geom_point()
Resp.Master_OM %>% ggplot(aes(x = Dry_Tissue_weight, y = resp_umol_L_hr)) +
geom_smooth(method = "loess") +
theme_classic() +
ylab("resp_umol_L_hr") +
xlab("Dry_Tissue_weight") +
geom_point()
Resp.Master_OM %>% ggplot(aes(x = whole_Dry_weight, y = resp_umol_L_hr)) +
geom_smooth(method = "loess") +
theme_classic() +
ylab("resp_umol_L_hr") +
xlab("whole_Dry_weight") +
geom_point()
# (1) ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# NORMALIZED for Shell length
Resp.Master_OM$resp_µmol_L_mm_Length_hr <- (Resp.Master_OM$resp_umol_L_hr / # multiple by 1000 to convert mmol/ O2 to umol/L O2
(Resp.Master_OM$Length_um/1000)) # normalize by Dry tissue weight  as to mg O2 L-1 g dry tissue weight-1
Resp.Master_OM$resp_µmol_L_g_TDW_hr <- (Resp.Master_OM$resp_umol_L_hr / # multiple by 1000 to convert mmol/ O2 to umol/L O2
(Resp.Master_OM$Dry_Tissue_weight)) # normalize by Dry tissue weight  as to mg O2 L-1 g dry tissue weight-1
#write.csv(Resp.Master_OM, "C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv")
write.csv(Resp.Master_OM, "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv")
resp_means <- Resp.Master_OM %>%
dplyr::filter(Date %in% '2/2/2022') %>%
dplyr::group_by(Date, pH) %>%
dplyr::summarise(mean_resp_gTDW = mean(resp_µmol_L_g_TDW_hr),
mean_resp_umolL = mean(resp_umol_L_hr),
sd_resp_gTDW = sd(resp_µmol_L_g_TDW_hr),
sd_resp_umolL = sd(resp_umol_L_hr),
n = n())
resp_means
Resp_0202 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '2/2/2022')  %>% # call only 10/14
dplyr::select(-Center)
Resp_0202 %>% dplyr::group_by(pH) %>% dplyr::summarise(n()) # tank replication
Resp_0202
Resp_0202 %>% summarySE(measurevar="resp_µmol_L_g_TDW_hr", groupvars=(c("pH"))) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
# Visualize the data with the random effet as treplicate
Res0222_Length_reps <- ggboxplot(Resp_0222, x = "pH", y = "resp_µmol_L_g_TDW_hr", color = "Replicate",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800", "brown", "grey"))
# Visualize the data with the random effet as treplicate
Res0222_Length_reps <- ggboxplot(Resp_0202, x = "pH", y = "resp_µmol_L_g_TDW_hr", color = "Replicate",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800", "brown", "grey"))
# Visualize the data with the random effet as treplicate
Res0202_Length_reps <- ggboxplot(Resp_0202, x = "pH", y = "resp_µmol_L_g_TDW_hr", color = "Replicate",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800", "brown", "grey"))
Res0202_Length_reps
# Visualize the data with the random effet as treplicate
Res0202_Length_reps <- ggboxplot(Resp_0202, x = "pH", y = "resp_µmol_L_g_TDW_hr", color = "Replicate",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800"))
Res0202_Length_reps
ggboxplot(Resp_0202, x = "pH", y = "resp_µmol_L_g_TDW_hr", color = "Replicate",
add = c("mean_se", "dotplot")
ggboxplot(Resp_0202, x = "pH", y = "resp_µmol_L_g_TDW_hr", color = "Replicate",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800"))
Resp_0202
ggboxplot(Resp_0202, x = "pH", y = "resp_µmol_L_g_TDW_hr", color = "Replicate",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800", "brown", "grey"))
# Visualize the data with the random effet as treplicate
Res0202_Length_reps <- ggboxplot(Resp_0202, x = "pH", y = "resp_µmol_L_g_TDW_hr", color = "Replicate",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800", "brown", "grey", "purple", "blue", "black", "orange"))
Res0202_Length_reps
# Linear mixed effects model with random effect of Replicate
LMEmod_0202_SL<-aov(lm(resp_µmol_L_mm_Length_hr ~ pCO2, data=Resp_0202))
# Linear mixed effects model with random effect of Replicate
LMmod_0202_SL<-aov(lm(resp_µmol_L_mm_Length_hr ~ pCO2, data=Resp_0202))
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  18   |  765.4  | 3.331e-16 |
# |    **pCO2**     |   1   |  12   |  32.19  | 0.0001033 |
# |    **Food**     |   1   |  12   |  347.3  | 3.176e-10 |
# |  **pCO2:Food**  |   1   |  12   |  19.92  | 0.0007755 |
pander(anova(LMmod_0202_SL), style='rmarkdown')
aov(lm(resp_µmol_L_mm_Length_hr ~ pCO2, data=Resp_0202))
summary(LMmod_0202_SL)
ggplot(Resp_0202, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_µmol_L_g_TDW_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm'))
# plot
Resp0202_Length <- ggplot(Resp_0202, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_µmol_L_g_TDW_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 250)) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210202 (Tissue dry weight stand.)",
y = expression(Respiration~rate~"("~μmol~L^{-1}~O[2]%.%m^{-1}~shell~length%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")"))
Resp0202_Length
# plot
Resp0202_TDW <- ggplot(Resp_0202, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_µmol_L_g_TDW_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 250)) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210202 (Tissue dry weight stand.)",
y = expression(Respiration~rate~"("~μmol~L^{-1}~O[2]%.%m^{-1}~shell~length%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")"))
Resp0202_TDW
Resp0202_TDW
