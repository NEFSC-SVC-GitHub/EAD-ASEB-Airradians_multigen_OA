Length_WholeDryWeight + geom_function(fun = function(x) exp(x*0.05), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) exp(x*2), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) exp(x*0.5), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) exp(x*0.15), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.35*exp(x*0.15), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.35*exp(x*0.2), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.35*exp(x*0.05), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.35*exp(x*0.1), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.25*exp(x*0.1), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.15*exp(x*0.1), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.12*exp(x*0.1), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.12*exp(x*0.08), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.12*exp(x*0.12), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.115*exp(x*0.12), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.11*exp(x*0.12), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.10*exp(x*0.12), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.09*exp(x*0.12), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.08*exp(x*0.12), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.07*exp(x*0.12), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.07*exp(x*0.11), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.07*exp(x*0.115), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.065*exp(x*0.115), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.065*exp(x*0.112), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.065*exp(x*0.116), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.06*exp(x*0.116), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.05*exp(x*0.116), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.05*exp(x*0.11), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.05*exp(x*0.13), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.05*exp(x*0.135), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.054*exp(x*0.135), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.058*exp(x*0.135), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.052*exp(x*0.135), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.05*exp(x*0.135), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.04*exp(x*0.135), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.04*exp(x*0.13), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.04*exp(x*0.125), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.05*exp(x*0.125), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.06*exp(x*0.125), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.0001*exp(x*0.125), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.0001*exp(x*3), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.0001*exp(x*1.5), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.0001*exp(x*05), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.0001*exp(x*0.05), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.0001*exp(x*0.5), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.0001*exp(x*0.75), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.0001*exp(x*1), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.0001*exp(x*0.25), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.0001*exp(x*2), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.0001*exp(x*0.5), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) exp(x*0.5), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) exp(x*2), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) exp(x*0.005), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) exp(x*0.05), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) exp(x*0.09), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) exp(x*0.08), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.01exp(x*0.08), colour = "blue") +
Length_WholeDryWeight + geom_function(fun = function(x) 0.01*exp(x*0.08), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.01*exp(x*0.12), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.01*exp(x*0.2), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.01*exp(x*0.18), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.01*exp(x*0.2), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.01*exp(x*0.21), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.001*exp(x*0.21), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.01*exp(x*0.21), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.01*exp(x*0.21)*0.21, colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.01*exp(x*0.21)*0.3, colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.01*exp(x*0.21)*0.03, colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_WholeDryWeight + geom_function(fun = function(x) 0.01*exp(x*0.21), colour = "blue") +
coord_cartesian(ylim=c(0,5))
stats::loess(Whole_animal_dry_weight_g ~ Shell_length_mm, data = (TDW_AFDW%>%dplyr::filter(Shell_length_mm > 0 & Whole_animal_dry_weight_g > 0)) )
TDW_AFDW %>%
dplyr::filter(Shell_length_mm > 0 & Whole_animal_dry_weight_g > 0) %>% # just to ensure we are getting correct data
ggplot(aes(x=Shell_length_mm, y=Whole_animal_dry_weight_g, color=pCO2)) +
geom_point() +
scale_color_manual(values=c("blue","orange")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell length (mm)") +
scale_y_continuous(name ="Whole dry weight (g)")  +
theme_classic() +
theme(legend.position="none") +
stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1)
TDW_AFDW %>%
dplyr::filter(Shell_length_mm > 0 & Whole_animal_dry_weight_g > 0) %>% # just to ensure we are getting correct data
ggplot(aes(x=Shell_length_mm, y=Whole_animal_dry_weight_g)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell length (mm)") +
scale_y_continuous(name ="Whole dry weight (g)")  +
theme_classic() +
ggtitle("F1 Bay scallops - Length vs. Whole Dry weight") +
theme(legend.position="none") +
stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1)
TDW_AFDW %>%
dplyr::filter(Shell_length_mm > 0 & Whole_animal_dry_weight_g > 0) %>% # just to ensure we are getting correct data
ggplot(aes(x=Shell_length_mm, y=Whole_animal_dry_weight_g)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell length (mm)") +
scale_y_continuous(name ="Whole dry weight (g)")  +
theme_classic() +
ggtitle("F1 Bay scallops - Length vs. Whole Dry weight") +
theme(legend.position="none") +
#stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1)
stat_smooth(method = "lm", formula = y ~ x + I(x^2), size = 1)
TDW_AFDW %>%
dplyr::filter(Shell_length_mm > 0 & Whole_animal_dry_weight_g > 0) %>% # just to ensure we are getting correct data
ggplot(aes(x=Shell_length_mm, y=Whole_animal_dry_weight_g)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell length (mm)") +
scale_y_continuous(name ="Whole dry weight (g)")  +
theme_classic() +
ggtitle("F1 Bay scallops - Length vs. Whole Dry weight") +
theme(legend.position="none") +
#stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1)
stat_smooth(method = "gam", formula = y ~ s(x), size = 1)
TDW_AFDW %>%
dplyr::filter(Shell_length_mm > 0 & Whole_animal_dry_weight_g > 0) %>% # just to ensure we are getting correct data
ggplot(aes(x=Shell_length_mm, y=Whole_animal_dry_weight_g)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell length (mm)") +
scale_y_continuous(name ="Whole dry weight (g)")  +
theme_classic() +
ggtitle("F1 Bay scallops - Length vs. Whole Dry weight") +
theme(legend.position="none") +
#stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1)
#stat_smooth(method = "gam", formula = y ~ s(x), size = 1)
stat_smooth(method = "nls", formula = y ~ a*exp(-b *x))
TDW_AFDW %>%
dplyr::filter(Shell_length_mm > 0 & Whole_animal_dry_weight_g > 0) %>% # just to ensure we are getting correct data
ggplot(aes(x=Shell_length_mm, y=Whole_animal_dry_weight_g)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell length (mm)") +
scale_y_continuous(name ="Whole dry weight (g)")  +
theme_classic() +
ggtitle("F1 Bay scallops - Length vs. Whole Dry weight") +
theme(legend.position="none") +
#stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1)
#stat_smooth(method = "gam", formula = y ~ s(x), size = 1)
stat_smooth(method = "nls", formula = y ~ a*exp(-b *x))
TDW_AFDW %>%
dplyr::filter(Shell_length_mm > 0 & Whole_animal_dry_weight_g > 0) %>% # just to ensure we are getting correct data
ggplot(aes(x=Shell_length_mm, y=Whole_animal_dry_weight_g)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell length (mm)") +
scale_y_continuous(name ="Whole dry weight (g)")  +
theme_classic() +
ggtitle("F1 Bay scallops - Length vs. Whole Dry weight") +
theme(legend.position="none") +
stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1)
TDW_AFDW %>%
dplyr::filter(Shell_length_mm > 0 & Whole_animal_dry_weight_g > 0) %>% # just to ensure we are getting correct data
ggplot(aes(x=Shell_length_mm, y=Whole_animal_dry_weight_g)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell length (mm)") +
scale_y_continuous(name ="Whole dry weight (g)")  +
theme_classic() +
ggtitle("F1 Bay scallops - Length vs. Whole Dry weight") +
theme(legend.position="none") +
#stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1)
stat_smooth(method = "gam", formula = y ~ s(x), size = 1) +
#stat_smooth(method = "nls", formula = y ~ a*exp(-b *x))
geom_smooth(method = loess, color = 'red')
Length_TissueDryWeight_facetted <- TDW_AFDW %>%
dplyr::filter(Shell_length_mm > 0 & Dry_Tissue_weight_g > 0) %>% # just to ensure we are getting correct data
ggplot(aes(x=Shell_length_mm, y=Dry_Tissue_weight_g, color=pCO2)) +
geom_point() +
scale_color_manual(values=c("blue","orange")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell length (mm)") +
scale_y_continuous(name ="Tissue dry weight (g)")  +
theme_classic() +
theme(legend.position="none") +
geom_smooth(method = loess, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "right") +
facet_wrap(~pCO2)
Length_TissueDryWeight_all <- TDW_AFDW %>%
dplyr::filter(Shell_length_mm > 0 & Dry_Tissue_weight_g > 0) %>% # just to ensure we are getting correct data
ggplot(aes(x=Shell_length_mm, y=Dry_Tissue_weight_g)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell length (mm)") +
scale_y_continuous(name ="Tissue dry weight (g)")  +
theme_classic() +
ggtitle("F1 Bay scallops - Length vs. Tissue Dry weight") +
theme(legend.position="none") +
geom_smooth(method = loess, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "right")
Length_TissueDryWeight_all
Length_TissueWeight_all_LOESS_obj <- stats::loess(Dry_Tissue_weight_g ~ Shell_length_mm, data = (TDW_AFDW%>%dplyr::filter(Shell_length_mm > 0 & Dry_Tissue_weight_g > 0)) )
new_LOESS_data                 <- predict(Length_TissueWeight_all_LOESS_obj)
new_shellLength_obj            <- (TDW_AFDW%>%dplyr::filter(Shell_length_mm > 0 & Dry_Tissue_weight_g > 0))$Shell_length_mm
plot(new_shellLength_obj, new_LOESS_data) + line(fun = function(x) 0.04*exp(x*0.14), colour = "blue")
plot(new_shellLength_obj, new_LOESS_data)
as.data.frame(new_LOESS_data, new_shellLength_obj)
as.data.frame(cbind(new_LOESS_data, new_shellLength_obj))
as.data.frame(cbind(new_LOESS_data, new_shellLength_obj)) %>% rename(Dry_Tissue_weight_g = new_LOESS_data)
as.data.frame(cbind(new_LOESS_data, new_shellLength_obj)) %>% dplyr::rename(Dry_Tissue_weight_g = new_LOESS_data)
as.data.frame(cbind(new_LOESS_data, new_shellLength_obj)) %>% dplyr::rename(Dry_Tissue_weight_g = new_LOESS_data & Shell_length_mm = new_shellLength_obj )
as.data.frame(cbind(new_LOESS_data, new_shellLength_obj)) %>% dplyr::rename(Dry_Tissue_weight_g = new_LOESS_data && Shell_length_mm = new_shellLength_obj )
as.data.frame(cbind(new_LOESS_data, new_shellLength_obj)) %>% dplyr::rename(Dry_Tissue_weight_g = new_LOESS_data. Shell_length_mm = new_shellLength_obj )
as.data.frame(cbind(new_LOESS_data, new_shellLength_obj)) %>% dplyr::rename(Dry_Tissue_weight_g = new_LOESS_data, Shell_length_mm = new_shellLength_obj )
as.data.frame(cbind(new_LOESS_data, new_shellLength_obj)) %>% dplyr::rename(Dry_Tissue_weight_g = new_LOESS_data, Shell_length_mm = new_shellLength_obj ) %>% sort(Shell_length_mm)
as.data.frame(cbind(new_LOESS_data, new_shellLength_obj)) %>% dplyr::rename(Dry_Tissue_weight_g = new_LOESS_data, Shell_length_mm = new_shellLength_obj ) %>% dplyr::sort(Shell_length_mm)
as.data.frame(cbind(new_LOESS_data, new_shellLength_obj)) %>% dplyr::rename(Dry_Tissue_weight_g = new_LOESS_data, Shell_length_mm = new_shellLength_obj ) %>% dplyr::sort()
as.data.frame(cbind(new_LOESS_data, new_shellLength_obj)) %>% dplyr::rename(Dry_Tissue_weight_g = new_LOESS_data, Shell_length_mm = new_shellLength_obj ) %>% dplyr::arrange(Shell_length_mm)
Length_TissueWeight_all_LOESS_obj <- stats::gam(Dry_Tissue_weight_g ~ Shell_length_mm, data = (TDW_AFDW%>%dplyr::filter(Shell_length_mm > 0 & Dry_Tissue_weight_g > 0)) )
Length_TissueWeight_all_LOESS_obj
new_LOESS_data                    <- predict(Length_TissueWeight_all_LOESS_obj)
new_shellLength_obj               <- (TDW_AFDW%>%dplyr::filter(Shell_length_mm > 0 & Dry_Tissue_weight_g > 0))$Shell_length_mm
as.data.frame(cbind(new_LOESS_data, new_shellLength_obj)) %>% dplyr::rename(Dry_Tissue_weight_g = new_LOESS_data, Shell_length_mm = new_shellLength_obj ) %>% dplyr::arrange(Shell_length_mm)
plot(new_shellLength_obj, new_LOESS_data)
Length_TissueDryWeight_facetted
Length_TotalAFDW_all
Length_TotalAFDW_facetted
TDW_AFDW %>%
dplyr::filter(Shell_length_mm > 0 & TotalAFDW_g > 0) %>% # just to ensure we are getting correct data
ggplot(aes(x=Shell_length_mm, y=TotalAFDW_g)) +
geom_point()
Length_TotalAFDW_all <- TDW_AFDW %>%
dplyr::filter(Shell_length_mm > 0 & TotalAFDW_g > 0) %>% # just to ensure we are getting correct data
ggplot(aes(x=Shell_length_mm, y=TotalAFDW_g)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell length (mm)") +
scale_y_continuous(name ="Total ash free dry weight (g)")  +
theme_classic() +
ggtitle("F1 Bay scallops - Length vs. Total ash free dry weight") +
theme(legend.position="none") +
geom_smooth(method = loess, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "right")
Length_TotalAFDW_all
Length_TissueDryWeight_all <- TDW_AFDW %>%
dplyr::filter(Shell_length_mm > 0 & Dry_Tissue_weight_g > 0) %>% # just to ensure we are getting correct data
ggplot(aes(x=Shell_length_mm, y=Dry_Tissue_weight_g)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell length (mm)") +
scale_y_continuous(name ="Tissue dry weight (g)")  +
theme_classic() +
ggtitle("F1 Bay scallops - Length vs. Tissue Dry weight") +
theme(legend.position="none") +
geom_smooth(method = loess, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "right")
Length_TissueDryWeight_all
Length_TissueWeight_all_LOESS_obj <- stats::loess(Dry_Tissue_weight_g ~ Shell_length_mm, data = (TDW_AFDW%>%dplyr::filter(Shell_length_mm > 0 & Dry_Tissue_weight_g > 0)) )
new_LOESS_data                    <- predict(Length_TissueWeight_all_LOESS_obj)
new_shellLength_obj               <- (TDW_AFDW%>%dplyr::filter(Shell_length_mm > 0 & Dry_Tissue_weight_g > 0))$Shell_length_mm
plot(new_shellLength_obj, new_LOESS_data)
as.data.frame(cbind(new_LOESS_data, new_shellLength_obj)) %>% dplyr::rename(Dry_Tissue_weight_g = new_LOESS_data, Shell_length_mm = new_shellLength_obj ) %>% dplyr::arrange(Shell_length_mm)
as.data.frame(cbind(new_LOESS_data, new_shellLength_obj)) %>% dplyr::rename(Dry_Tissue_weight_g = new_LOESS_data, Shell_length_mm = new_shellLength_obj ) %>% dplyr::arrange(Shell_length_mm) %>%  dplyr::filter(Shell_length_mm > 6.85)
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(ggplot2)
library(forcats)
library(lme4)
library(lmerTest)
library(performance)
library(car)
library(kableExtra)
library(pander)
library(data.table)
library(Rmisc)
library(devtools)
library(ggpubr)
library(SciViews)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis") # personal computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis") # Work computer
# LOAD DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
RR_master <- read.csv(file="Output/Respiration/Calculated_Resp_Master.csv", header=T) # view script REspirationRates_Calc.Rmd for the road to this master file
RR_master_wihtout_TDW                   <- RR_master[is.na(RR_master$Dry_Tissue_weight),] %>% filter(!Fed_Unfed %in% 'Low food') # call all data with 'NA' instead of TDW value
RR_master_wihtout_TDW
Length_TissueDryWeight_all <- TDW_AFDW %>%
dplyr::filter(Shell_length_mm > 0 & Dry_Tissue_weight_g > 0) %>% # just to ensure we are getting correct data
ggplot(aes(x=Shell_length_mm, y=Dry_Tissue_weight_g)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell length (mm)") +
scale_y_continuous(name ="Tissue dry weight (g)")  +
theme_classic() +
ggtitle("F1 Bay scallops - Length vs. Tissue Dry weight") +
theme(legend.position="none") +
geom_smooth(method = loess, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "right")
Length_TissueDryWeight_all + geom_function(fun = function(x) 0.04*exp(x*0.15), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_TissueDryWeight_all + geom_function(fun = function(x) 0.005*exp(x*0.01), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_TissueDryWeight_all + geom_function(fun = function(x) 0.005*exp(x*0.1), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_TissueDryWeight_all + geom_function(fun = function(x) 0.05*exp(x*0.1), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_TissueDryWeight_all + geom_function(fun = function(x) 0.05*exp(x*0.01), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_TissueDryWeight_all
Length_TissueDryWeight_all + geom_function(fun = function(x) 0.2*exp(x*0.01), colour = "blue") +
coord_cartesian(ylim=c(0,5))
Length_TissueDryWeight_all + geom_function(fun = function(x) 0.05*exp(x*0.01), colour = "blue") +
coord_cartesian(ylim=c(0,1))
Length_TissueDryWeight_all + geom_function(fun = function(x) 0.01*exp(x*0.12), colour = "blue") +
coord_cartesian(ylim=c(0,1))
Length_TissueDryWeight_all + geom_function(fun = function(x) 0.001*exp(x*0.15), colour = "blue") +
coord_cartesian(ylim=c(0,1))
Length_TissueDryWeight_all + geom_function(fun = function(x) 0.001*exp(x*0.12), colour = "blue") +
coord_cartesian(ylim=c(0,1))
Length_TissueDryWeight_all + geom_function(fun = function(x) 0.001*exp(x*0.18), colour = "blue") +
coord_cartesian(ylim=c(0,1))
Length_TissueDryWeight_spat <- TDW_AFDW %>%
dplyr::filter(Shell_length_mm > 0 & Dry_Tissue_weight_g > 0) %>% # just to ensure we are getting correct data
dplyr::filter(Shell_length_mm < 10) %>%
ggplot(aes(x=Shell_length_mm, y=Dry_Tissue_weight_g)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell length (mm)") +
scale_y_continuous(name ="Tissue dry weight (g)")  +
theme_classic() +
ggtitle("F1 Bay scallops - Length vs. Tissue Dry weight") +
theme(legend.position="none") +
geom_smooth(method = loess, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "right")
Length_TissueDryWeight_spat
Length_TissueDryWeight_spat <- TDW_AFDW %>%
dplyr::filter(Shell_length_mm > 0 & Dry_Tissue_weight_g > 0) %>% # just to ensure we are getting correct data
dplyr::filter(Shell_length_mm < 8) %>%
ggplot(aes(x=Shell_length_mm, y=Dry_Tissue_weight_g)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell length (mm)") +
scale_y_continuous(name ="Tissue dry weight (g)")  +
theme_classic() +
ggtitle("F1 Bay scallops - Length vs. Tissue Dry weight") +
theme(legend.position="none") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "right")
Length_TissueDryWeight_spat
Length_TissueDryWeight_spat <- TDW_AFDW %>%
dplyr::filter(Shell_length_mm > 0 & Dry_Tissue_weight_g > 0) %>% # just to ensure we are getting correct data
dplyr::filter(Shell_length_mm < 10) %>%
ggplot(aes(x=Shell_length_mm, y=Dry_Tissue_weight_g)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell length (mm)") +
scale_y_continuous(name ="Tissue dry weight (g)")  +
theme_classic() +
ggtitle("F1 Bay scallops - Length vs. Tissue Dry weight") +
theme(legend.position="none") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "right")
Length_TissueDryWeight_spat
Length_TissueDryWeight_spat <- TDW_AFDW %>%
dplyr::filter(Shell_length_mm > 0 & Dry_Tissue_weight_g > 0) %>% # just to ensure we are getting correct data
dplyr::filter(Shell_length_mm < 6) %>%
ggplot(aes(x=Shell_length_mm, y=Dry_Tissue_weight_g)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell length (mm)") +
scale_y_continuous(name ="Tissue dry weight (g)")  +
theme_classic() +
ggtitle("F1 Bay scallops - Length vs. Tissue Dry weight") +
theme(legend.position="none") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "right")
Length_TissueDryWeight_spat
Length_TissueDryWeight_spat <- TDW_AFDW %>%
dplyr::filter(Shell_length_mm > 0 & Dry_Tissue_weight_g > 0) %>% # just to ensure we are getting correct data
dplyr::filter(Shell_length_mm < 8) %>%
ggplot(aes(x=Shell_length_mm, y=Dry_Tissue_weight_g)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell length (mm)") +
scale_y_continuous(name ="Tissue dry weight (g)")  +
theme_classic() +
ggtitle("F1 Bay scallops - Length vs. Tissue Dry weight") +
theme(legend.position="none") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "right")
Length_TissueDryWeight_spat
RR_master_wihtout_TDW                   <- RR_master[is.na(RR_master$Dry_Tissue_weight),] %>% filter(!Fed_Unfed %in% 'Low food') # call all data with 'NA' instead of TDW value
RR_master_wihtout_TDW$Dry_Tissue_weight <- -0.00324 + 0.000794*(RR_master_wihtout_TDW$Length_um) # Calculate a TDW value based on the Local Polynomial Regression Fitting geom_smooth EQ  (file:///C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Survival_Size/TissueDryWeight_v_Length.pdf)
RR_master_with_TDW                      <- RR_master[!is.na(RR_master$Dry_Tissue_weight),] # call the data that does have TDW to merge with the updated data
RR_master_newTDW                        <- rbind(RR_master_wihtout_TDW, RR_master_with_TDW) # we now have a new dataset with TDW for the smaller animals and those did not have it measured
# repeat the process above for metabolic scaling
RR_master_newTDW_OM            <- RR_master_newTDW %>% filter(!is.na(resp_umol_L_hr))
RR_master_newTDW_OM$log10_VO2  <- log10(as.numeric(RR_master_newTDW_OM$resp_umol_L_hr)) # assign resp value
RR_master_newTDW_OM$log10_TDW  <- log10(as.numeric(RR_master_newTDW_OM$Dry_Tissue_weight)) # assign length value
summary(lm(RR_master_newTDW_OM$log10_VO2~RR_master_newTDW_OM$log10_TDW)) # 0.71092 == b factor
MO2_b.factor_PLOT <- RR_master_newTDW_OM %>%
ggplot(aes(x=log10_TDW, y=log10_VO2)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_BodyMass; TDW in g") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none") +
ggtitle("Metabolic scaling: log10_MO2 = log10_a + (b.factor * log10_BodyMass)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "left")
MO2_b.factor_PLOT
RR_master_wihtout_TDW$Dry_Tissue_weight
Length_TissueDryWeight_spat + geom_function(fun = function(x) -0.00324 + 0.000794*(x), colour = "blue")
RR_master_wihtout_TDW                   <- RR_master[is.na(RR_master$Dry_Tissue_weight),] %>% filter(!Fed_Unfed %in% 'Low food') # call all data with 'NA' instead of TDW value
RR_master_wihtout_TDW$Dry_Tissue_weight <- -0.00324 + 0.000794*(RR_master_wihtout_TDW$Length_um/1000) # Calculate a TDW value based on the Local Polynomial Regression Fitting geom_smooth EQ  (file:///C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Survival_Size/TissueDryWeight_v_Length.pdf)
RR_master_wihtout_TDW$Dry_Tissue_weight
RR_master_wihtout_TDW$Length_um/1000)
RR_master_wihtout_TDW$Length_um/1000
0.000794*(RR_master_wihtout_TDW$Length_um/1000)
RR_master_wihtout_TDW                   <- RR_master[is.na(RR_master$Dry_Tissue_weight),] %>% filter(!Fed_Unfed %in% 'Low food') # call all data with 'NA' instead of TDW value
RR_master_wihtout_TDW$Dry_Tissue_weight <- 0.000794*(RR_master_wihtout_TDW$Length_um/1000) # Calculate a TDW value based on the Local Polynomial Regression Fitting geom_smooth EQ  (file:///C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Survival_Size/TissueDryWeight_v_Length.pdf)
RR_master_with_TDW                      <- RR_master[!is.na(RR_master$Dry_Tissue_weight),] # call the data that does have TDW to merge with the updated data
RR_master_newTDW                        <- rbind(RR_master_wihtout_TDW, RR_master_with_TDW) # we now have a new dataset with TDW for the smaller animals and those did not have it measured
# repeat the process above for metabolic scaling
RR_master_newTDW_OM            <- RR_master_newTDW %>% filter(!is.na(resp_umol_L_hr))
RR_master_newTDW_OM$log10_VO2  <- log10(as.numeric(RR_master_newTDW_OM$resp_umol_L_hr)) # assign resp value
RR_master_newTDW_OM$log10_TDW  <- log10(as.numeric(RR_master_newTDW_OM$Dry_Tissue_weight)) # assign length value
summary(lm(RR_master_newTDW_OM$log10_VO2~RR_master_newTDW_OM$log10_TDW)) # 0.71092 == b factor
MO2_b.factor_PLOT <- RR_master_newTDW_OM %>%
ggplot(aes(x=log10_TDW, y=log10_VO2)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_BodyMass; TDW in g") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none") +
ggtitle("Metabolic scaling: log10_MO2 = log10_a + (b.factor * log10_BodyMass)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "left")
MO2_b.factor_PLOT
Length_TissueDryWeight_spat <- TDW_AFDW %>%
dplyr::filter(Shell_length_mm > 0 & Dry_Tissue_weight_g > 0) %>% # just to ensure we are getting correct data
dplyr::filter(Shell_length_mm < 12) %>%
ggplot(aes(x=Shell_length_mm, y=Dry_Tissue_weight_g)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell length (mm)") +
scale_y_continuous(name ="Tissue dry weight (g)")  +
theme_classic() +
ggtitle("F1 Bay scallops - Length vs. Tissue Dry weight") +
theme(legend.position="none") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "right")
Length_TissueDryWeight_spat
