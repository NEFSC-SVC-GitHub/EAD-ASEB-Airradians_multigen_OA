filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH5' ~ 68.57288, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH6' ~ 68.01878, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH7' ~ 68.54551, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH8' ~ 68.53297, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH1' ~ 68.55323, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022')  & Channel == 'CH2' ~ 68.85583, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH3' ~ 68.87473, # larger custom vessels measured individually... # note ch3 waused ch9 vessel on 2/2/2022
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH4' ~ 68.95481, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH5' ~ 68.57288, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH6' ~ 68.01878, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH7' ~ 68.54551, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH8' ~ 68.53297, # larger custom vessels measured individually...
filetype == "SDR_data" ~ 1.7)) %>% # 24-well plate - 1700ul
dplyr::mutate(resp_umol_L_hr =( ( ((abs(resp_blankStand))* (1/32)) *  # convert mg O2 to umol O2 (note that the resp_blank_stand is negative raw data from LoLin.R)
(volume/1000) ) * # convert to Liters
60) ) %>% #  convert per minutes to per hours
dplyr::mutate(Age = case_when(Date == '9/14/2021' ~ 50, Date == '9/30/2021' ~ 66, Date == '10/26/2021' ~ 92)) %>%
dplyr::mutate(Fed_Unfed = case_when(Fed_Unfed == 'F' ~ "High food", is.na(Fed_Unfed) ~ "High food", Fed_Unfed == 'U' ~ "Low food")) %>%
dplyr::mutate(pCO2 = case_when(pH == 8.0 ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
Resp.outliers <- Resp.Master %>% dplyr::filter(resp_blankStand > 0) # call the values with positive resp rates, measing they were slower than the blank!
Resp.Master_OM %>% ggplot(aes(x = Length_um, y = Dry_Tissue_weight)) +
geom_smooth(method = "loess") +
theme_classic() +
ylab("Scallop_TissueDW_mg") +
xlab("Length_um") +
geom_point()
# (1) ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# NORMALIZED for Shell length
Resp.Master_OM$resp_µmol_L_mm_Length_hr <- (Resp.Master_OM$resp_umol_L_hr / # multiple by 1000 to convert mmol/ O2 to umol/L O2
(Resp.Master_OM$Length_um/1000)) # normalize by Dry tissue weight  as to mg O2 L-1 g dry tissue weight-1
Resp.Master_OM$resp_µmol_L_mg_TDW_hr <- (Resp.Master_OM$resp_umol_L_hr / # multiple by 1000 to convert mmol/ O2 to umol/L O2
(Resp.Master_OM$Dry_Tissue_weight*1000)) # normalize by Dry tissue weight  as to mg O2 L-1 g dry tissue weight-1
#write.csv(Resp.Master_OM, "C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv")
write.csv(Resp.Master_OM, "C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv")
#write.csv(Resp.Master_OM, "C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv")
write.csv(Resp.Master_OM, "C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv")
Resp.Master_OM$Dry_Tissue_weight*1000
Resp.Master_OM$resp_µmol_L_g_TDW_hr <- (Resp.Master_OM$resp_umol_L_hr / # multiple by 1000 to convert mmol/ O2 to umol/L O2
(Resp.Master_OM$Dry_Tissue_weight)) # normalize by Dry tissue weight  as to mg O2 L-1 g dry tissue weight-1
Resp.Master_OM$resp_µmol_L_g_TDW_hr
Resp.Master_OM <- Resp.Master[!is.na(Resp.Master$Length_um),] %>% dplyr::filter(!resp_blankStand > 0) %>% # ommit respiration values that are positive
dplyr::mutate(volume = case_when(filetype == "LoLigo_data" & Date == '9/14/2021' ~ 2.2, # small vessels for loligo system - 22 ml vessels
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH1' ~ 68.55323, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021')  & Channel == 'CH2' ~ 68.85583, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH3' ~ 68.87473, # larger custom vessels measured individually... # note ch3 waused ch9 vessel on 2/2/2022
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH4' ~ 68.95481, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH5' ~ 68.57288, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH6' ~ 68.01878, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH7' ~ 68.54551, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH8' ~ 68.53297, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH1' ~ 68.55323, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022')  & Channel == 'CH2' ~ 68.85583, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH3' ~ 68.87473, # larger custom vessels measured individually... # note ch3 waused ch9 vessel on 2/2/2022
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH4' ~ 68.95481, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH5' ~ 68.57288, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH6' ~ 68.01878, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH7' ~ 68.54551, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH8' ~ 68.53297, # larger custom vessels measured individually...
filetype == "SDR_data" ~ 1.7)) %>% # 24-well plate - 1700ul
dplyr::mutate(resp_umol_L_hr =( ( ((abs(resp_blankStand))* (1/32)) *  # convert mg O2 to umol O2 (note that the resp_blank_stand is negative raw data from LoLin.R)
(volume/1000) ) * # convert to Liters
60) ) %>% #  convert per minutes to per hours
dplyr::mutate(Age = case_when(Date == '9/14/2021' ~ 50, Date == '9/30/2021' ~ 66, Date == '10/26/2021' ~ 92)) %>%
dplyr::mutate(Fed_Unfed = case_when(Fed_Unfed == 'F' ~ "High food", is.na(Fed_Unfed) ~ "High food", Fed_Unfed == 'U' ~ "Low food")) %>%
dplyr::mutate(pCO2 = case_when(pH == 8.0 ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
# (1) ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# NORMALIZED for Shell length
Resp.Master_OM$resp_µmol_L_mm_Length_hr <- (Resp.Master_OM$resp_umol_L_hr / # multiple by 1000 to convert mmol/ O2 to umol/L O2
(Resp.Master_OM$Length_um/1000)) # normalize by Dry tissue weight  as to mg O2 L-1 g dry tissue weight-1
Resp.Master_OM$resp_µmol_L_g_TDW_hr <- (Resp.Master_OM$resp_umol_L_hr / # multiple by 1000 to convert mmol/ O2 to umol/L O2
(Resp.Master_OM$Dry_Tissue_weight)) # normalize by Dry tissue weight  as to mg O2 L-1 g dry tissue weight-1
#write.csv(Resp.Master_OM, "C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv")
write.csv(Resp.Master_OM, "C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv")
Resp.Master_OM$Length_um/1000
resp_means <- Resp.Master_OM %>%
dplyr::filter(Date %in% '2/2/2022')
dplyr::group_by(Date, pH) %>%
dplyr::filter(Lpc <0) %>% # ommit blank calls that d/n represent oxygen consumption
dplyr::summarise(mean_resp_gTDW = mean(resp_µmol_L_g_TDW_hr),
mean_resp_umolL = mean(resp_umol_L_hr),
sd_resp_gTDW = sd(resp_µmol_L_g_TDW_hr),
sd_resp_umolL = sd(resp_umol_L_hr),
n = n())
resp_means <- Resp.Master_OM %>%
dplyr::filter(Date %in% '2/2/2022')
resp_means <- Resp.Master_OM %>%
dplyr::filter(Date %in% '2/2/2022') %>%
dplyr::group_by(Date, pH) %>%
dplyr::summarise(mean_resp_gTDW = mean(resp_µmol_L_g_TDW_hr),
mean_resp_umolL = mean(resp_umol_L_hr),
sd_resp_gTDW = sd(resp_µmol_L_g_TDW_hr),
sd_resp_umolL = sd(resp_umol_L_hr),
n = n())
resp_means
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(ggplot2)
library(forcats)
library(lme4)
library(lmerTest)
library(see)
library(performance)
library(car)
library(kableExtra)
library(pander)
library(data.table)
library(stringr)
library(latex2exp)
library(Rmisc)
library(devtools)
library(ggpubr)
library(hrbrthemes)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::
<<<<<<< HEAD
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(ggplot2)
library(forcats)
library(lme4)
library(lmerTest)
library(see)
library(performance)
library(car)
library(kableExtra)
library(pander)
library(data.table)
library(stringr)
library(latex2exp)
library(Rmisc)
library(devtools)
library(ggpubr)
library(hrbrthemes)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis") # personal computer
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(ggplot2)
library(forcats)
library(lme4)
library(lmerTest)
library(see)
library(performance)
library(car)
library(kableExtra)
library(pander)
library(data.table)
library(stringr)
library(latex2exp)
library(Rmisc)
library(devtools)
library(ggpubr)
library(hrbrthemes)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::
setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis") # personal computer
# setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis") # Work computer
# LOAD DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
resp.data       <- read.csv(file="Output/Respiration/Cumulative_resp_alpha0.4_15sectrunc1hour.csv", header=T) %>%
dplyr::filter(!Date %in% "9/14/2021" | !Filename %in% 'Run_1_raw.txt') # read the calculate raw rates from 'resp_LoLin' script - contains the calculated rate (not normalized for blanks) for each sensor-channel
# exp_metadata    <- read.csv(file="Data/ExperimentMetadata.csv", header=T) # treatment assignments to 'Chamber_Tank'
lengths         <- read.csv(file="Data/Respiration/Lengths_Condition_resp_clearance.csv", header=T)
resp.ref        <- read.csv(file="Data/Respiration/Reference_master.csv", header=T) %>% dplyr::filter(!Date %in% "9/14/2021" | !Filename %in% 'Run_1_raw.txt')
Dry_weights     <- read.csv(file="Data/Respiration/Lengths_Condition_resp_clearance.csv", header=T)
# merge the exp_metadata with the resp.data
resp.ref_length_merged                 <- merge(resp.ref, lengths) # all TRUE allows us to keep the blanks
resp.data_merged                       <- merge(resp.data, resp.ref_length_merged) %>% # out master file moving forward....
dplyr::mutate(filetype = str_sub(Filename, -3,-1)) %>%
dplyr::mutate(filetype = factor(ifelse(filetype == "csv", "SDR_data", "LoLigo_data")))
kable(head(resp.data_merged))
resp.data_merged[108,c(1:6)]  # 	C1 RR_9.30.21_AM_Plate_2_Run_1.csv # -0.02890813	-0.0608251	-0.0608251 - Lz and Leq call better regression than Lpc
resp.data_merged[120,c(1:6)]  # 	C1 RR_9.30.21_AM_Plate_2_Run_1.csv # -0.02890813	-0.0608251	-0.0608251 - Lz and Leq call better regression than Lpc
resp.data_merged[112,c(1:6)]  # 	C1 RR_9.30.21_AM_Plate_2_Run_1.csv # -0.02890813	-0.0608251	-0.0608251 - Lz and Leq call better regression than Lpc
resp.data_merged[118,c(1:6)]  # 	C1 RR_9.30.21_AM_Plate_2_Run_1.csv # -0.02890813	-0.0608251	-0.0608251 - Lz and Leq call better regression than Lpc
resp.data_merged[116,c(1:6)]  # 	C1 RR_9.30.21_AM_Plate_2_Run_1.csv # -0.02890813	-0.0608251	-0.0608251 - Lz and Leq call better regression than Lpc
resp.data_merged[117,c(1:6)]  # 	C1 RR_9.30.21_AM_Plate_2_Run_1.csv # -0.02890813	-0.0608251	-0.0608251 - Lz and Leq call better regression than Lpc
resp.data_merged[117,c(1:6)]  # 	C1 RR_9.30.21_AM_Plate_2_Run_1.csv # -0.02890813	-0.0608251	-0.0608251 - Lz and Leq call better regression than Lp5resp.data_merged[124,c(1:6)] #  C5 RR_9.30.21_PM_Plate_2_Run_2.csv	0.029052351	-0.076034441	-0.076034441
resp.data_merged[115,c(1:6)]  # 	C1 RR_9.30.21_AM_Plate_2_Run_1.csv # -0.02890813	-0.0608251	-0.0608251 - Lz and Leq call better regression than Lp5resp.data_merged[124,c(1:6)] #  C5 RR_9.30.21_PM_Plate_2_Run_2.csv	0.029052351	-0.076034441	-0.076034441
resp.data_merged[115,c(1:6)]  # 	C1 RR_9.30.21_PM_Plate_1_Run_2.csv	0.011656487	0.011656487	0.011656487  - ommit this
resp.data_merged[114,c(1:6)]  # 	C1 RR_9.30.21_AM_Plate_2_Run_1.csv # -0.02890813	-0.0608251	-0.0608251 - Lz and Leq call better regression than Lp5resp.data_merged[124,c(1:6)]
resp.data_merged[130,c(1:6)]#  C5 RR_9.30.21_PM_Plate_2_Run_2.csv	0.029052351	-0.076034441	-0.076034441
resp.data_merged[131,c(1:6)]#  C5 RR_9.30.21_PM_Plate_2_Run_2.csv	0.029052351	-0.076034441	-0.076034441
resp.data_merged[130,c(1:6)]#  C5 RR_9.30.21_PM_Plate_2_Run_2.csv	0.029052351	-0.076034441	-0.076034441
resp.data_merged[114,c(1:6)]  # 	C1 RR_9.30.21_AM_Plate_2_Run_1.csv # -0.02890813	-0.0608251	-0.0608251 - Lz and Leq call better regression than Lp5resp.data_merged[124,c(1:6)]
resp.data_merged[130,c(1:6)]#  C5 RR_9.30.21_PM_Plate_2_Run_2.csv	0.029052351	-0.076034441	-0.076034441
resp.data_merged[115,c(1:6)]  # 	C1 RR_9.30.21_PM_Plate_1_Run_2.csv	0.011656487	0.011656487	0.011656487  - ommit this
resp.data_merged[114,4] <- resp.data_merged[114,5] # 20210930_Plate_2_Run_2_C5_regression - Lz and Leq call better regression than Lpc
resp.data_merged[130,4] <- resp.data_merged[130,5] # 20210930_Plate_2_Run_1_C1_regression - Lz and Leq call better regression than Lpc
resp.data_merged[115,4] <- -0.0296 # 20210930_Plate_1_Run_2_C1_regression - plot shows noise after the 20 minutes mark, we reran this at the end of the LoLin script, insert here!
resp.data_merged[114,c(1:6)] # -0.0608251
resp.data_merged[130,c(1:6)] # -0.07603444
resp.data_merged[115,c(1:6)] # -0.0296
resp.data_merged[114,c(1:6)] # -0.0608251
resp.data_merged[130,c(1:6)] # -0.07603444
resp.data_merged[115,c(1:6)] # -0.0296
blanks_total <- data.frame() # start dataframe
blanks.table <- data.frame(matrix(nrow = 1,ncol = 5)) # make a table template
colnames(blanks.table)<-c('Date', 'Channel', 'mean_Lpc', 'mean_Leq' , 'mean_Lz') # names for comuns in the for loop
blanks_all_raw <- data.frame(merge(resp.ref, resp.data, by = c('Date', 'Channel', 'Filename')) %>%
dplyr::mutate(filetype = str_sub(Filename, -3,-1)) %>%
dplyr::mutate(filetype = factor(ifelse(filetype == "csv", "SDR_data", "LoLigo_data"))) %>%
dplyr::filter(Chamber_tank  == 'blank') %>%
#dplyr::filter(Lpc <0) %>%
dplyr::filter(!Date == '9/30/2021' | !Lpc < -0.035) %>% #omits C6 RR_9.30.21_AM_Plate_1_Run_1.csv	8.0	blank - View the Lolin plot, looks noisy and a fast outlier from the others
dplyr::filter(!Date == '10/26/2021'  | !Channel == "CH8" | !Run == "2" )) # omit a bad blank that contained a bad seal, noted on the respiration sampling day during the trial
# kable((blanks_all_raw)[,c(1:3,6,8,12:14)])
blanks_means <- blanks_all_raw %>%
dplyr::group_by(Date, Run, filetype) %>%
dplyr::filter(Chamber_tank == "blank") %>%
dplyr::filter(Lpc <0) %>% # ommit blank calls that d/n represent oxygen consumption
dplyr::summarise(BLANK.mean_Lpc = mean(abs(Lpc)),
BLANK.sd.Lpc   = sd(abs(Lpc)),
BLANK.mean_Leq = mean(abs(Leq)),
BLANK.mean_Lz = mean(abs(Lz)),
n = n())
kable(blanks_means)
Resp.Master <- merge(resp.data_merged, blanks_means, by=c("Date",  "Run", "filetype")) %>% # NOTE: this repeats for every distinct length value
dplyr::mutate(resp_blankStand = Lpc - BLANK.mean_Lpc) # ommits respiration rate values showing an increase in O2 over time
Resp.Master_OM <- Resp.Master[!is.na(Resp.Master$Length_um),] %>% dplyr::filter(!resp_blankStand > 0) %>% # ommit respiration values that are positive
dplyr::mutate(volume = case_when(filetype == "LoLigo_data" & Date == '9/14/2021' ~ 2.2, # small vessels for loligo system - 22 ml vessels
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH1' ~ 68.55323, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021')  & Channel == 'CH2' ~ 68.85583, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH3' ~ 68.87473, # larger custom vessels measured individually... # note ch3 waused ch9 vessel on 2/2/2022
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH4' ~ 68.95481, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH5' ~ 68.57288, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH6' ~ 68.01878, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH7' ~ 68.54551, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('10/26/2021') & Channel == 'CH8' ~ 68.53297, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH1' ~ 68.55323, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022')  & Channel == 'CH2' ~ 68.85583, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH3' ~ 68.87473, # larger custom vessels measured individually... # note ch3 waused ch9 vessel on 2/2/2022
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH4' ~ 68.95481, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH5' ~ 68.57288, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH6' ~ 68.01878, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH7' ~ 68.54551, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == c('2/2/2022') & Channel == 'CH8' ~ 68.53297, # larger custom vessels measured individually...
filetype == "SDR_data" ~ 1.7)) %>% # 24-well plate - 1700ul
dplyr::mutate(resp_umol_L_hr =( ( ((abs(resp_blankStand))* (1/32)) *  # convert mg O2 to umol O2 (note that the resp_blank_stand is negative raw data from LoLin.R)
(volume/1000) ) * # convert to Liters
60) ) %>% #  convert per minutes to per hours
dplyr::mutate(Age = case_when(Date == '9/14/2021' ~ 50, Date == '9/30/2021' ~ 66, Date == '10/26/2021' ~ 92)) %>%
dplyr::mutate(Fed_Unfed = case_when(Fed_Unfed == 'F' ~ "High food", is.na(Fed_Unfed) ~ "High food", Fed_Unfed == 'U' ~ "Low food")) %>%
dplyr::mutate(pCO2 = case_when(pH == 8.0 ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
Resp.outliers <- Resp.Master %>% dplyr::filter(resp_blankStand > 0) # call the values with positive resp rates, measing they were slower than the blank!
Resp.outliers
Resp.Master_OM %>% ggplot(aes(x = Length_um, y = Dry_Tissue_weight)) +
geom_smooth(method = "loess") +
theme_classic() +
ylab("Scallop_TissueDW_mg") +
xlab("Length_um") +
geom_point()
# (1) ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# NORMALIZED for Shell length
Resp.Master_OM$resp_µmol_L_mm_Length_hr <- (Resp.Master_OM$resp_umol_L_hr / # multiple by 1000 to convert mmol/ O2 to umol/L O2
(Resp.Master_OM$Length_um/1000)) # normalize by Dry tissue weight  as to mg O2 L-1 g dry tissue weight-1
Resp.Master_OM$resp_µmol_L_g_TDW_hr <- (Resp.Master_OM$resp_umol_L_hr / # multiple by 1000 to convert mmol/ O2 to umol/L O2
(Resp.Master_OM$Dry_Tissue_weight)) # normalize by Dry tissue weight  as to mg O2 L-1 g dry tissue weight-1
#write.csv(Resp.Master_OM, "C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv")
write.csv(Resp.Master_OM, "C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv")
#write.csv(Resp.Master_OM, "C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv")
write.csv(Resp.Master_OM, "C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv")
Resp.Master_OM
Resp.Master_OM[!is.na,(Resp.Master_OM$Dry_Tissue_weight)]
Resp.Master_OM[!is.na(Resp.Master_OM$)]
Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight)]
Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),]
Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),]
ggplot(aes(x=Dry_Tissue_weight)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8) +
theme_classic() +
geom_vline(xintercept = 3000, color = "red", linetype = "dashed")
Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),] %>%
ggplot(aes(x=Dry_Tissue_weight)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8) +
theme_classic() +
geom_vline(xintercept = 3000, color = "red", linetype = "dashed")
Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),] %>%
ggplot(aes(x=Dry_Tissue_weight)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8) +
theme_classic()
# ABOUT:
# Pilditch and Grant (1999) Effect of temperature fluctuations and food supply on the growth and metabolism of juvenile sea scallops
# Measured metabolic rates  standardized to tissue dry weight (TDW) (note: this is a standard in the field but we do not have this measurement for our animals...)
# due to the range of sizes (1.13 - 2.29 g DW) the authoirs accout for the variation by scaling to a standard scallop with a 1 g dry tissue weight by the equation:
# R_s = (TWD_s / TWD_obs)^b * R_obs
# R_s = standard rate
# R_obs = observed rate
# TWD_s = standardized dry tissue weight (they used 1 g here)
# TWD_obs = the observed dry tissue weight
Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),]$Dry_Tissue_weight
# ABOUT:
# Pilditch and Grant (1999) Effect of temperature fluctuations and food supply on the growth and metabolism of juvenile sea scallops
# Measured metabolic rates  standardized to tissue dry weight (TDW) (note: this is a standard in the field but we do not have this measurement for our animals...)
# due to the range of sizes (1.13 - 2.29 g DW) the authoirs accout for the variation by scaling to a standard scallop with a 1 g dry tissue weight by the equation:
# R_s = (TWD_s / TWD_obs)^b * R_obs
# R_s = standard rate
# R_obs = observed rate
# TWD_s = standardized dry tissue weight (they used 1 g here)
# TWD_obs = the observed dry tissue weight
Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),]$Dry_Tissue_weight
ln_VO2 <- as.numeric(ln( (Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),]$resp_umol_L_hr)  )) # assign resp value
(Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),]$resp_umol_L_hr)
ln_VO2 <- as.numeric(ln( (Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),]$resp_umol_L_hr)  )) # assign resp value
# b = the coefficient estimated empirically by fitting the allometric equation below
# [ln(VO2])] = ln(a) + b*(ln(TDW))
# Allometric coefficient for shell length and respiration rate
require(SciViews)
ln_VO2 <- as.numeric(ln( (Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),]$resp_umol_L_hr)  )) # assign resp value
ln_SL  <- as.numeric(ln( (Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),]$Dry_Tissue_weight)  )) # assign length value
ln_TDW  <- as.numeric(ln( (Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),]$Dry_Tissue_weight)  )) # assign length value
model  <- lm(ln_VO2~ln_TDW) # run model for r quared value
summary(model)
plot(ln_TDW,ln_VO2)
plot(ln_TDW,ln_VO2)
abline(model)
legend("topleft",legend=paste("R2 is", (format(summary(model)$r.squared,digits=3)), sep = " "))
dev.off()
plot(ln_TDW,ln_VO2)
abline(model)
legend("topleft",legend=paste("R2 is", (format(summary(model)$r.squared,digits=3)), sep = " "))
summary(model)
Resp.Master_OM$Dry_Tissue_weight
plot(ln_TDW,ln_VO2)
plot((Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),]$Dry_Tissue_weight),(Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),]$resp_umol_L_hr))
P_Length_resp_all <- Resp.Master_OM[!is.na(Resp.Master_OM$resp_umol_L_hr),] %>%
ggplot(aes(x = Length_um, y = resp_umol_L_hr, color = as.factor(pCO2))) +
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_smooth(method = "lm", se=FALSE, color="black", formula = resp_umol_L_hr ~ Length_um) +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), plot.title = element_text(size=10))+
labs(title = "Raw Resp v. Shell length (μm)", y = expression(μmol~L^{-1}~O[2]%.%hr^{-1})) +
xlab("Shell length") +
theme(legend.position="none") +
geom_point()
P_Length_resp_facet <- Resp.Master_OM[!is.na(Resp.Master_OM$resp_umol_L_hr),] %>%
ggplot(aes(x = Length_um, y = resp_umol_L_hr, color = as.factor(pCO2))) +
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_smooth(method = "lm", se=FALSE, color="black", formula = resp_umol_L_hr ~ Length_um) +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(y = expression(μmol~L^{-1}~O[2]%.%hr^{-1})) +
xlab("Shell length (μm)") +
geom_point() +
facet_wrap(~Age*Food, scales = "free")
# print in markdown file
ggarrange(P_Length_resp_all, P_Length_resp_facet,nrow = 2)
P_TDW_resp_all <- Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),] %>%
ggplot(aes(x = Dry_Tissue_weight, y = resp_umol_L_hr, color = as.factor(pCO2))) +
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_smooth(method = "lm", se=FALSE, color="black", formula = resp_umol_L_hr ~ Length_um) +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), plot.title = element_text(size=10))+
labs(title = "Raw Resp v. Shell length (μm)", y = expression(μmol~L^{-1}~O[2]%.%hr^{-1})) +
xlab("Shell length") +
theme(legend.position="none") +
geom_point()
P_TDW_resp_facet <- Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),] %>%
ggplot(aes(x = Dry_Tissue_weight, y = resp_umol_L_hr, color = as.factor(pCO2))) +
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_smooth(method = "lm", se=FALSE, color="black", formula = resp_umol_L_hr ~ Length_um) +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(y = expression(μmol~L^{-1}~O[2]%.%hr^{-1})) +
xlab("Shell length (μm)") +
geom_point() +
facet_wrap(~Age*Food, scales = "free")
# print in markdown file
ggarrange(P_TDW_resp_all, P_TDW_resp_facet,nrow = 2)
P_TDW_resp_all <- Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),] %>%
ggplot(aes(x = Dry_Tissue_weight, y = resp_umol_L_hr, color = as.factor(pCO2))) +
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_smooth(method = "lm", se=FALSE, color="black", formula = resp_umol_L_hr ~ Length_um) +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), plot.title = element_text(size=10))+
labs(title = "Raw Resp v. Shell length (μm)", y = expression(μmol~L^{-1}~O[2]%.%hr^{-1})) +
xlab("Shell length") +
theme(legend.position="none") +
geom_point()
P_TDW_resp_facet <- Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),] %>%
ggplot(aes(x = Dry_Tissue_weight, y = resp_umol_L_hr, color = as.factor(pCO2))) +
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_smooth(method = "lm", se=FALSE, color="black", formula = resp_umol_L_hr ~ Length_um) +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(y = expression(μmol~L^{-1}~O[2]%.%hr^{-1})) +
xlab("Shell length (μm)") +
geom_point() +
facet_wrap(~Age*pH, scales = "free")
# print in markdown file
ggarrange(P_TDW_resp_all, P_TDW_resp_facet,nrow = 2)
P_TDW_resp_all <- Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),] %>%
ggplot(aes(x = Dry_Tissue_weight, y = resp_umol_L_hr, color = as.factor(pCO2))) +
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_smooth(method = "lm", se=FALSE, color="black", formula = resp_umol_L_hr ~ Length_um) +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), plot.title = element_text(size=10))+
labs(title = "Raw Resp v. Tissue dry weight (g)", y = expression(μmol~L^{-1}~O[2]%.%hr^{-1})) +
xlab("Tissue dry weight (g)") +
theme(legend.position="none") +
geom_point()
P_TDW_resp_facet <- Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),] %>%
ggplot(aes(x = Dry_Tissue_weight, y = resp_umol_L_hr, color = as.factor(pCO2))) +
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_smooth(method = "lm", se=FALSE, color="black", formula = resp_umol_L_hr ~ Length_um) +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(y = expression(μmol~L^{-1}~O[2]%.%hr^{-1})) +
xlab("Tissue dry weight (g)") +
geom_point() +
facet_wrap(~Age*pH, scales = "free")
# print in markdown file
ggarrange(P_TDW_resp_all, P_TDW_resp_facet,nrow = 2)
P_TDW_resp_normed <- Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),] %>%
ggplot(aes(x = Dry_Tissue_weight, y = resp_µmol_L_g_TDW_hr, color = as.factor(pCO2))) +
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_smooth(method = "lm", se=FALSE, color="black", formula = resp_umol_L_hr ~ Length_um) +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), plot.title = element_text(size=10))+
labs(title = "Raw Resp v. Tissue dry weight (g)", y = expression(μmol~L^{-1}~O[2]%.%hr^{-1})) +
xlab("Tissue dry weight (g)") +
theme(legend.position="none") +
geom_point()
P_TDW_resp_normed
Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),] %>%
ggboxplot(aes(x = Dry_Tissue_weight, y = resp_µmol_L_g_TDW_hr, color = as.factor(pCO2))) +
scale_color_manual(values=c("forestgreen","darkorange2"))+
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), plot.title = element_text(size=10))+
labs(title = "Raw Resp v. Tissue dry weight (g)", y = expression(μmol~L^{-1}~O[2]%.%hr^{-1})) +
xlab("Tissue dry weight (g)") +
theme(legend.position="none") +
geom_point() +
facet_wrap(~Age*pH, scales = "free")
Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),] %>%
ggboxplot(aes(x = Dry_Tissue_weight, y = resp_µmol_L_g_TDW_hr, color = as.factor(pCO2))) +
scale_color_manual(values=c("forestgreen","darkorange2"))
Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),] %>%
ggboxplot(aes(x = pCO2, y = resp_µmol_L_g_TDW_hr, color = as.factor(pCO2))) +
scale_color_manual(values=c("forestgreen","darkorange2"))+
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), plot.title = element_text(size=10))+
labs(title = "Raw Resp v. Tissue dry weight (g)", y = expression(μmol~L^{-1}~O[2]%.%hr^{-1})) +
xlab("Tissue dry weight (g)") +
theme(legend.position="none") +
geom_point() +
facet_wrap(~Age, scales = "free")
Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),] %>%
ggboxplot(aes(x = pCO2, y = resp_µmol_L_g_TDW_hr, color = as.factor(pCO2))) +
scale_color_manual(values=c("forestgreen","darkorange2"))+
theme_classic()
Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),]
Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),] %>%
ggboxplot(aes(x = pCO2, y = resp_µmol_L_g_TDW_hr, color = as.factor(pCO2)))
Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),] %>%
ggboxplot((x = pCO2, y = resp_µmol_L_g_TDW_hr, color = as.factor(pCO2)))
P_TDW_resp_normed <- Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),] %>%
ggplot(resp_µmol_L_g_TDW_hr, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_µmol_L_g_TDW_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic()
P_TDW_resp_normed <- Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),] %>%
ggplot( aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_µmol_L_g_TDW_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic()
P_TDW_resp_normed
P_TDW_resp_normed <- Resp.Master_OM[!is.na(Resp.Master_OM$Dry_Tissue_weight),] %>%
ggplot( aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_µmol_L_g_TDW_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic()+
facet_wrap(~Age, scales = "free")
P_TDW_resp_normed# print in markdown file
# print in markdown file
ggarrange(P_TDW_resp_all, P_TDW_resp_facet,P_TDW_resp_normed,nrow = 3)
Resp.Master_OM
library(devtools) # devtools::install_github # use devtools to instlal github link
library(LoLinR) # install_github('colin-olito/LoLinR') # install LoLinR from github
library(dplyr)
library(lubridate)
library(rMR)
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis")
library(devtools) # devtools::install_github # use devtools to instlal github link
library(LoLinR) # install_github('colin-olito/LoLinR') # install LoLinR from github
library(dplyr)
library(lubridate)
library(rMR)
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis")
path.p    <- "Data/Respiration" #the location of all your respirometry files
a         <- 0.4
ouputNAME <- "Output/Respiration/Cumulative_resp_alpha0.4_15sectrunc1hour.csv"
# call the subfolder names for the outside loop 'i' (i.e. 20210914)
folder.names           <- basename(list.files(path = path.p, pattern = "202", recursive = FALSE)) #list all csv file names in the folder and subfolders
folder.names.table     <- data.frame(folder.names)
# Call the cumulative dataframe that we will write to in the for loop below
df_total             <- data.frame() # start dataframe
resp.table           <- data.frame(matrix(nrow = 1, ncol = 7)) # create dataframe to save cumunalitively during for loop
colnames(resp.table) <- c('Date', 'Channel', 'Lpc', 'Leq' , 'Lz', 'alpha','Filename') # names for comuns in the for loop
# call the subfolder names for the outside loop 'i' (i.e. 20210914)
folder.names           <- basename(list.files(path = path.p, pattern = "202", recursive = FALSE)) #list all csv file names in the folder and subfolders
folder.names.table     <- data.frame(folder.names)
# Call the cumulative dataframe that we will write to in the for loop below
df_total             <- data.frame() # start dataframe
resp.table           <- data.frame(matrix(nrow = 1, ncol = 7)) # create dataframe to save cumunalitively during for loop
colnames(resp.table) <- c('Date', 'Channel', 'Lpc', 'Leq' , 'Lz', 'alpha','Filename') # names for comuns in the for loop
df_total
resp.table
folder.names.table
