FR_boxplot <- Biodep_Master %>%
#filter(!AE < 0) %>%
ggplot(aes(pCO2 , FR , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white", "grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=3),
axis.title=element_text(size=3)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Filtration Rate, F1 Scallops") +
facet_wrap(~Date)
# FR_boxplot
RR_boxplot <- Biodep_Master %>%
#filter(!AE < 0) %>%
ggplot(aes(pCO2 , RR_Percent , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white", "grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=3),
axis.title=element_text(size=3)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Percent Rejection Rate, F1 Scallops") +
facet_wrap(~Date)
# RR_boxplot
SE_boxplot <- Biodep_Master %>%
#filter(!AE < 0) %>%
ggplot(aes(pCO2 , SE , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white", "grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=3),
axis.title=element_text(size=3)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Selection Efficiency, F1 Scallops") +
facet_wrap(~Date)
# SE_boxplot
ggarrange(SE_boxplot,RR_boxplot, OIR_boxplot, FR_boxplot, AE_boxplot, AR_boxplot, )
# output the plot
library(ggpubr)
ggarrange(SE_boxplot,RR_boxplot, OIR_boxplot, FR_boxplot, AE_boxplot, AR_boxplot)
AE_boxplot <- Biodep_Master %>%
#filter(!AE < 0) %>%
ggplot(aes(pCO2 , AE , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white", "grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=6),
axis.title=element_text(size=6)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Assimilation Efficiency, F1 Scallops") +
facet_wrap(~Date)
# AE_boxplot
AR_boxplot <- Biodep_Master %>%
# filter(!AE < 0) %>%
ggplot(aes(pCO2 , AR , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white", "grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=6),
axis.title=element_text(size=6)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Assimilation Rate, F1 Scallops") +
facet_wrap(~Date)
# AR_boxplot
OIR_boxplot <- Biodep_Master %>%
#filter(!AE < 0) %>%
ggplot(aes(pCO2 , OIR , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white", "grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=6),
axis.title=element_text(size=6)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Organic Ingestion Rate, F1 Scallops") +
facet_wrap(~Date)
# OIR_boxplot
FR_boxplot <- Biodep_Master %>%
#filter(!AE < 0) %>%
ggplot(aes(pCO2 , FR , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white", "grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=6),
axis.title=element_text(size=6)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Filtration Rate, F1 Scallops") +
facet_wrap(~Date)
# FR_boxplot
RR_boxplot <- Biodep_Master %>%
#filter(!AE < 0) %>%
ggplot(aes(pCO2 , RR_Percent , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white", "grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=6),
axis.title=element_text(size=6)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Percent Rejection Rate, F1 Scallops") +
facet_wrap(~Date)
# RR_boxplot
SE_boxplot <- Biodep_Master %>%
#filter(!AE < 0) %>%
ggplot(aes(pCO2 , SE , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white", "grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=6),
axis.title=element_text(size=6)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Selection Efficiency, F1 Scallops") +
facet_wrap(~Date)
ggarrange(SE_boxplot,RR_boxplot, OIR_boxplot, FR_boxplot, AE_boxplot, AR_boxplot)
summary(ANOVAmod_0302)
Biodep_master_0302 <- Biodep_Master %>% filter(Date %in% '20220302') %>% filter(!AE < 0) # call data
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ANALYSIS AND PLOTTING  :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Biodep_Master <- read.csv(Biodep_Master, "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Biodeposition/Biodeposition_master.csv")
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ANALYSIS AND PLOTTING  :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Biodep_Master <- read.csv(Biodep_Master, "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Biodeposition/Biodeposition_master.csv", header = T)
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ANALYSIS AND PLOTTING  :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Biodep_Master <- read.csv("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Biodeposition/Biodeposition_master.csv", header = T)
Biodep_Master
# (1) First, run anova within date for all records (for looped!)
ANOVA_Dates <- as.data.table(unique(Biodep_Master$Date)) # call a list to loop in
library(kableExtra)
library(data.table)
library(stringr)
library(latex2exp)
library(Rmisc)
library(aggregate)
# (1) First, run anova within date for all records (for looped!)
ANOVA_Dates <- as.data.table(unique(Biodep_Master$Date)) # call a list to loop in
AOVdf_total          <- data.frame() # start dataframe, this will be the master output
DF_loop     <- data.frame(matrix(nrow = 1, ncol = 12)) # create dataframe to save during for loop
colnames(DF_loop) <- c('Date', 'Metric', 'model', 'DF.num' , 'DF.denom', 'F_val','P_val', 'SigDif', 'ShapiroWilk', 'ResidNorm', 'Levenes', 'HomogVar') # names for comuns in the for loop
ANOVA_Dates
LOOPDATE <- ANOVA_Dates[1,]
LOOPDATE
ANOVA_Dates[1,]
# (1) First, run anova within date for all records (for looped!)
ANOVA_Dates       <- as.data.frame(unique(Biodep_Master$Date)) # call a list to loop in
LOOPDATE <- ANOVA_Dates[1,]
LOOPDATE
data_loop     <- Biodep_Master %>% dplyr::filter(Date %in% ANOVA_Dates[1,])
data_loop
cols_m_loop   <- c('SE','OIR','FR_correct','RR_Percent','OIR','AR','AE')
cols_m_loop
cols_m_loop   <- as.data.frame(c('SE','OIR','FR_correct','RR_Percent','OIR','AR','AE'))
cols_m_loop
cols_m_loop   <- as.data.frame(c('SE','OIR','FR_correct','RR_Percent','OIR','AR','AE')) %>% `colnames<-`('biodep_meas')
cols_m_loop
cols_m_loop[1,]
# high cholorphyll model
x <- as.factor(cols_m_loop[1,])
x
AOVmod    <- aov(lm(x ~ treatment, data = data_loop))
data_loop
AOVmod    <- aov(lm(x ~ as.factor(treatment), data = data_loop))
# high cholorphyll model
x <- (cols_m_loop[1,])
AOVmod    <- aov(lm(x ~ as.factor(treatment), data = data_loop))
x
# high cholorphyll model
x <- row.names(cols_m_loop[1])
x
# high cholorphyll model
x <- cols_m_loop[1]$[[1]]
x
# high cholorphyll model
x <- cols_m_loop[,1]$[[1]]
# high cholorphyll model
x <- cols_m_loop[1,]
x
AOVmod    <- aov(lm(x ~ as.factor(treatment), data = data_loop))
AOVmod    <- aov(lm(SE ~ as.factor(treatment), data = data_loop))
AOVmod
cols_m_loop[1,]
cols_m_loop       <- as.data.frame(c('SE','OIR','FR_correct','RR_Percent','OIR','AR','AE')) %>% `colnames<-`('biodep_meas')
data_loop     <- Biodep_Master %>%
dplyr::filter(Date %in% ANOVA_Dates[i,]) %>%
dplyr::select(cols_m_loop$biodep_meas)
data_loop
data_loop     <- Biodep_Master %>%
dplyr::filter(Date %in% ANOVA_Dates[1,]) %>%
dplyr::select(cols_m_loop$biodep_meas)
data_loop
data_loop     <- Biodep_Master %>%
dplyr::filter(Date %in% ANOVA_Dates[1,]) %>%
dplyr::select(Date, treatment, cols_m_loop$biodep_meas)
data_loop
3:nrow(data_loop)
data_loop[3,]
data_loop[3,]
data_loop[,3]
data_loop
AOVmod    <- aov(lm(data_loop[,3] ~ as.factor(data_loop$treatment)))
for (i in 1:nrow(ANOVA_Dates)) {
data_loop     <- Biodep_Master %>%
dplyr::filter(Date %in% ANOVA_Dates[i,]) %>%
dplyr::select(Date, treatment, cols_m_loop$biodep_meas)
for (m in 3:nrow(data_loop)) # run anova and normality tests for each of these wihtin data i
# high cholorphyll model
AOVmod              <- aov(lm(data_loop[,m] ~ as.factor(data_loop$treatment)))
DF_loop$Date        <- ANOVA_Dates[i,]
DF_loop$Metric      <- data_loop[,m]
DF_loop$model       <- 'one-way AOV; x ~ treatment'
DF_loop$DF.num      <- summary(AOVmod)[[1]][["Df"]][1]
DF_loop$DF.denom    <- summary(AOVmod)[[1]][["Df"]][2]
DF_loop$F_val       <- summary(AOVmod)[[1]][["F value"]][1]
DF_loop$P_val       <- summary(AOVmod)[[1]][["Pr(>F)"]][1]
DF_loop$SigDif      <- if( (summary(AOVmod)[[1]][["Pr(>F)"]][1]) > 0.05) {
'NO'} else {'YES'}
DF_loop$ShapiroWilk <- shapiro.test(resid(AOVmod))[[2]]
DF_loop$ResidNorm   <- if( shapiro.test(resid(AOVmod))[[2]] > 0.05) {
'YES'} else {'NO'}
DF_loop$Levenes     <- leveneTest(AOVmod)[[3]][[1]]
DF_loop$HomogVar    <- if( leveneTest(AOVmod)[[3]][[1]] > 0.05) {
'YES'} else {'NO'}
# asign loop and cumulative output table
df          <- data.frame(DF_loop) # name dataframe for this single row
AOVdf_total <- rbind(AOVdf_total,DF_loop) #bind to a cumulative list dataframe
print(AOVdf_total) # print to monitor progress
}
AOVdf_total
DF_loop
data_loop     <- Biodep_Master %>%
dplyr::filter(Date %in% ANOVA_Dates[i,]) %>%
dplyr::select(Date, treatment, cols_m_loop$biodep_meas)
data_loop
ANOVA_Dates[i,]
data_loop     <- Biodep_Master %>%
dplyr::filter(Date %in% ANOVA_Dates[i,]) %>%
dplyr::select(Date, treatment, cols_m_loop$biodep_meas)
data_loop
Biodep_Master
Biodep_Master %>%
dplyr::filter(Date %in% ANOVA_Dates[i,])
ANOVA_Dates[i,]
data_loop     <- Biodep_Master %>%
dplyr::filter(Date %in% '20220302') %>%
dplyr::select(Date, treatment, cols_m_loop$biodep_meas)
data_loop
date_loop     <- ANOVA_Dates[i,]
date_loop
date_loop     <- str(ANOVA_Dates[i,])
date_loop
date_loop     <- as.character(ANOVA_Dates[i,])
date_loop
data_loop     <- Biodep_Master %>%
dplyr::filter(Date %in% date_loop) %>%
dplyr::select(Date, treatment, cols_m_loop$biodep_meas)
data_loop
# (1) First, run anova within date for all records (for looped!)
ANOVA_Dates       <- as.data.frame(unique(Biodep_Master$Date)) # call a list to loop in
AOVdf_total       <- data.frame() # start dataframe, this will be the master output
DF_loop           <- data.frame(matrix(nrow = 1, ncol = 12)) # create dataframe to save during for loop
colnames(DF_loop) <- c('Date', 'Metric', 'model', 'DF.num' , 'DF.denom', 'F_val','P_val', 'SigDif', 'ShapiroWilk', 'ResidNorm', 'Levenes', 'HomogVar') # names for comuns in the for loop
cols_m_loop       <- as.data.frame(c('SE','OIR','FR_correct','RR_Percent','OIR','AR','AE')) %>% `colnames<-`('biodep_meas')
for (i in 1:nrow(ANOVA_Dates)) {
date_loop     <- as.character(ANOVA_Dates[i,])
data_loop     <- Biodep_Master %>%
dplyr::filter(Date %in% date_loop) %>%
dplyr::select(Date, treatment, cols_m_loop$biodep_meas)
for (m in 3:nrow(data_loop)) # run anova and normality tests for each of these wihtin data i
# high cholorphyll model
AOVmod              <- aov(lm(data_loop[,m] ~ as.factor(data_loop$treatment)))
DF_loop$Date        <- date_loop
DF_loop$Metric      <- data_loop[,m]
DF_loop$model       <- 'one-way AOV; x ~ treatment'
DF_loop$DF.num      <- summary(AOVmod)[[1]][["Df"]][1]
DF_loop$DF.denom    <- summary(AOVmod)[[1]][["Df"]][2]
DF_loop$F_val       <- summary(AOVmod)[[1]][["F value"]][1]
DF_loop$P_val       <- summary(AOVmod)[[1]][["Pr(>F)"]][1]
DF_loop$SigDif      <- if( (summary(AOVmod)[[1]][["Pr(>F)"]][1]) > 0.05) {
'NO'} else {'YES'}
DF_loop$ShapiroWilk <- shapiro.test(resid(AOVmod))[[2]]
DF_loop$ResidNorm   <- if( shapiro.test(resid(AOVmod))[[2]] > 0.05) {
'YES'} else {'NO'}
DF_loop$Levenes     <- leveneTest(AOVmod)[[3]][[1]]
DF_loop$HomogVar    <- if( leveneTest(AOVmod)[[3]][[1]] > 0.05) {
'YES'} else {'NO'}
# asign loop and cumulative output table
df          <- data.frame(DF_loop) # name dataframe for this single row
AOVdf_total <- rbind(AOVdf_total,DF_loop) #bind to a cumulative list dataframe
print(AOVdf_total) # print to monitor progress
}
AOVmod              <- aov(lm(data_loop[,m] ~ as.factor(data_loop$treatment)))
data_loop[,m]
for (i in 1:nrow(ANOVA_Dates)) {
date_loop     <- as.character(ANOVA_Dates[i,])
data_loop     <- Biodep_Master %>%
dplyr::filter(Date %in% date_loop) %>%
dplyr::select(Date, treatment, cols_m_loop$biodep_meas)
for (m in 3:nrow(data_loop)) { # run anova and normality tests for each of these wihtin data i
# high cholorphyll model
AOVmod              <- aov(lm(data_loop[,m] ~ as.factor(data_loop$treatment)))
DF_loop$Date        <- date_loop
DF_loop$Metric      <- data_loop[,m]
DF_loop$model       <- 'one-way AOV; x ~ treatment'
DF_loop$DF.num      <- summary(AOVmod)[[1]][["Df"]][1]
DF_loop$DF.denom    <- summary(AOVmod)[[1]][["Df"]][2]
DF_loop$F_val       <- summary(AOVmod)[[1]][["F value"]][1]
DF_loop$P_val       <- summary(AOVmod)[[1]][["Pr(>F)"]][1]
DF_loop$SigDif      <- if( (summary(AOVmod)[[1]][["Pr(>F)"]][1]) > 0.05) {
'NO'} else {'YES'}
DF_loop$ShapiroWilk <- shapiro.test(resid(AOVmod))[[2]]
DF_loop$ResidNorm   <- if( shapiro.test(resid(AOVmod))[[2]] > 0.05) {
'YES'} else {'NO'}
DF_loop$Levenes     <- leveneTest(AOVmod)[[3]][[1]]
DF_loop$HomogVar    <- if( leveneTest(AOVmod)[[3]][[1]] > 0.05) {
'YES'} else {'NO'}
# asign loop and cumulative output table
df          <- data.frame(DF_loop) # name dataframe for this single row
AOVdf_total <- rbind(AOVdf_total,DF_loop) #bind to a cumulative list dataframe
print(AOVdf_total) # print to monitor progress
}
}
AOVmod              <- aov(lm(data_loop[,m] ~ as.factor(data_loop$treatment)))
DF_loop$Date        <- date_loop
DF_loop$Metric      <- data_loop[,m]
DF_loop$model       <- 'one-way AOV; x ~ treatment'
DF_loop$Metric      <- data_loop[,m]
data_loop[,m]
colnames(data_loop[m])
# (1) First, run anova within date for all records (for looped!)
ANOVA_Dates       <- as.data.frame(unique(Biodep_Master$Date)) # call a list to loop in
AOVdf_total       <- data.frame() # start dataframe, this will be the master output
DF_loop           <- data.frame(matrix(nrow = 1, ncol = 12)) # create dataframe to save during for loop
colnames(DF_loop) <- c('Date', 'Metric', 'model', 'DF.num' , 'DF.denom', 'F_val','P_val', 'SigDif', 'ShapiroWilk', 'ResidNorm', 'Levenes', 'HomogVar') # names for comuns in the for loop
cols_m_loop       <- as.data.frame(c('SE','OIR','FR_correct','RR_Percent','OIR','AR','AE')) %>% `colnames<-`('biodep_meas')
for (i in 1:nrow(ANOVA_Dates)) {
date_loop     <- as.character(ANOVA_Dates[i,])
data_loop     <- Biodep_Master %>%
dplyr::filter(Date %in% date_loop) %>%
dplyr::select(Date, treatment, cols_m_loop$biodep_meas)
for (m in 3:nrow(data_loop)) { # run anova and normality tests for each of these wihtin data i
# high cholorphyll model
AOVmod              <- aov(lm(data_loop[,m] ~ as.factor(data_loop$treatment)))
DF_loop$Date        <- date_loop
DF_loop$Metric      <- colnames(data_loop[m])
DF_loop$model       <- 'one-way AOV; x ~ treatment'
DF_loop$DF.num      <- summary(AOVmod)[[1]][["Df"]][1]
DF_loop$DF.denom    <- summary(AOVmod)[[1]][["Df"]][2]
DF_loop$F_val       <- summary(AOVmod)[[1]][["F value"]][1]
DF_loop$P_val       <- summary(AOVmod)[[1]][["Pr(>F)"]][1]
DF_loop$SigDif      <- if( (summary(AOVmod)[[1]][["Pr(>F)"]][1]) > 0.05) {
'NO'} else {'YES'}
DF_loop$ShapiroWilk <- shapiro.test(resid(AOVmod))[[2]]
DF_loop$ResidNorm   <- if( shapiro.test(resid(AOVmod))[[2]] > 0.05) {
'YES'} else {'NO'}
DF_loop$Levenes     <- leveneTest(AOVmod)[[3]][[1]]
DF_loop$HomogVar    <- if( leveneTest(AOVmod)[[3]][[1]] > 0.05) {
'YES'} else {'NO'}
# asign loop and cumulative output table
df          <- data.frame(DF_loop) # name dataframe for this single row
AOVdf_total <- rbind(AOVdf_total,DF_loop) #bind to a cumulative list dataframe
print(AOVdf_total) # print to monitor progress
}
}
library(car)
?leveneTest
# (1) First, run anova within date for all records (for looped!)
ANOVA_Dates       <- as.data.frame(unique(Biodep_Master$Date)) # call a list to loop in
AOVdf_total       <- data.frame() # start dataframe, this will be the master output
DF_loop           <- data.frame(matrix(nrow = 1, ncol = 12)) # create dataframe to save during for loop
colnames(DF_loop) <- c('Date', 'Metric', 'model', 'DF.num' , 'DF.denom', 'F_val','P_val', 'SigDif', 'ShapiroWilk', 'ResidNorm', 'Levenes', 'HomogVar') # names for comuns in the for loop
cols_m_loop       <- as.data.frame(c('SE','OIR','FR_correct','RR_Percent','OIR','AR','AE')) %>% `colnames<-`('biodep_meas')
for (i in 1:nrow(ANOVA_Dates)) {
date_loop     <- as.character(ANOVA_Dates[i,])
data_loop     <- Biodep_Master %>%
dplyr::filter(Date %in% date_loop) %>%
dplyr::select(Date, treatment, cols_m_loop$biodep_meas)
for (m in 3:nrow(data_loop)) { # run anova and normality tests for each of these wihtin data i
# high cholorphyll model
AOVmod              <- aov(lm(data_loop[,m] ~ as.factor(data_loop$treatment)))
DF_loop$Date        <- date_loop
DF_loop$Metric      <- colnames(data_loop[m])
DF_loop$model       <- 'one-way AOV; x ~ treatment'
DF_loop$DF.num      <- summary(AOVmod)[[1]][["Df"]][1]
DF_loop$DF.denom    <- summary(AOVmod)[[1]][["Df"]][2]
DF_loop$F_val       <- summary(AOVmod)[[1]][["F value"]][1]
DF_loop$P_val       <- summary(AOVmod)[[1]][["Pr(>F)"]][1]
DF_loop$SigDif      <- if( (summary(AOVmod)[[1]][["Pr(>F)"]][1]) > 0.05) {
'NO'} else {'YES'}
DF_loop$ShapiroWilk <- shapiro.test(resid(AOVmod))[[2]]
DF_loop$ResidNorm   <- if( shapiro.test(resid(AOVmod))[[2]] > 0.05) {
'YES'} else {'NO'}
DF_loop$Levenes     <- leveneTest(AOVmod)[[3]][[1]]
DF_loop$HomogVar    <- if( leveneTest(AOVmod)[[3]][[1]] > 0.05) {
'YES'} else {'NO'}
# asign loop and cumulative output table
df          <- data.frame(DF_loop) # name dataframe for this single row
AOVdf_total <- rbind(AOVdf_total,DF_loop) #bind to a cumulative list dataframe
print(AOVdf_total) # print to monitor progress
}
}
AOVmod              <- aov(lm(data_loop[,m] ~ as.factor(data_loop$treatment)))
DF_loop$Date        <- date_loop
AOVmod              <- aov(lm(data_loop[,m] ~ as.factor(data_loop$treatment)))
data_loop[,m]
nrow(data_loop)
View(AOVdf_total) # view all the anova tests within data
date_loop
ANOVA_Dates
ANOVA_Dates[i,]
# (1) First, run anova within date for all records (for looped!)
ANOVA_Dates       <- as.data.frame(unique(Biodep_Master$Date)) # call a list to loop in
AOVdf_total       <- data.frame() # start dataframe, this will be the master output
DF_loop           <- data.frame(matrix(nrow = 1, ncol = 12)) # create dataframe to save during for loop
colnames(DF_loop) <- c('Date', 'Metric', 'model', 'DF.num' , 'DF.denom', 'F_val','P_val', 'SigDif', 'ShapiroWilk', 'ResidNorm', 'Levenes', 'HomogVar') # names for comuns in the for loop
cols_m_loop       <- as.data.frame(c('SE','OIR','FR_correct','RR_Percent','OIR','AR','AE')) %>% `colnames<-`('biodep_meas')
for (i in 1:nrow(ANOVA_Dates)) {
date_loop     <- as.character(ANOVA_Dates[i,])
data_loop     <- Biodep_Master %>%
dplyr::filter(Date %in% date_loop) %>%
dplyr::select(Date, treatment, cols_m_loop$biodep_meas)
for (m in 3:nrow(data_loop)) { # run anova and normality tests for each of these wihtin data i
# high cholorphyll model
AOVmod              <- aov(lm(data_loop[,m] ~ as.factor(data_loop$treatment)))
DF_loop$Date        <- date_loop
DF_loop$Metric      <- colnames(data_loop[m])
DF_loop$model       <- 'one-way AOV; x ~ treatment'
DF_loop$DF.num      <- summary(AOVmod)[[1]][["Df"]][1]
DF_loop$DF.denom    <- summary(AOVmod)[[1]][["Df"]][2]
DF_loop$F_val       <- summary(AOVmod)[[1]][["F value"]][1]
DF_loop$P_val       <- summary(AOVmod)[[1]][["Pr(>F)"]][1]
DF_loop$SigDif      <- if( (summary(AOVmod)[[1]][["Pr(>F)"]][1]) > 0.05) {
'NO'} else {'YES'}
DF_loop$ShapiroWilk <- shapiro.test(resid(AOVmod))[[2]]
DF_loop$ResidNorm   <- if( shapiro.test(resid(AOVmod))[[2]] > 0.05) {
'YES'} else {'NO'}
DF_loop$Levenes     <- leveneTest(AOVmod)[[3]][[1]]
DF_loop$HomogVar    <- if( leveneTest(AOVmod)[[3]][[1]] > 0.05) {
'YES'} else {'NO'}
# asign loop and cumulative output table
df          <- data.frame(DF_loop) # name dataframe for this single row
AOVdf_total <- rbind(AOVdf_total,DF_loop) #bind to a cumulative list dataframe
print(AOVdf_total) # print to monitor progress
}
}
AOVdf_total
AOVmod              <- aov(lm(data_loop[,m] ~ as.factor(data_loop$treatment)))
DF_loop$Date        <- date_loop
date_loop
data_loop
m
data_loop
nrow(data_loop)
# (1) First, run anova within date for all records (for looped!)
ANOVA_Dates       <- as.data.frame(unique(Biodep_Master$Date)) # call a list to loop in
AOVdf_total       <- data.frame() # start dataframe, this will be the master output
DF_loop           <- data.frame(matrix(nrow = 1, ncol = 12)) # create dataframe to save during for loop
colnames(DF_loop) <- c('Date', 'Metric', 'model', 'DF.num' , 'DF.denom', 'F_val','P_val', 'SigDif', 'ShapiroWilk', 'ResidNorm', 'Levenes', 'HomogVar') # names for comuns in the for loop
cols_m_loop       <- as.data.frame(c('SE','OIR','FR_correct','RR_Percent','OIR','AR','AE')) %>% `colnames<-`('biodep_meas')
for (i in 1:nrow(ANOVA_Dates)) {
date_loop     <- as.character(ANOVA_Dates[i,])
data_loop     <- Biodep_Master %>%
dplyr::filter(Date %in% date_loop) %>%
dplyr::select(Date, treatment, cols_m_loop$biodep_meas)
for (m in 3:ncol(data_loop)) { # run anova and normality tests for each of these wihtin data i
# high cholorphyll model
AOVmod              <- aov(lm(data_loop[,m] ~ as.factor(data_loop$treatment)))
DF_loop$Date        <- date_loop
DF_loop$Metric      <- colnames(data_loop[m])
DF_loop$model       <- 'one-way AOV; x ~ treatment'
DF_loop$DF.num      <- summary(AOVmod)[[1]][["Df"]][1]
DF_loop$DF.denom    <- summary(AOVmod)[[1]][["Df"]][2]
DF_loop$F_val       <- summary(AOVmod)[[1]][["F value"]][1]
DF_loop$P_val       <- summary(AOVmod)[[1]][["Pr(>F)"]][1]
DF_loop$SigDif      <- if( (summary(AOVmod)[[1]][["Pr(>F)"]][1]) > 0.05) {
'NO'} else {'YES'}
DF_loop$ShapiroWilk <- shapiro.test(resid(AOVmod))[[2]]
DF_loop$ResidNorm   <- if( shapiro.test(resid(AOVmod))[[2]] > 0.05) {
'YES'} else {'NO'}
DF_loop$Levenes     <- leveneTest(AOVmod)[[3]][[1]]
DF_loop$HomogVar    <- if( leveneTest(AOVmod)[[3]][[1]] > 0.05) {
'YES'} else {'NO'}
# asign loop and cumulative output table
df          <- data.frame(DF_loop) # name dataframe for this single row
AOVdf_total <- rbind(AOVdf_total,DF_loop) #bind to a cumulative list dataframe
print(AOVdf_total) # print to monitor progress
}
}
View(AOVdf_total) # view all the anova tests within data
# WRITE CSV OF THE MASTER FILE
write.csv(AOVdf_total, "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Biodeposition/Biodeposition_ANOVA_table.csv")
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Biodeposition/Biodeposition_Boxplots.pdf"), width = 10, height= 8)
ggarrange(SE_boxplot,RR_boxplot, OIR_boxplot, FR_boxplot, AE_boxplot, AR_boxplot)
dev.off()
