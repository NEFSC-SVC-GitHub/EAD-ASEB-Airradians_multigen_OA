dplyr::mutate(p = ORR_correct / RR_correct ) %>%
dplyr::mutate(f =  case_when(
treatment == 7.5 ~ WaterSamples_dat_AVE$Perc_ORG_1[1] / 100,
treatment == 8.0 ~ WaterSamples_dat_AVE$Perc_ORG_1[2] / 100
)) %>%
dplyr::mutate(SE = 1 - (p / f)) %>%
dplyr::mutate(IFR = FR / IRR_correct) %>%
dplyr::mutate(CR_correct = case_when(
treatment == 7.5 ~ IFR /  WaterSamples_dat_AVE$PIM_mgL_1[1],
treatment == 8.0 ~ IFR /  WaterSamples_dat_AVE$PIM_mgL_1[2]
)) %>%
dplyr::mutate(FR_correct = case_when(
treatment == 7.5 ~ CR_correct * WaterSamples_dat_AVE$TPM_mgL_1[1],
treatment == 8.0 ~ CR_correct *  WaterSamples_dat_AVE$TPM_mgL_1[2]
)) %>%
dplyr::mutate(RR_Percent = (RR_correct/FR_correct)*100) %>%
dplyr::mutate(TIR = FR_correct - RR_correct) %>%
dplyr::mutate(OFR = case_when(
treatment == 7.5 ~ CR_correct * WaterSamples_dat_AVE$POM_mgL_1[1],
treatment == 8.0 ~ CR_correct *  WaterSamples_dat_AVE$POM_mgL_1[2]
)) %>%
dplyr::mutate(OIR = OFR - ORR_correct) %>%
dplyr::mutate(i = OIR / TIR) %>%
dplyr::mutate(AR = OIR - OER_correct) %>%
dplyr::mutate(AE = AR / OIR)
View(biodep3)
biodep3 <- BioSamples_merged %>%
# IER, OER, IRR, ORR corected for species coefficient and animal dry weight
dplyr::mutate(IER_correct = IER_mghr*(0.1/animal_dry_weight_mg)^sp_COEF) %>%
dplyr::mutate(IRR_correct = IRR_mghr*(0.1/animal_dry_weight_mg)^sp_COEF) %>%
dplyr::mutate(OER_correct = OER_mghr*(0.1/animal_dry_weight_mg)^sp_COEF) %>%
dplyr::mutate(ORR_correct = ORR_mghr*(0.1/animal_dry_weight_mg)^sp_COEF) %>%
# Clearance rate
dplyr::mutate(CR = case_when(
treatment == 7.5 ~ (IRR_mghr + IER_mghr) / WaterSamples_dat_AVE$PIM_mgL_1[1],
treatment == 8.0 ~ (IRR_mghr + IER_mghr) / WaterSamples_dat_AVE$PIM_mgL_1[2]
)) %>%
# Filtration rate
dplyr::mutate(FR = case_when(
treatment == 7.5 ~ CR * WaterSamples_dat_AVE$TPM_mgL_1[1],
treatment == 8.0 ~ CR * WaterSamples_dat_AVE$TPM_mgL_1[2]
)) %>%
dplyr::mutate(RR_correct = ORR_correct + IRR_correct) %>%
dplyr::mutate(p = ORR_correct / RR_correct ) %>%
dplyr::mutate(f =  case_when(
treatment == 7.5 ~ WaterSamples_dat_AVE$Perc_ORG_1[1] / 100,
treatment == 8.0 ~ WaterSamples_dat_AVE$Perc_ORG_1[2] / 100
)) %>%
dplyr::mutate(SE = 1 - (p / f)) %>%
dplyr::mutate(IFR = IER_correct + IRR_correct) %>%
dplyr::mutate(CR_correct = case_when(
treatment == 7.5 ~ IFR /  WaterSamples_dat_AVE$PIM_mgL_1[1],
treatment == 8.0 ~ IFR /  WaterSamples_dat_AVE$PIM_mgL_1[2]
)) %>%
dplyr::mutate(FR_correct = case_when(
treatment == 7.5 ~ CR_correct * WaterSamples_dat_AVE$TPM_mgL_1[1],
treatment == 8.0 ~ CR_correct *  WaterSamples_dat_AVE$TPM_mgL_1[2]
)) %>%
dplyr::mutate(RR_Percent = (RR_correct/FR_correct)*100) %>%
dplyr::mutate(TIR = FR_correct -
RR_correct) %>%
dplyr::mutate(OFR = case_when(
treatment == 7.5 ~ CR_correct * WaterSamples_dat_AVE$POM_mgL_1[1],
treatment == 8.0 ~ CR_correct *  WaterSamples_dat_AVE$POM_mgL_1[2]
)) %>%
dplyr::mutate(OIR = OFR - ORR_correct) %>%
dplyr::mutate(i = OIR / TIR) %>%
dplyr::mutate(AR = OIR - OER_correct) %>%
dplyr::mutate(AE = AR / OIR)
View(biodep3)
WaterSamples_dat_AVE$POM_mgL_1[1]
WaterSamples_dat_AVE
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
# slice(-1) # removes the first timestamp by group
dplyr::select(-c('sample_type', 'water_sample_time'))
# blanks - as 'water_Input' - call to correct in biodep2 below...
WaterSamples_dat     <- biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
# slice(-1) # removes the first timestamp by group
dplyr::select(-c('sample_type', 'water_sample_time')) %>%  # omit to average across all group_by columns
dplyr::slice(-1) # removes the first timestamp by group
WaterSamples_dat
biodep2
# blanks - as 'water_Input' - call to correct in biodep2 below...
WaterSamples_dat     <- biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Blank') %>%
dplyr::group_by(Date,treatment) %>%
# slice(-1) # removes the first timestamp by group
dplyr::select(-c('sample_type', 'water_sample_time')) %>%  # omit to average across all group_by columns
dplyr::slice(-1) # removes the first timestamp by group
# mean for these blanks here...
WaterSamples_dat_AVE <- WaterSamples_dat %>%
dplyr::group_by(Date,treatment) %>%
dplyr::summarise(across(everything(), list(mean)))
WaterSamples_dat_AVE
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Blank') %>%
dplyr::group_by(Date,treatment) %>%
# slice(-1) # removes the first timestamp by group
dplyr::select(-c('sample_type', 'water_sample_time'))
# mean for these blanks here...
WaterSamples_dat_AVE <- WaterSamples_dat %>%
dplyr::group_by(Date,treatment) %>%
dplyr::summarise(across(everything(), list(mean)))
WaterSamples_dat_AVE
WaterSamples_dat
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Blank') %>%
dplyr::group_by(Date,treatment)
WaterSamples_dat     <- biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Blank') %>%
dplyr::group_by(Date,treatment)
# mean for these blanks here...
WaterSamples_dat_AVE <- WaterSamples_dat %>%
dplyr::group_by(Date,treatment) %>%
dplyr::summarise(across(everything(), list(mean)))
WaterSamples_dat
WaterSamples_dat %>%
dplyr::group_by(Date,treatment) %>%
dplyr::summarise(across(everything(), list(mean)))
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Blank') %>%
dplyr::group_by(Date,treatment) %>%
# slice(-1) # removes the first timestamp by group
dplyr::select(-c('sample_type', 'water_sample_time'))
WaterSamples_dat %>%
dplyr::group_by(Date,treatment)
WaterSamples_dat %>%
dplyr::group_by(Date,treatment) %>%
dplyr::muatate(TPM_mgL = as.numeric(TPM_mgL))
WaterSamples_dat %>%
dplyr::group_by(Date,treatment) %>%
dplyr::mutate(TPM_mgL = as.numeric(TPM_mgL))
# mean for these blanks here...
WaterSamples_dat_AVE <- WaterSamples_dat %>%
dplyr::group_by(Date,treatment) %>%
dplyr::mutate(TPM_mgL = as.numeric(TPM_mgL)) %>%
dplyr::summarise(across(everything(), list(mean)))
WaterSamples_dat_AVE
WaterSamples_dat_AVE
# blanks - as 'water_Input' - call to correct in biodep2 below...
WaterSamples_dat     <- biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Blank') %>%
dplyr::group_by(Date,treatment) %>%
# slice(-1) # removes the first timestamp by group
dplyr::select(-c('sample_type', 'water_sample_time')) # %>%  # omit to average across all group_by columns
# blanks - as 'water_Input' - call to correct in biodep2 below...
WaterSamples_dat     <- biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Blank') %>%
dplyr::group_by(Date,treatment) %>%
# slice(-1) # removes the first timestamp by group
# mean for these blanks here...
WaterSamples_dat_AVE <- WaterSamples_dat %>%
dplyr::select(-c('sample_type', 'water_sample_time')) # %>%  # omit to average across all group_by columns
# blanks - as 'water_Input' - call to correct in biodep2 below...
WaterSamples_dat     <- biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Blank') %>%
dplyr::group_by(Date,treatment) %>%
# slice(-1) # removes the first timestamp by group
# mean for these blanks here...
WaterSamples_dat_AVE <- WaterSamples_dat %>%
dplyr::select(-c('sample_type', 'water_sample_time')) %>% # %>%  # omit to average across all group_by columns
dplyr::group_by(Date,treatment) %>%
dplyr::mutate(TPM_mgL = as.numeric(TPM_mgL)) %>%
dplyr::summarise(across(everything(), list(mean)))
# blanks - as 'water_Input' - call to correct in biodep2 below...
WaterSamples_dat     <- biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Blank') %>%
dplyr::group_by(Date,treatment) %>%
# slice(-1) # removes the first timestamp by group
# mean for these blanks here...
WaterSamples_dat_AVE <- WaterSamples_dat %>%
dplyr::select(-c('sample_type', 'water_sample_time')) %>% # %>%  # omit to average across all group_by columns
dplyr::group_by(Date,treatment) %>%
dplyr::mutate(TPM_mgL = as.numeric(TPM_mgL)) %>%
dplyr::summarise(across(everything(), list(mean)))
# blanks - as 'water_Input' - call to correct in biodep2 below...
WaterSamples_dat     <- biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Blank') %>%
dplyr::group_by(Date,treatment)
# slice(-1) # removes the first timestamp by group
# mean for these blanks here...
WaterSamples_dat_AVE <- WaterSamples_dat %>%
dplyr::select(-c('sample_type', 'water_sample_time')) %>% # %>%  # omit to average across all group_by columns
dplyr::group_by(Date,treatment) %>%
dplyr::mutate(TPM_mgL = as.numeric(TPM_mgL)) %>%
dplyr::summarise(across(everything(), list(mean)))
WaterSamples_dat_AVE
BioSamples <- biodep2 %>% # now to calculate more in depth metrics - requiring contingency statements to the blank water sample values for PIM, POM, etc..
dplyr::select(!c('water_sample_time', 'vol_filtered_L')) %>%
dplyr::filter(sample_type %in% c('feces', 'pseudofeces'))
BioSamples_feces   <- BioSamples %>%
dplyr::filter(sample_type %in% 'feces') %>%  # create data frame with just feces (Ejection rate constituents!)
dplyr::select(c(Date, treatment, animal_number, tank_ID, # select  all OVERLAPPING identifiers to properly merge
ER_mghr, OER_mghr, IER_mghr)) # select all unique values (Ejection rate constituents) to add
BioSamples_merged  <- merge( (BioSamples %>%  filter(!sample_type %in% 'feces')%>% dplyr::select(!c(sample_type, ER_mghr, OER_mghr, IER_mghr))),
BioSamples_feces, by = c('Date', 'treatment', 'animal_number', 'tank_ID'))
# SPECIES STANDARDIZATION COEFFICIENT
sp_COEF <- 0.62
biodep3 <- BioSamples_merged %>%
# IER, OER, IRR, ORR corected for species coefficient and animal dry weight
dplyr::mutate(IER_correct = IER_mghr*(0.1/animal_dry_weight_mg)^sp_COEF) %>%
dplyr::mutate(IRR_correct = IRR_mghr*(0.1/animal_dry_weight_mg)^sp_COEF) %>%
dplyr::mutate(OER_correct = OER_mghr*(0.1/animal_dry_weight_mg)^sp_COEF) %>%
dplyr::mutate(ORR_correct = ORR_mghr*(0.1/animal_dry_weight_mg)^sp_COEF) %>%
# Clearance rate
dplyr::mutate(CR = case_when(
treatment == 7.5 ~ (IRR_mghr + IER_mghr) / WaterSamples_dat_AVE$PIM_mgL_1[1],
treatment == 8.0 ~ (IRR_mghr + IER_mghr) / WaterSamples_dat_AVE$PIM_mgL_1[2]
)) %>%
# Filtration rate
dplyr::mutate(FR = case_when(
treatment == 7.5 ~ CR * WaterSamples_dat_AVE$TPM_mgL_1[1],
treatment == 8.0 ~ CR * WaterSamples_dat_AVE$TPM_mgL_1[2]
)) %>%
dplyr::mutate(RR_correct = ORR_correct + IRR_correct) %>%
dplyr::mutate(p = ORR_correct / RR_correct ) %>%
dplyr::mutate(f =  case_when(
treatment == 7.5 ~ WaterSamples_dat_AVE$Perc_ORG_1[1] / 100,
treatment == 8.0 ~ WaterSamples_dat_AVE$Perc_ORG_1[2] / 100
)) %>%
dplyr::mutate(SE = 1 - (p / f)) %>%
dplyr::mutate(IFR = IER_correct + IRR_correct) %>%
dplyr::mutate(CR_correct = case_when(
treatment == 7.5 ~ IFR /  WaterSamples_dat_AVE$PIM_mgL_1[1],
treatment == 8.0 ~ IFR /  WaterSamples_dat_AVE$PIM_mgL_1[2]
)) %>%
dplyr::mutate(FR_correct = case_when(
treatment == 7.5 ~ CR_correct * WaterSamples_dat_AVE$TPM_mgL_1[1],
treatment == 8.0 ~ CR_correct *  WaterSamples_dat_AVE$TPM_mgL_1[2]
)) %>%
dplyr::mutate(RR_Percent = (RR_correct/FR_correct)*100) %>%
dplyr::mutate(TIR = FR_correct -
RR_correct) %>%
dplyr::mutate(OFR = case_when(
treatment == 7.5 ~ CR_correct * WaterSamples_dat_AVE$POM_mgL_1[1],
treatment == 8.0 ~ CR_correct *  WaterSamples_dat_AVE$POM_mgL_1[2]
)) %>%
dplyr::mutate(OIR = OFR - ORR_correct) %>%
dplyr::mutate(i = OIR / TIR) %>%
dplyr::mutate(AR = OIR - OER_correct) %>%
dplyr::mutate(AE = AR / OIR)
View(biodep3)
WaterSamples_dat_AVE
Biodep_master_0302 <- biodep3 %>% filter(Date %in% '20220302') # call data
Biodep_master_0302
BioDep_Master <- BioSamples_merged %>%
# IER, OER, IRR, ORR corected for species coefficient and animal dry weight
dplyr::mutate(IER_correct = IER_mghr*(0.1/animal_dry_weight_mg)^sp_COEF) %>%
dplyr::mutate(IRR_correct = IRR_mghr*(0.1/animal_dry_weight_mg)^sp_COEF) %>%
dplyr::mutate(OER_correct = OER_mghr*(0.1/animal_dry_weight_mg)^sp_COEF) %>%
dplyr::mutate(ORR_correct = ORR_mghr*(0.1/animal_dry_weight_mg)^sp_COEF) %>%
# Clearance rate
dplyr::mutate(CR = case_when(
treatment == 7.5 ~ (IRR_mghr + IER_mghr) / WaterSamples_dat_AVE$PIM_mgL_1[1],
treatment == 8.0 ~ (IRR_mghr + IER_mghr) / WaterSamples_dat_AVE$PIM_mgL_1[2]
)) %>%
# Filtration rate
dplyr::mutate(FR = case_when(
treatment == 7.5 ~ CR * WaterSamples_dat_AVE$TPM_mgL_1[1],
treatment == 8.0 ~ CR * WaterSamples_dat_AVE$TPM_mgL_1[2]
)) %>%
dplyr::mutate(RR_correct = ORR_correct + IRR_correct) %>%
dplyr::mutate(p = ORR_correct / RR_correct ) %>%
dplyr::mutate(f =  case_when(
treatment == 7.5 ~ WaterSamples_dat_AVE$Perc_ORG_1[1] / 100,
treatment == 8.0 ~ WaterSamples_dat_AVE$Perc_ORG_1[2] / 100
)) %>%
dplyr::mutate(SE = 1 - (p / f)) %>%
dplyr::mutate(IFR = IER_correct + IRR_correct) %>%
dplyr::mutate(CR_correct = case_when(
treatment == 7.5 ~ IFR /  WaterSamples_dat_AVE$PIM_mgL_1[1],
treatment == 8.0 ~ IFR /  WaterSamples_dat_AVE$PIM_mgL_1[2]
)) %>%
dplyr::mutate(FR_correct = case_when(
treatment == 7.5 ~ CR_correct * WaterSamples_dat_AVE$TPM_mgL_1[1],
treatment == 8.0 ~ CR_correct *  WaterSamples_dat_AVE$TPM_mgL_1[2]
)) %>%
dplyr::mutate(RR_Percent = (RR_correct/FR_correct)*100) %>%
dplyr::mutate(TIR = FR_correct -
RR_correct) %>%
dplyr::mutate(OFR = case_when(
treatment == 7.5 ~ CR_correct * WaterSamples_dat_AVE$POM_mgL_1[1],
treatment == 8.0 ~ CR_correct *  WaterSamples_dat_AVE$POM_mgL_1[2]
)) %>%
dplyr::mutate(OIR = OFR - ORR_correct) %>%
dplyr::mutate(i = OIR / TIR) %>%
dplyr::mutate(AR = OIR - OER_correct) %>%
dplyr::mutate(AE = AR / OIR) %>%
dplyr::mutate(pCO2 = case_when(treatment == 8.0 ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
Biodep_Master <- BioSamples_merged %>%
# IER, OER, IRR, ORR corected for species coefficient and animal dry weight
dplyr::mutate(IER_correct = IER_mghr*(0.1/animal_dry_weight_mg)^sp_COEF) %>%
dplyr::mutate(IRR_correct = IRR_mghr*(0.1/animal_dry_weight_mg)^sp_COEF) %>%
dplyr::mutate(OER_correct = OER_mghr*(0.1/animal_dry_weight_mg)^sp_COEF) %>%
dplyr::mutate(ORR_correct = ORR_mghr*(0.1/animal_dry_weight_mg)^sp_COEF) %>%
# Clearance rate
dplyr::mutate(CR = case_when(
treatment == 7.5 ~ (IRR_mghr + IER_mghr) / WaterSamples_dat_AVE$PIM_mgL_1[1],
treatment == 8.0 ~ (IRR_mghr + IER_mghr) / WaterSamples_dat_AVE$PIM_mgL_1[2]
)) %>%
# Filtration rate
dplyr::mutate(FR = case_when(
treatment == 7.5 ~ CR * WaterSamples_dat_AVE$TPM_mgL_1[1],
treatment == 8.0 ~ CR * WaterSamples_dat_AVE$TPM_mgL_1[2]
)) %>%
dplyr::mutate(RR_correct = ORR_correct + IRR_correct) %>%
dplyr::mutate(p = ORR_correct / RR_correct ) %>%
dplyr::mutate(f =  case_when(
treatment == 7.5 ~ WaterSamples_dat_AVE$Perc_ORG_1[1] / 100,
treatment == 8.0 ~ WaterSamples_dat_AVE$Perc_ORG_1[2] / 100
)) %>%
dplyr::mutate(SE = 1 - (p / f)) %>%
dplyr::mutate(IFR = IER_correct + IRR_correct) %>%
dplyr::mutate(CR_correct = case_when(
treatment == 7.5 ~ IFR /  WaterSamples_dat_AVE$PIM_mgL_1[1],
treatment == 8.0 ~ IFR /  WaterSamples_dat_AVE$PIM_mgL_1[2]
)) %>%
dplyr::mutate(FR_correct = case_when(
treatment == 7.5 ~ CR_correct * WaterSamples_dat_AVE$TPM_mgL_1[1],
treatment == 8.0 ~ CR_correct *  WaterSamples_dat_AVE$TPM_mgL_1[2]
)) %>%
dplyr::mutate(RR_Percent = (RR_correct/FR_correct)*100) %>%
dplyr::mutate(TIR = FR_correct -
RR_correct) %>%
dplyr::mutate(OFR = case_when(
treatment == 7.5 ~ CR_correct * WaterSamples_dat_AVE$POM_mgL_1[1],
treatment == 8.0 ~ CR_correct *  WaterSamples_dat_AVE$POM_mgL_1[2]
)) %>%
dplyr::mutate(OIR = OFR - ORR_correct) %>%
dplyr::mutate(i = OIR / TIR) %>%
dplyr::mutate(AR = OIR - OER_correct) %>%
dplyr::mutate(AE = AR / OIR) %>%
dplyr::mutate(pCO2 = case_when(treatment == 8.0 ~ "500 μatm", treatment == 7.5 ~ "800 μatm"))
Biodep_Master
Biodep_master_0302 <- Biodep_Master %>% filter(Date %in% '20220302') # call data
# LME mod -  data
LMEmod_0202           <-lme(AE ~ pCO2, random=~1|tank_ID, data=Biodep_master_0302) # cahmber tank = = random factor (ii.e. 8_C, 7.5_C, 8_A, etc.)
pander(anova(LMEmod_0202), style='rmarkdown') # anova table of lmer
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  14   |  87.76  | 2.084e-07 |
# |    **pCO2**     |   1   |  14   | 0.1647  |   0.691   |
shapiro.test(resid(LMEmod_0302)) # 0.183 -  normal
# LME mod -  data
LMEmod_0302           <-lme(AE ~ pCO2, random=~1|tank_ID, data=Biodep_master_0302) # cahmber tank = = random factor (ii.e. 8_C, 7.5_C, 8_A, etc.)
pander(anova(LMEmod_0302), style='rmarkdown') # anova table of lmer
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  14   |  87.76  | 2.084e-07 |
# |    **pCO2**     |   1   |  14   | 0.1647  |   0.691   |
shapiro.test(resid(LMEmod_0302)) # 0.183 -  normal
qqnorm(resid(LMEmod_0302)) #
hist(resid(LMEmod_0302)) #
Biodep_Master_boxplot <- Biodep_Master %>%
ggplot(aes(pCO2 , AE , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white", "grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=10)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Assimilation Efficiency, F1 Scallops") +
facet_wrap(~Date)
Biodep_Master_boxplot
Biodep_master_0302 <- Biodep_Master %>% filter(Date %in% '20220302') %>% filter(!AE < 0) # call data
# LME mod -  data
LMEmod_0302           <-lme(AE ~ pCO2, random=~1|tank_ID, data=Biodep_master_0302) # cahmber tank = = random factor (ii.e. 8_C, 7.5_C, 8_A, etc.)
pander(anova(LMEmod_0302), style='rmarkdown') # anova table of lmer
shapiro.test(resid(LMEmod_0302)) # 0.05878 -  normal
Biodep_Master_boxplot <- Biodep_Master %>%
ggplot(aes(pCO2 , AE , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white", "grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=10)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Assimilation Efficiency, F1 Scallops") +
facet_wrap(~Date)
Biodep_Master_boxplot
Biodep_Master_boxplot <- Biodep_Master%>% filter(!AE < 0)
Biodep_Master_boxplot <- Biodep_Master%>% filter(!AE < 0) %>%
ggplot(aes(pCO2 , AE , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white", "grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=10)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Assimilation Efficiency, F1 Scallops") +
facet_wrap(~Date)
Biodep_Master_boxplot
AR_boxplot <- Biodep_Master%>% filter(!AE < 0) %>%
ggplot(aes(pCO2 , AR , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white", "grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=10)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Assimilation Rate, F1 Scallops") +
facet_wrap(~Date)
AR_boxplot
OIR_boxplot <- Biodep_Master%>% filter(!AE < 0) %>%
ggplot(aes(pCO2 , OIR , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white", "grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=10)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Organic Ingestion Rate, F1 Scallops") +
facet_wrap(~Date)
OIR_boxplot
FR_boxplot <- Biodep_Master%>% filter(!AE < 0) %>%
ggplot(aes(pCO2 , FR , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white", "grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=10)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Filtration Rate, F1 Scallops") +
facet_wrap(~Date)
FR_boxplot
ggarrange(AE_boxplot, AR_boxplot, OIR_boxplot, FR_boxplot)
AE_boxplot <- Biodep_Master%>% filter(!AE < 0) %>%
ggplot(aes(pCO2 , AE , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white", "grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=10)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Assimilation Efficiency, F1 Scallops") +
facet_wrap(~Date)
AE_boxplot
AR_boxplot <- Biodep_Master%>% filter(!AE < 0) %>%
ggplot(aes(pCO2 , AR , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white", "grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=10)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Assimilation Rate, F1 Scallops") +
facet_wrap(~Date)
AR_boxplot
OIR_boxplot <- Biodep_Master%>% filter(!AE < 0) %>%
ggplot(aes(pCO2 , OIR , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white", "grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=10)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Organic Ingestion Rate, F1 Scallops") +
facet_wrap(~Date)
OIR_boxplot
FR_boxplot <- Biodep_Master%>% filter(!AE < 0) %>%
ggplot(aes(pCO2 , FR , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white", "grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=10)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Filtration Rate, F1 Scallops") +
facet_wrap(~Date)
FR_boxplot
ggarrange(AE_boxplot, AR_boxplot, OIR_boxplot, FR_boxplot)
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Biodeposition/Master_Biodep_Boxplots.pdf"), width = 10, height= 8)
ggarrange(AE_boxplot, AR_boxplot, OIR_boxplot, FR_boxplot)
dev.off()
# WRITE CSV OF THE MASTER FILE
write.csv(Biodep_Master, "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Biodeposition/Biodeposition_master.csv")
