treatment == 8.0 ~ IFR /  blanks_loop$PIM_mgL_1[2]  # changed from waterinput_loop to blanks_loop on 12/19/22
)) %>%
# FR  == Filtration Rate: CR * TPM of the water
dplyr::mutate(FR_correct = case_when(
treatment == 7.5 ~ CR_correct * blanks_loop$TPM_mgL_1[1], # changed from waterinput_loop to blanks_loop on 12/19/22
treatment == 8.0 ~ CR_correct *  blanks_loop$TPM_mgL_1[2] # changed from waterinput_loop to blanks_loop on 12/19/22
)) %>%
# %RR == RR/FR (amount rejected/total amount filtered)
dplyr::mutate(RR_Percent = (RR_correct/FR_correct)*100) %>%
# TIR == Total Ingestion Rate: FR - RR
dplyr::mutate(TIR = FR_correct -
RR_correct) %>%
# OFR == Organic FIltration Rate: CR * POM of the water
dplyr::mutate(OFR = case_when(
treatment == 7.5 ~ CR_correct * blanks_loop$POM_mgL_1[1], # changed from waterinput_loop to blanks_loop on 12/19/22
treatment == 8.0 ~ CR_correct *  blanks_loop$POM_mgL_1[2] # changed from waterinput_loop to blanks_loop on 12/19/22
)) %>%
# ORI == Organic INgestion Rate: OFR-ORR
dplyr::mutate(OIR = OFR - ORR_correct) %>%
# i   == Fraction of Organic Matter ingested: OIR/TIR (i.e. fraction of ingested material that was organic)
dplyr::mutate(i = OIR / TIR) %>%
# AR  == Assimilation Rate: OIR-OER (rate of POM filtration - rate of POM rejection - rate of POM egestion)
dplyr::mutate(AR = OIR - OER_correct) %>%
# AE  == Assimilation Efficiency: AR/OIR
dplyr::mutate(AE = AR / OIR) %>%
# add column for uatm pCO2 treatment based on pH groups
dplyr::mutate(pCO2 = case_when(treatment == 8.0 ~ "500 μatm", treatment == 7.5 ~ "800 μatm"))
df                <- data.frame(data_loop) # name dataframe for this single row
Biodep_Master_F1s <- rbind(Biodep_Master_F1s,df) #bind to a cumulative list dataframe
print(Biodep_Master_F1s) # print to monitor progress
}
View(Biodep_Master_F1s) # look at your master file!
Biodep_Master_F1s_bad_data <- Biodep_Master_F1s %>% dplyr::filter(AE > 1 | AE < -1)
nrow(Biodep_Master_F1s_bad_data) # no data considered to be the result of error!
# WRITE CSV OF THE MASTER FILE
write.csv(Biodep_Master_F1s, "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Biodeposition/Biodeposition_master_F1.csv")
Biodeposition    <- read.csv("Output/Biodeposition/Biodeposition_master_F1.csv", header = T)
Biodeposition
unique(Biodeposition$Date)
# biodep
Biodeposition_adj    <- Biodeposition %>%
dplyr::select(-c(X, tank_ID.y)) %>%
dplyr::rename(tank_ID = tank_ID.x) %>%
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Replicate = gsub("[^a-zA-Z]", "", tank_ID)) %>% # new replicate column - reflects RR dataset
dplyr::rename(Dry_Tissue_weight = animal_dry_weight_g) %>% # change name to match RR
dplyr::rename(Length_mm = animal_length_mm) %>% # change name to match RR
dplyr::rename(pH = treatment) %>% # rename to match
dplyr::select(-c(tank_ID, animal_number, initial_filter_weight_mg, dry_filter_weight_mg,ash_filter_weight_mg, inclubation_time_hours)) %>%
dplyr::mutate(Date = case_when(Date == "20220302" ~ '3/2/2022',
Date == "20220923" ~ '9/23/2022',
Date == "20221027" ~ '10/27/2022')) %>%
dplyr::select(-Length_mm) # lenngth is the exact same as the resp and Excretion data except diff sig figs and some missing
nrow(Biodeposition_adj) # nrow 61
RespirationRates
# RR
unique(RespirationRates$Date)
RespirationRates_adj <- RespirationRates %>%
dplyr::filter(Date %in% c('3/1/2022','9/22/2022', '10/26/2022')) %>% # , '3/27/2023'
dplyr::mutate(Replicate =
gsub("[^a-zA-Z]", "", Chamber_tank)) %>% # new replicate column - reflects RR dataset
dplyr::select(c(Date,
Age,
pH,
pCO2,
Replicate,
Length_mm,
Dry_Tissue_weight,
resp_umol_hr_bFactorNormTDW.1g)) %>%
dplyr::rename(RR_resp_umol_hr_bfactorTDW =
resp_umol_hr_bFactorNormTDW.1g)
RespirationRates_adj$Dry_Tissue_weight <- as.numeric(RespirationRates_adj$Dry_Tissue_weight)
nrow(RespirationRates_adj) # 63
# ER
# note - we will bfctor and mean corret for TDW)
bTDW    <- 1.07 # FR_bfactor script using ALL F1 and F1 data!
unique(ExcretionRates$Date)
RespirationRates_adj <- RespirationRates %>%
dplyr::filter(Date %in% c('3/1/2022','9/22/2022', '10/26/2022')) %>% # , '3/27/2023'
dplyr::mutate(Date = case_when(Date == "3/1/2022" ~ '3/2/2022',
Date == "9/22/2022" ~ '9/23/2022',
Date == "10/26/2022" ~ '10/27/2022')) %>%
dplyr::mutate(Replicate = gsub("[^a-zA-Z]", "", Chamber_tank)) %>% # new replicate column - reflects RR dataset
dplyr::select(c(Date,
Age,
pH,
pCO2,
Replicate,
Length_mm,
Dry_Tissue_weight,
resp_umol_hr_bFactorNormTDW.1g)) %>%
dplyr::rename(RR_resp_umol_hr_bfactorTDW =
resp_umol_hr_bFactorNormTDW.1g)
RespirationRates_adj$Dry_Tissue_weight <- as.numeric(RespirationRates_adj$Dry_Tissue_weight)
nrow(RespirationRates_adj) # 45
ExcretionRates_adj  <- ExcretionRates  %>%
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Date = case_when(Date == "20220301" ~ '3/2/2022',
Date == "20220922" ~ '9/23/2022',
Date == "20221026" ~ '10/27/2022')) %>%
dplyr::mutate(ExcretionRate_mg_hr = ExcretionRate_ug_mL_hr/1000) %>%
dplyr::rename(ExcretionRate_umol_hr = ExcretionRate_umol_mL_hr) %>%
dplyr::mutate(ExcretionRate_mg_hr_bFactorNormTDW =
(ExcretionRate_mg_hr)*((1/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - mg
dplyr::mutate(ExcretionRate_umol_hr_bFactorNormTDW =
(ExcretionRate_umol_hr)*((1/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - umol
dplyr::mutate(Length_mm = as.numeric(Length_um / 1000)) %>% # Length_mm matched biodep and RR
dplyr::select(c(Date,
pH,
Replicate,
Chamber_tank,
Length_um,
Dry_Tissue_weight,
ExcretionRate_mg_hr_bFactorNormTDW,
ExcretionRate_umol_hr_bFactorNormTDW))
# sanity check before we merge
nrow(ExcretionRates_adj)          == (nrow(RespirationRates_adj)  + nrow(Biodeposition_adj)) / 2 # FLASE becuase there were 2 outliers removed for biodep
unique(ExcretionRates_adj$Date)   == unique(RespirationRates_adj$Date) # should be TRUE
unique(RespirationRates_adj$Date) ==  unique(Biodeposition_adj$Date)  # should be TRUE
unique(ExcretionRates_adj$Date)
unique(ExcretionRates_adj$Date)
ExcretionRates_adj
unique(ExcretionRates$Date)
ExcretionRates_adj  <- ExcretionRates  %>%
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Date = case_when(Date == 20220301 ~ '3/2/2022',
Date == 20220922 ~ '9/23/2022',
Date == 20221026 ~ '10/27/2022')) %>%
dplyr::mutate(ExcretionRate_mg_hr = ExcretionRate_ug_mL_hr/1000) %>%
dplyr::rename(ExcretionRate_umol_hr = ExcretionRate_umol_mL_hr) %>%
dplyr::mutate(ExcretionRate_mg_hr_bFactorNormTDW =
(ExcretionRate_mg_hr)*((1/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - mg
dplyr::mutate(ExcretionRate_umol_hr_bFactorNormTDW =
(ExcretionRate_umol_hr)*((1/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - umol
dplyr::mutate(Length_mm = as.numeric(Length_um / 1000)) %>% # Length_mm matched biodep and RR
dplyr::select(c(Date,
pH,
Replicate,
Chamber_tank,
Length_um,
Dry_Tissue_weight,
ExcretionRate_mg_hr_bFactorNormTDW,
ExcretionRate_umol_hr_bFactorNormTDW))
unique(ExcretionRates_adj$Date)   == unique(RespirationRates_adj$Date) # should be TRUE
unique(ExcretionRates_adj$Date)
unique(ExcretionRates_adj$Date)
ExcretionRates  %>%
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Date = case_when(Date == 20220301 ~ '3/2/2022',
Date == 20220922 ~ '9/23/2022',
Date == 20221026 ~ '10/27/2022'))
unique(ExcretionRates$Date)
Biodeposition_adj
Biodeposition
# biodep
Biodeposition_adj    <- Biodeposition %>%
dplyr::select(-c(X, tank_ID.y)) %>%
dplyr::rename(tank_ID = tank_ID.x) %>%
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Replicate = gsub("[^a-zA-Z]", "", tank_ID)) %>% # new replicate column - reflects RR dataset
dplyr::rename(Dry_Tissue_weight = animal_dry_weight_g) %>% # change name to match RR
dplyr::rename(Length_mm = animal_length_mm) %>% # change name to match RR
dplyr::rename(pH = treatment) %>% # rename to match
dplyr::select(-c(tank_ID, animal_number, initial_filter_weight_mg, dry_filter_weight_mg,ash_filter_weight_mg, inclubation_time_hours)) %>%
dplyr::mutate(Date = case_when(Date = 20220302 ~ '3/2/2022',
Date = 20220923 ~ '9/23/2022',
Date = 20221027 ~ '10/27/2022')) %>%
dplyr::select(-Length_mm) # lenngth is the exact same as the resp and Excretion data except diff sig figs and some missing
# biodep
Biodeposition_adj    <- Biodeposition %>%
dplyr::select(-c(X, tank_ID.y)) %>%
dplyr::rename(tank_ID = tank_ID.x) %>%
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Replicate = gsub("[^a-zA-Z]", "", tank_ID)) %>% # new replicate column - reflects RR dataset
dplyr::rename(Dry_Tissue_weight = animal_dry_weight_g) %>% # change name to match RR
dplyr::rename(Length_mm = animal_length_mm) %>% # change name to match RR
dplyr::rename(pH = treatment) %>% # rename to match
dplyr::select(-c(tank_ID, animal_number, initial_filter_weight_mg, dry_filter_weight_mg,ash_filter_weight_mg, inclubation_time_hours)) %>%
dplyr::mutate(Date = case_when(Date == 20220302 ~ '3/2/2022',
Date == 20220923 ~ '9/23/2022',
Date == 20221027 ~ '10/27/2022')) %>%
dplyr::select(-Length_mm) # lenngth is the exact same as the resp and Excretion data except diff sig figs and some missing
Biodeposition_adj
# biodep
Biodeposition_adj    <- Biodeposition %>%
dplyr::select(-c(X, tank_ID.y)) %>%
dplyr::rename(tank_ID = tank_ID.x) %>%
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Replicate = gsub("[^a-zA-Z]", "", tank_ID)) %>% # new replicate column - reflects RR dataset
dplyr::rename(Dry_Tissue_weight = animal_dry_weight_g) %>% # change name to match RR
dplyr::rename(Length_mm = animal_length_mm) %>% # change name to match RR
dplyr::rename(pH = treatment) %>% # rename to match
dplyr::select(-c(tank_ID, animal_number, initial_filter_weight_mg, dry_filter_weight_mg,ash_filter_weight_mg, inclubation_time_hours)) %>%
dplyr::mutate(Date = case_when(Date %in% "20220302" ~ '3/2/2022',
Date %in% "20220923" ~ '9/23/2022',
Date %on% "20221027" ~ '10/27/2022')) %>%
dplyr::select(-Length_mm) # lenngth is the exact same as the resp and Excretion data except diff sig figs and some missing
# biodep
Biodeposition_adj    <- Biodeposition %>%
dplyr::select(-c(X, tank_ID.y)) %>%
dplyr::rename(tank_ID = tank_ID.x) %>%
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Replicate = gsub("[^a-zA-Z]", "", tank_ID)) %>% # new replicate column - reflects RR dataset
dplyr::rename(Dry_Tissue_weight = animal_dry_weight_g) %>% # change name to match RR
dplyr::rename(Length_mm = animal_length_mm) %>% # change name to match RR
dplyr::rename(pH = treatment) %>% # rename to match
dplyr::select(-c(tank_ID, animal_number, initial_filter_weight_mg, dry_filter_weight_mg,ash_filter_weight_mg, inclubation_time_hours)) %>%
dplyr::mutate(Date = case_when(Date %in% 20220302 ~ '3/2/2022',
Date == "20220923" ~ '9/23/2022',
Date == "20221027" ~ '10/27/2022')) %>%
dplyr::select(-Length_mm) # lenngth is the exact same as the resp and Excretion data except diff sig figs and some missing
Biodeposition_adj
unique(Biodeposition$Date)
Biodeposition %>%
dplyr::select(-c(X, tank_ID.y)) %>%
dplyr::rename(tank_ID = tank_ID.x) %>%
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Replicate = gsub("[^a-zA-Z]", "", tank_ID)) %>% # new replicate column - reflects RR dataset
dplyr::rename(Dry_Tissue_weight = animal_dry_weight_g) %>% # change name to match RR
dplyr::rename(Length_mm = animal_length_mm) %>% # change name to match RR
dplyr::rename(pH = treatment) %>% # rename to match
dplyr::select(-c(tank_ID, animal_number, initial_filter_weight_mg, dry_filter_weight_mg,ash_filter_weight_mg, inclubation_time_hours))
# biodep
Biodeposition_adj    <- Biodeposition %>%
dplyr::select(-c(X, tank_ID.y)) %>%
dplyr::rename(tank_ID = tank_ID.x) %>%
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Replicate = gsub("[^a-zA-Z]", "", tank_ID)) %>% # new replicate column - reflects RR dataset
dplyr::rename(Dry_Tissue_weight = animal_dry_weight_g) %>% # change name to match RR
dplyr::rename(Length_mm = animal_length_mm) %>% # change name to match RR
dplyr::rename(pH = treatment) %>% # rename to match
dplyr::select(-c(tank_ID, animal_number, initial_filter_weight_mg, dry_filter_weight_mg,ash_filter_weight_mg, inclubation_time_hours)) %>%
dplyr::mutate(Date = case_when(Date == "03/02/2022" ~ '3/2/2022',
Date == "09/23/2022" ~ '9/23/2022',
Date == "10/27/2022" ~ '10/27/2022')) %>%
dplyr::select(-Length_mm) # lenngth is the exact same as the resp and Excretion data except diff sig figs and some missing
Biodeposition_adj
RespirationRates_adj <- RespirationRates %>%
dplyr::filter(Date %in% c('3/1/2022','9/22/2022', '10/26/2022')) %>% # , '3/27/2023'
dplyr::mutate(Date = case_when(Date == "3/1/2022" ~ '3/2/2022',
Date == "9/22/2022" ~ '9/23/2022',
Date == "10/26/2022" ~ '10/27/2022')) %>%
dplyr::mutate(Replicate = gsub("[^a-zA-Z]", "", Chamber_tank)) %>% # new replicate column - reflects RR dataset
dplyr::select(c(Date,
Age,
pH,
pCO2,
Replicate,
Length_mm,
Dry_Tissue_weight,
resp_umol_hr_bFactorNormTDW.1g)) %>%
dplyr::rename(RR_resp_umol_hr_bfactorTDW =
resp_umol_hr_bFactorNormTDW.1g)
RespirationRates_adj
ExcretionRates  %>%
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y"))
unique(ExcretionRates$Date)
ExcretionRates  %>%
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y"))
ExcretionRates_adj  <- ExcretionRates  %>%
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Date = case_when(Date == '03/01/2022' ~ '3/2/2022',
Date == '9/22/2022' ~ '9/23/2022',
Date == '10/26/2022' ~ '10/27/2022')) %>%
dplyr::mutate(ExcretionRate_mg_hr = ExcretionRate_ug_mL_hr/1000) %>%
dplyr::rename(ExcretionRate_umol_hr = ExcretionRate_umol_mL_hr) %>%
dplyr::mutate(ExcretionRate_mg_hr_bFactorNormTDW =
(ExcretionRate_mg_hr)*((1/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - mg
dplyr::mutate(ExcretionRate_umol_hr_bFactorNormTDW =
(ExcretionRate_umol_hr)*((1/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - umol
dplyr::mutate(Length_mm = as.numeric(Length_um / 1000)) %>% # Length_mm matched biodep and RR
dplyr::select(c(Date,
pH,
Replicate,
Chamber_tank,
Length_um,
Dry_Tissue_weight,
ExcretionRate_mg_hr_bFactorNormTDW,
ExcretionRate_umol_hr_bFactorNormTDW))
unique(ExcretionRates_adj$Date)   == unique(RespirationRates_adj$Date) # should be TRUE
unique(RespirationRates_adj$Date) ==  unique(Biodeposition_adj$Date)  # should be TRUE
unique(ExcretionRates_adj$Date)
ExcretionRates_adj  <- ExcretionRates  %>%
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Date = case_when(Date == '03/01/2022' ~ '3/2/2022',
Date == '09/22/2022' ~ '9/23/2022',
Date == '10/26/2022' ~ '10/27/2022')) %>%
dplyr::mutate(ExcretionRate_mg_hr = ExcretionRate_ug_mL_hr/1000) %>%
dplyr::rename(ExcretionRate_umol_hr = ExcretionRate_umol_mL_hr) %>%
dplyr::mutate(ExcretionRate_mg_hr_bFactorNormTDW =
(ExcretionRate_mg_hr)*((1/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - mg
dplyr::mutate(ExcretionRate_umol_hr_bFactorNormTDW =
(ExcretionRate_umol_hr)*((1/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - umol
dplyr::mutate(Length_mm = as.numeric(Length_um / 1000)) %>% # Length_mm matched biodep and RR
dplyr::select(c(Date,
pH,
Replicate,
Chamber_tank,
Length_um,
Dry_Tissue_weight,
ExcretionRate_mg_hr_bFactorNormTDW,
ExcretionRate_umol_hr_bFactorNormTDW))
unique(ExcretionRates_adj$Date)
unique(ExcretionRates$Date)
ExcretionRates_adj  <- ExcretionRates  %>%
dplyr::filter(Date %in% c(20220922, 20221026, 20230327)) %>%
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Date = case_when(Date == '03/01/2022' ~ '3/2/2022',
Date == '09/22/2022' ~ '9/23/2022',
Date == '10/26/2022' ~ '10/27/2022')) %>%
dplyr::mutate(ExcretionRate_mg_hr = ExcretionRate_ug_mL_hr/1000) %>%
dplyr::rename(ExcretionRate_umol_hr = ExcretionRate_umol_mL_hr) %>%
dplyr::mutate(ExcretionRate_mg_hr_bFactorNormTDW =
(ExcretionRate_mg_hr)*((1/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - mg
dplyr::mutate(ExcretionRate_umol_hr_bFactorNormTDW =
(ExcretionRate_umol_hr)*((1/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - umol
dplyr::mutate(Length_mm = as.numeric(Length_um / 1000)) %>% # Length_mm matched biodep and RR
dplyr::select(c(Date,
pH,
Replicate,
Chamber_tank,
Length_um,
Dry_Tissue_weight,
ExcretionRate_mg_hr_bFactorNormTDW,
ExcretionRate_umol_hr_bFactorNormTDW))
unique(ExcretionRates_adj$Date)
unique(ExcretionRates$Date)
ExcretionRates_adj  <- ExcretionRates  %>%
dplyr::filter(Date %in% c(20220301, 20220922, 20221026)) %>%
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Date = case_when(Date == '03/01/2022' ~ '3/2/2022',
Date == '09/22/2022' ~ '9/23/2022',
Date == '10/26/2022' ~ '10/27/2022')) %>%
dplyr::mutate(ExcretionRate_mg_hr = ExcretionRate_ug_mL_hr/1000) %>%
dplyr::rename(ExcretionRate_umol_hr = ExcretionRate_umol_mL_hr) %>%
dplyr::mutate(ExcretionRate_mg_hr_bFactorNormTDW =
(ExcretionRate_mg_hr)*((1/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - mg
dplyr::mutate(ExcretionRate_umol_hr_bFactorNormTDW =
(ExcretionRate_umol_hr)*((1/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - umol
dplyr::mutate(Length_mm = as.numeric(Length_um / 1000)) %>% # Length_mm matched biodep and RR
dplyr::select(c(Date,
pH,
Replicate,
Chamber_tank,
Length_um,
Dry_Tissue_weight,
ExcretionRate_mg_hr_bFactorNormTDW,
ExcretionRate_umol_hr_bFactorNormTDW))
ExcretionRates_adj
unique(ExcretionRates_adj$Date)
unique(ExcretionRates_adj$Date)   == unique(RespirationRates_adj$Date) # should be TRUE
unique(RespirationRates_adj$Date) ==  unique(Biodeposition_adj$Date)  # should be TRUE
# sanity check before we merge
nrow(ExcretionRates_adj)          == (nrow(RespirationRates_adj)  + nrow(Biodeposition_adj)) / 2 # FLASE becuase there were 2 outliers removed for biodep
Biodeposition_adj$uniqueID <- paste(Biodeposition_adj$Date,
Biodeposition_adj$pH,
Biodeposition_adj$Dry_Tissue_weight,
sep = '_')
RespirationRates_adj$uniqueID <- paste(RespirationRates_adj$Date,
RespirationRates_adj$pH,
RespirationRates_adj$Dry_Tissue_weight,
sep = '_')
ExcretionRates_adj$uniqueID <- paste(ExcretionRates_adj$Date,
ExcretionRates_adj$pH,
ExcretionRates_adj$Dry_Tissue_weight,
sep = '_')
# btwn RR and ER
nrow(subset(ExcretionRates_adj,
!(uniqueID %in% RespirationRates_adj$uniqueID))) # no discrepancies btwn files (yay!)
# now btwn RR and biodep
nrow(subset(RespirationRates_adj,
!(uniqueID %in% Biodeposition_adj$uniqueID))) # 2 discrepancies, these are the removed outliers from biodep
# merge RR and ER - check the number of rows == 42
RR_ER_merge <- merge(RespirationRates_adj,ExcretionRates_adj) %>% dplyr::select(!pCO2)
# ommitted pCO2 because biodep has the correct micro symbol and is merged below
nrow(RR_ER_merge) # 63 - no rows lost!
# merge this data with the biodep - adjust the columns to be our master file!
F1_Masterfile <- merge(RR_ER_merge, Biodeposition_adj,
by = c('Date','uniqueID','Dry_Tissue_weight', 'Replicate', 'pH')) %>%
dplyr::select(c(Date,
Age,
pCO2,
pH,
Replicate,
Chamber_tank,
Length_mm,
Dry_Tissue_weight,
RR_resp_umol_hr_bfactorTDW,
ExcretionRate_umol_hr_bFactorNormTDW,
IER_correct,
IRR_correct,
OER_correct,
ORR_correct,
CR_correct,
FR_correct,
RR_correct,
p,
f,
i,
SE,
AR,
AE))
nrow(F1_Masterfile) # 59 rows - as expected!!!!!
write.csv(F1_Masterfile, "Output/F1_RR_ER_Biodep_master.csv")
# set wd
knitr::opts_knit$set(root.dir = 'C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis')
write.csv(F1_Masterfile, "Output/F1_RR_ER_Biodep_master.csv")
read.csv("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Biodeposition/Biodeposition_input_blank.csv", h=T, sep =",") %>%
dplyr::filter(Date %in% c(20220301, 20220922, 20221026))
Biodep_blanks <- read.csv("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Biodeposition/Biodeposition_input_blank.csv", h=T, sep =",")
unique(Biodep_blanks$Date)
Biodep_blanks <- read.csv("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Biodeposition/Biodeposition_input_blank.csv", h=T, sep =",") %>%
dplyr::filter(Date %in% c(20220302, 20220923, 20221027)) %>%
dplyr::mutate(Date = case_when(Date == 20220302 ~ '3/2/2022',
Date == 20220923 ~ '9/23/2022',
Date == 20221027 ~ '10/27/2022')) %>%
dplyr::select(c(Date,treatment,Perc_ORG_1)) %>%
dplyr::rename(pH = treatment)
unique(Biodep_blanks$Date)
nrow(F1_Masterfile) == nrow(merge(Biodep_blanks,F1_Masterfile, by = c("Date", "pH"))) # TRUE = YAY!
nrow(merge(Biodep_blanks,F1_Masterfile, by = c("Date", "pH")))
nrow(F1_Masterfile)
Biodep_blanks
Biodep_blanks <- read.csv("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Biodeposition/Biodeposition_input_blank.csv", h=T, sep =",") %>%
dplyr::filter(Date %in% c(20220302, 20220923, 20221027)) %>%
dplyr::mutate(Date = case_when(Date == 20220302 ~ '3/2/2022',
Date == 20220923 ~ '9/23/2022',
Date == 20221027 ~ '10/27/2022')) %>%
dplyr::select(c(Date,treatment,Perc_ORG_1)) %>%
dplyr::rename(pH = treatment)
unique(Biodep_blanks$Date)# "3/2/2022"   "9/23/2022"  "10/27/2022"
Biodep_blanks
read.csv("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Biodeposition/Biodeposition_input_blank.csv", h=T, sep =",")
Biodep_blanks <- read.csv("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Biodeposition/Biodeposition_input_blank.csv", h=T, sep =",") %>%
dplyr::filter(Type%in% 'blank') %>%  # blanks from the biodep rig, not the inpu, we stopped using input value to correct
dplyr::filter(Date %in% c(20220302, 20220923, 20221027)) %>%
dplyr::mutate(Date = case_when(Date == 20220302 ~ '3/2/2022',
Date == 20220923 ~ '9/23/2022',
Date == 20221027 ~ '10/27/2022')) %>%
dplyr::select(c(Date,treatment,Perc_ORG_1)) %>%
dplyr::rename(pH = treatment)
Biodep_blanks
nrow(F1_Masterfile) == nrow(merge(Biodep_blanks,F1_Masterfile, by = c("Date", "pH"))) # TRUE = YAY!
F1_Masterfile_2.0 <- merge(Biodep_blanks,F1_Masterfile, by = c("Date", "pH")) %>%
dplyr::mutate(
# RR
RR_resp_mgO2_hr_bfactorTDW = ((RR_resp_umol_hr_bfactorTDW/1000)*32),# convert umol to mg O2
RR_Joules_hr               = RR_resp_mgO2_hr_bfactorTDW*14, # convert to joules
# ER
ExcretionRate_mgNH4_bFactorNormTDW = ((ExcretionRate_umol_hr_bFactorNormTDW/1000)*18.04), # convert umol to mg NH4
ER_Joules_hr                       = ExcretionRate_mgNH4_bFactorNormTDW*24.83, # convert o Joules
# caloric value of dried phytoplankton
Food_Joules_mg = (0.632+0.086 *(Perc_ORG_1))*4.184, # caloric value of dried phytoplaknton following Pousee et al. -referenced paper below for calculation
#Platt T, Irwin B. Caloric content of phytoplankton. Limnology and Oceanography. 1973;18(2):306–10
# A
A_Joules_hr = (CR_correct*AE)*Food_Joules_mg,
# FINALLY SCOPE FOR GROWTH YALL
SFG = A_Joules_hr - (RR_Joules_hr + ER_Joules_hr)
)
F1_Masterfile_2.0
unique(F1_Masterfile_2.0$Date)
F1_Masterfile_3_2_2022 <- F1_Masterfile_2.0 %>% dplyr::filter(Date %in% '3/2/2022')
SGFmod_322 <- aov(lm(SFG ~ pCO2 , data =F1_Masterfile_3_2_2022 ))
shapiro.test(resid(SGFmod_322)) # 0.2744
leveneTest(SGFmod_322)# 0.6057
summary(SGFmod_322)
F1_Masterfile_9_23_22<- F1_Masterfile_2.0 %>% dplyr::filter(Date %in% '9/23/2022')
SGFmod_923 <- aov(lm(SFG ~ pCO2 , data =F1_Masterfile_9_23_22 ))
shapiro.test(resid(SGFmod_923)) # 0.7095
leveneTest(SGFmod_923)# 0.3366
summary(SGFmod_923)
F1_Masterfile_10_27_22 <- F1_Masterfile_2.0 %>% dplyr::filter(Date %in% '10/27/2022')
SGFmod_1027 <- aov(lm(SFG ~ pCO2 , data =F1_Masterfile_10_27_22 ))
shapiro.test(resid(SGFmod_1027)) # 0.1695
leveneTest(SGFmod_1027)# 0.004734 **
SGFmod_1027_KW <- kruskal.test(SFG ~ pCO2, data =F1_Masterfile_10_27_22)
# Kruskal-Wallis chi-squared = 6.4526, df = 2, p-value = 0.0397
library(FSA)
SGFmod_1027_KW
F1_Masterfile_2.0$pCO2 <- factor(F1_Masterfile_2.0$pCO2, levels= c('500 μatm','800 μatm','1200 μatm'))
SFG_Pousse_F1          <- ggplot(data=F1_Masterfile_2.0, aes(x=pCO2, y=SFG, colour=pCO2)) +
scale_colour_manual(values=c("forestgreen","orange", "purple"))+
theme_classic() +
geom_boxplot(fill="white",
outlier.colour=NA,
position=position_dodge(width=0.9)) +
geom_point(position=position_jitterdodge()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.text.x=element_blank(),axis.title.x=element_blank()) +
labs(title="F1 Bay Scallops: Scope for Growth ", x ="Month", y = "Scope for Growth") +
facet_wrap(~Date)
print(SFG_Pousse_F1)
pdf("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/F1_SFG.pdf")
print(SFG_Pousse_F1)
dev.off()
print(SFG_Pousse_F1)
F1_Masterfile_2.0$Date <- factor(F1_Masterfile_2.0$Date, levels= c('3/2/2022','9/23/2022','10/27/2022'))
SFG_Pousse_F1          <- ggplot(data=F1_Masterfile_2.0, aes(x=pCO2, y=SFG, colour=pCO2)) +
scale_colour_manual(values=c("forestgreen","orange", "purple"))+
theme_classic() +
geom_boxplot(fill="white",
outlier.colour=NA,
position=position_dodge(width=0.9)) +
geom_point(position=position_jitterdodge()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.text.x=element_blank(),axis.title.x=element_blank()) +
labs(title="F1 Bay Scallops: Scope for Growth ", x ="Month", y = "Scope for Growth") +
facet_wrap(~Date)
print(SFG_Pousse_F1)
pdf("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/F1_SFG.pdf")
print(SFG_Pousse_F1)
dev.off()
