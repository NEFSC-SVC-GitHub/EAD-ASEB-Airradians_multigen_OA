library(ggplot2)
library(dplyr)
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/") # Work computer
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/") # Work computer
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/")
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/") # Work computer
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/") # Work computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis") # Work computer
## load data
biodep <- read.csv(file="Data/Physiology/Biodeposition/F1/cumulative_raw/Raw_masterdata_biodeposition.csv", header = TRUE)
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/") # Work computer
setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/") # Work computer
biodep <- read.csv(file="Data/Physiology/Biodeposition/F1/cumulative_raw/Raw_masterdata_biodeposition.csv", header = TRUE)
# (1) NAs: there is a single Na for ash filter weight - remove this
nrow(biodep) # 168 rows
biodep$ash_filter_weight_mg # one instance of an NA
subset(biodep, !is.na(ash_filter_weight_mg))$ash_filter_weight_mg # now the NA is gone,use this call in the start of the pipeline below
biodep <- subset(biodep, !is.na(ash_filter_weight_mg)) # now the NA is gone,use this call in the start of the pipeline below
nrow(biodep) # 167 rows (removed just a single row - GOOD!)
biodep$ash_filter_weight_mg <- as.numeric(biodep$ash_filter_weight_mg)
# (2) pseudofeces below detection limit: we took notes of smaples that had low to no pseudofeces - these will need to be accounted for in our rejection rate calculations
biodep %>% # use the subset biodep (with the single NA removed)
#dplyr::filter(sample_type %in% 'pseudofeces') %>% # call pseudofeces samples
dplyr::filter(sample_type %in% 'feces') %>% # call pseudofeces samples
dplyr::mutate(TPM_mg =(dry_filter_weight_mg - initial_filter_weight_mg)) %>%
dplyr::mutate(PIM_mg =(ash_filter_weight_mg - initial_filter_weight_mg)) %>%
dplyr::mutate(POM_mg =(dry_filter_weight_mg - ash_filter_weight_mg)) %>%
dplyr::arrange(TPM_mg) # new column on the  ash weight of the pseudofeces filters
## Particulate matter (total and particulate inorganic/organic matter)
biodep2 <- biodep  %>%
# Total particulate matter
dplyr::mutate(TPM_mgL = case_when(vol_filtered_L > 0 ~ ((dry_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ,
is.na(vol_filtered_L) ~ (dry_filter_weight_mg - initial_filter_weight_mg) )) %>%
# Particulate Inorganic matter - NOTE: mg/L for the water samples, BUT just mg for the feces and pseuodofeces (although column reads mg_L)
dplyr::mutate(PIM_mgL = case_when(vol_filtered_L > 0 ~ ((ash_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ,
is.na(vol_filtered_L) ~ (ash_filter_weight_mg - initial_filter_weight_mg) )) %>%
# Particulate Organic matter - NOTE: mg/L for the water samples, BUT just mg for the feces and pseuodofeces (although column reads mg_L)
dplyr::mutate(POM_mgL = case_when(vol_filtered_L > 0 ~ ((dry_filter_weight_mg - ash_filter_weight_mg) / vol_filtered_L) ,
is.na(vol_filtered_L) ~ (dry_filter_weight_mg - ash_filter_weight_mg) )) %>%
# % of Total as Particulate Inorganic matter
dplyr::mutate(Perc_INORG = ((PIM_mgL/TPM_mgL)*100) ) %>%
# % of Total as Particulate Organic matter
dplyr::mutate(Perc_ORG = ((POM_mgL/TPM_mgL)*100) ) %>%
# EGESTION RATE DATA (just for feces samples)
# Egestion rate (mg / hour)
dplyr::mutate(ER_mghr = case_when(sample_type =='feces' ~ (TPM_mgL / inclubation_time_hours)) ) %>% # although column reads mgL, feces and pseudofeces are in units of just mg
# Organic Egestion Rate (OER) POM of feces/feces collection time
dplyr::mutate(OER_mghr = case_when(sample_type =='feces' ~ (POM_mgL / inclubation_time_hours)) ) %>% # although column reads mgL, feces and pseudofeces are in units of just mg
# Inorganic Egestion Rate (OER) PIM of feces/feces collection time
dplyr::mutate(IER_mghr = case_when(sample_type =='feces' ~ (PIM_mgL / inclubation_time_hours)) ) %>% # although column reads mgL, feces and pseudofeces are in units of just mg
# REJECTION RATE DATA (just for pseudofeces samples)
# Rejection rate (mg / hour)
dplyr::mutate(RR_mghr = case_when(sample_type =='pseudofeces' ~ (TPM_mgL / inclubation_time_hours)) ) %>% # although column reads mgL, feces and pseudofeces are in units of just mg
# Organic Rejection Rate (ORR) POM of pseudofeces/pseudofeces collection time
dplyr::mutate(ORR_mghr = case_when(sample_type =='pseudofeces' ~ (POM_mgL / inclubation_time_hours)) ) %>% # although column reads mgL, feces and pseudofeces are in units of just mg
# Inorganic Rejection Rate (IRR) PIM of pseudofeces/pseudofeces collection time
dplyr::mutate(IRR_mghr = case_when(sample_type =='pseudofeces' ~ (PIM_mgL / inclubation_time_hours)) )  # although column reads mgL, feces and pseudofeces are in units of just mg
# blanks - as 'water_Blank' - call to correct in biodep2 below...
WaterSamples_blank     <- biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Blank') %>%
dplyr::group_by(Date,treatment)
View(WaterSamples_blank)
# slice(-1) # removes the first timestamp by group
# mean for these blanks here...
WaterSamples_blank_AVE <- WaterSamples_blank %>%
dplyr::select(-c('sample_type', 'water_sample_time')) %>% # %>%  # omit to average across all group_by columns
dplyr::group_by(Date,treatment) %>%
dplyr::mutate(TPM_mgL = as.numeric(TPM_mgL)) %>%
dplyr::summarise(across(everything(), list(mean)))
# 'water_Input' - call to correct in biodep2 below...
WaterSamples_input     <- biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::filter(!(Date %in% '20221027' & treatment %in% 7.5 & TPM_mgL > 5)) %>%  # omit the time points 9:30 - 10:10am showing abnormally high particulate
dplyr::group_by(Date,treatment)
WaterSamples_input_AVE <- WaterSamples_input %>%
dplyr::select(-c('sample_type', 'water_sample_time')) %>% # %>%  # omit to average across all group_by columns
dplyr::group_by(Date,treatment) %>%
dplyr::mutate(TPM_mgL = as.numeric(TPM_mgL)) %>%
dplyr::summarise(across(everything(), list(mean)))
water_samples_master <- rbind( (as.data.frame(WaterSamples_input_AVE %>% dplyr::mutate(Type = 'input'))),
(as.data.frame(WaterSamples_blank_AVE %>% dplyr::mutate(Type = 'blank'))) )
BioSamples <- biodep2 %>% #
dplyr::select(!c('water_sample_time', 'vol_filtered_L')) %>% # omit unneeded columns
dplyr::filter(sample_type %in% c('feces', 'pseudofeces')) # call the groups
BioSamples
BioSamples_feces   <- BioSamples %>%
dplyr::filter(sample_type %in% 'feces') %>%  # create data frame with just feces (Ejection rate constituents!)
dplyr::select(c(Date, treatment, animal_number, tank_ID, # select  all OVERLAPPING identifiers to properly merge
ER_mghr, OER_mghr, IER_mghr)) # select all unique values (Ejection rate constituents) to add
BioSamples_merged  <- merge( (BioSamples %>%  filter(!sample_type %in% 'feces')%>% dplyr::select(!c(sample_type, ER_mghr, OER_mghr, IER_mghr))), # omit redundnat columns
BioSamples_feces, by = c('Date', 'treatment', 'animal_number', 'tank_ID')) # merge with the feces dataframe by the unique identifiers
# SPECIES STANDARDIZATION COEFFICIENT - change here when we calculate our own for the Bay scallop and potentially under the different OA treatments
sp_COEF <- 0.822 # standardization coefficient - umol O2 consumption and tissue dry weight (review RespRates_analysis)
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# FOR LOOP PREP ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
dates             <- as.data.frame(unique(biodep$Date))
colnames(dates)   <- "Date"
Biodep_Master     <- data.frame() # start dataframe
meanTDW <- mean(BioSamples_merged$animal_dry_weight_mg) # 0.8582318
for (i in 1:nrow(dates)) {
date_loop       <- dates[i,]
blanks_loop     <- WaterSamples_blank_AVE %>% filter(Date %in% date_loop) %>% arrange(treatment)# filter blanks, sort as 7.5 then 8 for treatment pH
waterinput_loop <- WaterSamples_input_AVE %>% filter(Date %in% date_loop) %>% arrange(treatment) # filter blanks, sort as 7.5 then 8 for treatment pH
data_loop       <- BioSamples_merged %>%
dplyr::filter(Date %in% date_loop) %>%
# IER == Inorganic Egestion Rate: PIM of feces/feces collection time
dplyr::mutate(IER_correct = IER_mghr*((meanTDW/animal_dry_weight_mg)^sp_COEF)) %>% # previously 0.1/animal_dry_weight_mg
# IRR == Inorganic Rejection Rate: PIM of pseudofeces/pseudofeces collection time
dplyr::mutate(IRR_correct = IRR_mghr*((meanTDW/animal_dry_weight_mg)^sp_COEF)) %>%  # previously 0.1/animal_dry_weight_mg
# OER == Organic Egestion Rate: POM of feces/feces collection time
dplyr::mutate(OER_correct = OER_mghr*((meanTDW/animal_dry_weight_mg)^sp_COEF)) %>% # previously 0.1/animal_dry_weight_mg
# ORR == Organic Rejection Rate: POM of pseudofeces/pseudofeces collection time
dplyr::mutate(ORR_correct = ORR_mghr*(0.1/animal_dry_weight_mg)^sp_COEF) %>%
# CR  == Cleanrance Rate: IFR/PIM of the water
dplyr::mutate(CR = case_when(
treatment == 7.5 ~ (IRR_mghr + IER_mghr) / waterinput_loop$PIM_mgL_1[1],
treatment == 8.0 ~ (IRR_mghr + IER_mghr) / waterinput_loop$PIM_mgL_1[2]
)) %>%
# FR  == Filtration Rate: CR * TPM of the water
dplyr::mutate(FR = case_when(
treatment == 7.5 ~ CR * waterinput_loop$TPM_mgL_1[1],
treatment == 8.0 ~ CR * waterinput_loop$TPM_mgL_1[2]
)) %>%
# RR  == Rejection Rate: ORR+IRR
dplyr::mutate(RR_correct = ORR_correct + IRR_correct) %>%
# p   == Fraction of Organic Rejected: ORR/RR (organic fraction of the pseudofeces)
dplyr::mutate(p = ORR_correct / RR_correct ) %>%
# f   == POM available: Average POM of the water
dplyr::mutate(f =  case_when(
treatment == 7.5 ~ waterinput_loop$Perc_ORG_1[1] / 100,
treatment == 8.0 ~ waterinput_loop$Perc_ORG_1[2] / 100
)) %>%
# SE  == Selection Efficiency: 1-(p/f) (organic content of pseudofeces/organic content of the water)
dplyr::mutate(SE = 1 - (p / f)) %>%
# IFR == Inorganic Filtration Rate: IER + IRR (PIM feces + PIM pseudofeces; i.e. total inorganic matter filtered/collection time)
dplyr::mutate(IFR = IER_correct + IRR_correct) %>%
# CR  == Cleanrance Rate: IFR/PIM of the water
dplyr::mutate(CR_correct = case_when(
treatment == 7.5 ~ IFR /  waterinput_loop$PIM_mgL_1[1],
treatment == 8.0 ~ IFR /  waterinput_loop$PIM_mgL_1[2]
)) %>%
# FR  == Filtration Rate: CR * TPM of the water
dplyr::mutate(FR_correct = case_when(
treatment == 7.5 ~ CR_correct * waterinput_loop$TPM_mgL_1[1],
treatment == 8.0 ~ CR_correct *  waterinput_loop$TPM_mgL_1[2]
)) %>%
# %RR == RR/FR (amount rejected/total amount filtered)
dplyr::mutate(RR_Percent = (RR_correct/FR_correct)*100) %>%
# TIR == Total Ingestion Rate: FR - RR
dplyr::mutate(TIR = FR_correct -
RR_correct) %>%
# OFR == Organic FIltration Rate: CR * POM of the water
dplyr::mutate(OFR = case_when(
treatment == 7.5 ~ CR_correct * waterinput_loop$POM_mgL_1[1],
treatment == 8.0 ~ CR_correct *  waterinput_loop$POM_mgL_1[2]
)) %>%
# ORI == Organic INgestion Rate: OFR-ORR
dplyr::mutate(OIR = OFR - ORR_correct) %>%
# i   == Fraction of Organic Matter ingested: OIR/TIR (i.e. fraction of ingested material that was organic)
dplyr::mutate(i = OIR / TIR) %>%
# AR  == Assimilation Rate: OIR-OER (rate of POM filtration - rate of POM rejection - rate of POM egestion)
dplyr::mutate(AR = OIR - OER_correct) %>%
# AE  == Assimilation Efficiency: AR/OIR
dplyr::mutate(AE = AR / OIR) %>%
# add column for uatm pCO2 treatment based on pH groups
dplyr::mutate(pCO2 = case_when(treatment == 8.0 ~ "500 Î¼atm", treatment == 7.5 ~ "800 Î¼atm"))
df                <- data.frame(data_loop) # name dataframe for this single row
Biodep_Master     <- rbind(Biodep_Master,df) #bind to a cumulative list dataframe
print(Biodep_Master) # print to monitor progress
}
setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/") # Work computer
biodep <- read.csv(file="Data/Physiology/Biodeposition/F1/cumulative_raw/Raw_masterdata_biodeposition.csv", header = TRUE)
# (1) NAs: there is a single Na for ash filter weight - remove this
nrow(biodep) # 168 rows
biodep$ash_filter_weight_mg # one instance of an NA
subset(biodep, !is.na(ash_filter_weight_mg))$ash_filter_weight_mg # now the NA is gone,use this call in the start of the pipeline below
biodep <- subset(biodep, !is.na(ash_filter_weight_mg)) # now the NA is gone,use this call in the start of the pipeline below
nrow(biodep) # 167 rows (removed just a single row - GOOD!)
biodep$ash_filter_weight_mg <- as.numeric(biodep$ash_filter_weight_mg)
# (2) pseudofeces below detection limit: we took notes of smaples that had low to no pseudofeces - these will need to be accounted for in our rejection rate calculations
biodep %>% # use the subset biodep (with the single NA removed)
dplyr::filter(sample_type %in% 'pseudofeces') %>% # call pseudofeces samples
#dplyr::filter(sample_type %in% 'feces') %>% # call pseudofeces samples
dplyr::mutate(TPM_mg =(dry_filter_weight_mg - initial_filter_weight_mg)) %>%
dplyr::mutate(PIM_mg =(ash_filter_weight_mg - initial_filter_weight_mg)) %>%
dplyr::mutate(POM_mg =(dry_filter_weight_mg - ash_filter_weight_mg)) %>%
dplyr::arrange(TPM_mg) # new column on the  ash weight of the pseudofeces filters
## Particulate matter (total and particulate inorganic/organic matter)
biodep2 <- biodep  %>%
# Total particulate matter
dplyr::mutate(TPM_mgL = case_when(vol_filtered_L > 0 ~ ((dry_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ,
is.na(vol_filtered_L) ~ (dry_filter_weight_mg - initial_filter_weight_mg) )) %>%
# Particulate Inorganic matter - NOTE: mg/L for the water samples, BUT just mg for the feces and pseuodofeces (although column reads mg_L)
dplyr::mutate(PIM_mgL = case_when(vol_filtered_L > 0 ~ ((ash_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ,
is.na(vol_filtered_L) ~ (ash_filter_weight_mg - initial_filter_weight_mg) )) %>%
# Particulate Organic matter - NOTE: mg/L for the water samples, BUT just mg for the feces and pseuodofeces (although column reads mg_L)
dplyr::mutate(POM_mgL = case_when(vol_filtered_L > 0 ~ ((dry_filter_weight_mg - ash_filter_weight_mg) / vol_filtered_L) ,
is.na(vol_filtered_L) ~ (dry_filter_weight_mg - ash_filter_weight_mg) )) %>%
# % of Total as Particulate Inorganic matter
dplyr::mutate(Perc_INORG = ((PIM_mgL/TPM_mgL)*100) ) %>%
# % of Total as Particulate Organic matter
dplyr::mutate(Perc_ORG = ((POM_mgL/TPM_mgL)*100) ) %>%
# EGESTION RATE DATA (just for feces samples)
# Egestion rate (mg / hour)
dplyr::mutate(ER_mghr = case_when(sample_type =='feces' ~ (TPM_mgL / inclubation_time_hours)) ) %>% # although column reads mgL, feces and pseudofeces are in units of just mg
# Organic Egestion Rate (OER) POM of feces/feces collection time
dplyr::mutate(OER_mghr = case_when(sample_type =='feces' ~ (POM_mgL / inclubation_time_hours)) ) %>% # although column reads mgL, feces and pseudofeces are in units of just mg
# Inorganic Egestion Rate (OER) PIM of feces/feces collection time
dplyr::mutate(IER_mghr = case_when(sample_type =='feces' ~ (PIM_mgL / inclubation_time_hours)) ) %>% # although column reads mgL, feces and pseudofeces are in units of just mg
# REJECTION RATE DATA (just for pseudofeces samples)
# Rejection rate (mg / hour)
dplyr::mutate(RR_mghr = case_when(sample_type =='pseudofeces' ~ (TPM_mgL / inclubation_time_hours)) ) %>% # although column reads mgL, feces and pseudofeces are in units of just mg
# Organic Rejection Rate (ORR) POM of pseudofeces/pseudofeces collection time
dplyr::mutate(ORR_mghr = case_when(sample_type =='pseudofeces' ~ (POM_mgL / inclubation_time_hours)) ) %>% # although column reads mgL, feces and pseudofeces are in units of just mg
# Inorganic Rejection Rate (IRR) PIM of pseudofeces/pseudofeces collection time
dplyr::mutate(IRR_mghr = case_when(sample_type =='pseudofeces' ~ (PIM_mgL / inclubation_time_hours)) )  # although column reads mgL, feces and pseudofeces are in units of just mg
# blanks - as 'water_Blank' - call to correct in biodep2 below...
WaterSamples_blank     <- biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Blank') %>%
dplyr::group_by(Date,treatment)
View(WaterSamples_blank)
# slice(-1) # removes the first timestamp by group
# mean for these blanks here...
WaterSamples_blank_AVE <- WaterSamples_blank %>%
dplyr::select(-c('sample_type', 'water_sample_time')) %>% # %>%  # omit to average across all group_by columns
dplyr::group_by(Date,treatment) %>%
dplyr::mutate(TPM_mgL = as.numeric(TPM_mgL)) %>%
dplyr::summarise(across(everything(), list(mean)))
WaterSamples_blank_AVE #view your blanks!
# 'water_Input' - call to correct in biodep2 below...
WaterSamples_input     <- biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::filter(!(Date %in% '20221027' & treatment %in% 7.5 & TPM_mgL > 5)) %>%  # omit the time points 9:30 - 10:10am showing abnormally high particulate
dplyr::group_by(Date,treatment)
WaterSamples_input_AVE <- WaterSamples_input %>%
dplyr::select(-c('sample_type', 'water_sample_time')) %>% # %>%  # omit to average across all group_by columns
dplyr::group_by(Date,treatment) %>%
dplyr::mutate(TPM_mgL = as.numeric(TPM_mgL)) %>%
dplyr::summarise(across(everything(), list(mean)))
water_samples_master <- rbind( (as.data.frame(WaterSamples_input_AVE %>% dplyr::mutate(Type = 'input'))),
(as.data.frame(WaterSamples_blank_AVE %>% dplyr::mutate(Type = 'blank'))) )
# WRITE CSV OF THE MASTER FILE
write.csv(water_samples_master, "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Biodeposition/Biodeposition_input_blank.csv")
BioSamples <- biodep2 %>% #
dplyr::select(!c('water_sample_time', 'vol_filtered_L')) %>% # omit unneeded columns
dplyr::filter(sample_type %in% c('feces', 'pseudofeces')) # call the groups
BioSamples
BioSamples_feces   <- BioSamples %>%
dplyr::filter(sample_type %in% 'feces') %>%  # create data frame with just feces (Ejection rate constituents!)
dplyr::select(c(Date, treatment, animal_number, tank_ID, # select  all OVERLAPPING identifiers to properly merge
ER_mghr, OER_mghr, IER_mghr)) # select all unique values (Ejection rate constituents) to add
BioSamples_merged  <- merge( (BioSamples %>%  filter(!sample_type %in% 'feces')%>% dplyr::select(!c(sample_type, ER_mghr, OER_mghr, IER_mghr))), # omit redundnat columns
BioSamples_feces, by = c('Date', 'treatment', 'animal_number', 'tank_ID')) # merge with the feces dataframe by the unique identifiers
# SPECIES STANDARDIZATION COEFFICIENT - change here when we calculate our own for the Bay scallop and potentially under the different OA treatments
sp_COEF <- 0.822 # standardization coefficient - umol O2 consumption and tissue dry weight (review RespRates_analysis)
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# FOR LOOP PREP ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
dates             <- as.data.frame(unique(biodep$Date))
colnames(dates)   <- "Date"
Biodep_Master     <- data.frame() # start dataframe
meanTDW <- mean(BioSamples_merged$animal_dry_weight_mg) # 0.8582318
for (i in 1:nrow(dates)) {
date_loop       <- dates[i,]
blanks_loop     <- WaterSamples_blank_AVE %>% filter(Date %in% date_loop) %>% arrange(treatment)# filter blanks, sort as 7.5 then 8 for treatment pH
waterinput_loop <- WaterSamples_input_AVE %>% filter(Date %in% date_loop) %>% arrange(treatment) # filter blanks, sort as 7.5 then 8 for treatment pH
data_loop       <- BioSamples_merged %>%
dplyr::filter(Date %in% date_loop) %>%
# IER == Inorganic Egestion Rate: PIM of feces/feces collection time
dplyr::mutate(IER_correct = IER_mghr*((meanTDW/animal_dry_weight_mg)^sp_COEF)) %>% # previously 0.1/animal_dry_weight_mg
# IRR == Inorganic Rejection Rate: PIM of pseudofeces/pseudofeces collection time
dplyr::mutate(IRR_correct = IRR_mghr*((meanTDW/animal_dry_weight_mg)^sp_COEF)) %>%  # previously 0.1/animal_dry_weight_mg
# OER == Organic Egestion Rate: POM of feces/feces collection time
dplyr::mutate(OER_correct = OER_mghr*((meanTDW/animal_dry_weight_mg)^sp_COEF)) %>% # previously 0.1/animal_dry_weight_mg
# ORR == Organic Rejection Rate: POM of pseudofeces/pseudofeces collection time
dplyr::mutate(ORR_correct = ORR_mghr*(0.1/animal_dry_weight_mg)^sp_COEF) %>%
# CR  == Cleanrance Rate: IFR/PIM of the water
dplyr::mutate(CR = case_when(
treatment == 7.5 ~ (IRR_mghr + IER_mghr) / waterinput_loop$PIM_mgL_1[1],
treatment == 8.0 ~ (IRR_mghr + IER_mghr) / waterinput_loop$PIM_mgL_1[2]
)) %>%
# FR  == Filtration Rate: CR * TPM of the water
dplyr::mutate(FR = case_when(
treatment == 7.5 ~ CR * waterinput_loop$TPM_mgL_1[1],
treatment == 8.0 ~ CR * waterinput_loop$TPM_mgL_1[2]
)) %>%
# RR  == Rejection Rate: ORR+IRR
dplyr::mutate(RR_correct = ORR_correct + IRR_correct) %>%
# p   == Fraction of Organic Rejected: ORR/RR (organic fraction of the pseudofeces)
dplyr::mutate(p = ORR_correct / RR_correct ) %>%
# f   == POM available: Average POM of the water
dplyr::mutate(f =  case_when(
treatment == 7.5 ~ waterinput_loop$Perc_ORG_1[1] / 100,
treatment == 8.0 ~ waterinput_loop$Perc_ORG_1[2] / 100
)) %>%
# SE  == Selection Efficiency: 1-(p/f) (organic content of pseudofeces/organic content of the water)
dplyr::mutate(SE = 1 - (p / f)) %>%
# IFR == Inorganic Filtration Rate: IER + IRR (PIM feces + PIM pseudofeces; i.e. total inorganic matter filtered/collection time)
dplyr::mutate(IFR = IER_correct + IRR_correct) %>%
# CR  == Cleanrance Rate: IFR/PIM of the water
dplyr::mutate(CR_correct = case_when(
treatment == 7.5 ~ IFR /  waterinput_loop$PIM_mgL_1[1],
treatment == 8.0 ~ IFR /  waterinput_loop$PIM_mgL_1[2]
)) %>%
# FR  == Filtration Rate: CR * TPM of the water
dplyr::mutate(FR_correct = case_when(
treatment == 7.5 ~ CR_correct * waterinput_loop$TPM_mgL_1[1],
treatment == 8.0 ~ CR_correct *  waterinput_loop$TPM_mgL_1[2]
)) %>%
# %RR == RR/FR (amount rejected/total amount filtered)
dplyr::mutate(RR_Percent = (RR_correct/FR_correct)*100) %>%
# TIR == Total Ingestion Rate: FR - RR
dplyr::mutate(TIR = FR_correct -
RR_correct) %>%
# OFR == Organic FIltration Rate: CR * POM of the water
dplyr::mutate(OFR = case_when(
treatment == 7.5 ~ CR_correct * waterinput_loop$POM_mgL_1[1],
treatment == 8.0 ~ CR_correct *  waterinput_loop$POM_mgL_1[2]
)) %>%
# ORI == Organic INgestion Rate: OFR-ORR
dplyr::mutate(OIR = OFR - ORR_correct) %>%
# i   == Fraction of Organic Matter ingested: OIR/TIR (i.e. fraction of ingested material that was organic)
dplyr::mutate(i = OIR / TIR) %>%
# AR  == Assimilation Rate: OIR-OER (rate of POM filtration - rate of POM rejection - rate of POM egestion)
dplyr::mutate(AR = OIR - OER_correct) %>%
# AE  == Assimilation Efficiency: AR/OIR
dplyr::mutate(AE = AR / OIR) %>%
# add column for uatm pCO2 treatment based on pH groups
dplyr::mutate(pCO2 = case_when(treatment == 8.0 ~ "500 Î¼atm", treatment == 7.5 ~ "800 Î¼atm"))
df                <- data.frame(data_loop) # name dataframe for this single row
Biodep_Master     <- rbind(Biodep_Master,df) #bind to a cumulative list dataframe
print(Biodep_Master) # print to monitor progress
}
View(Biodep_Master) # look at your master file!
