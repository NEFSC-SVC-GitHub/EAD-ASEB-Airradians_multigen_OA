d18.ngenes_min      <- min(rowSums(counts(dds.d18.group))) #  minimum reads
d18.ngenes_mean.min <- min(rowMeans2(counts(dds.d18.group))) # minimum row mean
d18.ngenes_max      <- max(rowSums(counts(dds.d18.group))) #  maximum reads
d18.rpg             <- qplot(log10(rowSums(counts(dds.d18.group))), bins = 16) + # number of reads per gene
labs(x = "log10(Mapped reads per gene)", y = "Number of genes",
title = "Day 18 (Spat): Mapped reads per gene") +
geom_label(aes(x = 4, y = 3000, label = paste(d18.ngenes, "total genes"))) +
geom_label(aes(x = 4, y = 2700, label = paste("max count =", d18.ngenes_max))) +
geom_label(aes(x = 4, y = 2400, label = paste("min count =", d18.ngenes_min))) +
geom_label(aes(x = 4, y = 2100, label = paste("min mean =", d18.ngenes_mean.min))) +
expand_limits(y=c(NA, 3250))
d18.countfig
d18.countfig        <- plot_grid(d18.rps, d18.rpg)
d18.nsamples        <- ncol(counts(dds.d18.group)) # Number of samples - for the plot label
d18.rps             <- qplot(colSums(counts(dds.d18.group))) +# reads of reads per sample
labs(x = "Mapped reads per sample", y = "Number of samples",
title = "Day 18 (Spat): Mapped reads per sample") +
geom_label(aes(x = 12e5, y = 1, label = paste(d18.nsamples, "samples")))
d18.ngenes          <- nrow(counts(dds.d18.group)) # Number of genes
d18.ngenes_min      <- min(rowSums(counts(dds.d18.group))) #  minimum reads
d18.ngenes_mean.min <- min(rowMeans2(counts(dds.d18.group))) # minimum row mean
d18.ngenes_max      <- max(rowSums(counts(dds.d18.group))) #  maximum reads
d18.rpg             <- qplot(log10(rowSums(counts(dds.d18.group))), bins = 16) + # number of reads per gene
labs(x = "log10(Mapped reads per gene)", y = "Number of genes",
title = "Day 18 (Spat): Mapped reads per gene") +
geom_label(aes(x = 4, y = 3000, label = paste(d18.ngenes, "total genes"))) +
geom_label(aes(x = 4, y = 2700, label = paste("max count =", d18.ngenes_max))) +
geom_label(aes(x = 4, y = 2400, label = paste("min count =", d18.ngenes_min))) +
geom_label(aes(x = 4, y = 2100, label = paste("min mean =", d18.ngenes_mean.min))) +
expand_limits(y=c(NA, 3250))
d18.countfig        <- plot_grid(d18.rps, d18.rpg)
plot_grid(d2.countfig, d18.countfig)
# RUN DESEQ2 model - view all the pariwise comparisons
dds.d2        <- DESeq(dds.d2) #  full model            wait for this to complete....
dds.d2.group  <- DESeq(dds.d2.group) # group model      wait for this to complete....
dds.d18.group <- DESeq(dds.d18.group) # group model       wait for this to complete....
# Data transformations for heatmap and PCA visuals :::::::
# rlog - regularized log transformation of origin count data to log2 scale - fit for each sample and dist. of coefficients in the data
rlog.d2<- rlogTransformation(dds.d2) # rlog transform (regularized log)
rlog.d2
rlog.d2[,1:4]
iris
as.data.frame(rlog.d2)
rlog.d2
assay(rlog.d2[res.index,])
assay(rlog.d2)
head(assay(rlog.d2))
rlog.d2
head(assay(rlog.d2))[1]
head(assay(rlog.d2))[,1]
head(assay(rlog.d2))[1,]
head(assay(rlog.d2))[,1]
head(assay(rlog.d2))[,c(1:2)]
(ncol(assay(rlog.d2)))
head(assay(rlog.d2))[,c(1:(ncol(assay(rlog.d2))))]
dat <- assay(rlog.d2)[,c(1:(ncol(assay(rlog.d2))))]
dat <- as.data.frame(assay(rlog.d2)[,c(1:(ncol(assay(rlog.d2))))])
head(dat)
pca = prcomp(dat)
dat %>% remove_rownames %>% column_to_rownames(var="Sample.ID")
library(tidyverse)
dat %>% remove_rownames %>% column_to_rownames(var="Sample.ID")
samp.with.rownames <- data.frame(dat[,-1], row.names=dat[,1])
samp.with.rownames
samp.with.rownames <- as.data.frame(t(dat))
samp.with.rownames
samp.with.rownames <- as.data.frame(t(dat)) %>% tibble::rownames_to_column("Sample.ID")
samp.with.rownames
assay(rlog.d2)
samp.with.rownames
d2.exp_data
d18.exp_data
d2.exp_data_rename
d2.exp_data
d2.exp_data_rename <- d2.exp_data %>% rename('Sample.ID' = 'SapleName_readmatrix')
d2.exp_data_rename <- d2.exp_data %>% dplyr::rename('Sample.ID' = 'SapleName_readmatrix')
d2.exp_data_rename
samp.with.rownames <- as.data.frame(t(dat)) %>%
tibble::rownames_to_column("Sample.ID") %>%
merge(samp.with.rownames, d2.exp_data_rename)
merge(samp.with.rownames, d2.exp_data_rename)
ncol(samp.with.rownames)
samp.with.rownamesMERGED <- merge(samp.with.rownames, d2.exp_data_rename)
ncol(samp.with.rownamesMERGED)
ncol(samp.with.rownames)
pca = prcomp(samp.with.rownamesMERGED[,c(2:4821)])
ggbiplot(pca,groups = samp.with.rownamesMERGED$Salinity,ellipse = T,ellipse.prob = .95)
iris
d2.exp_data_rename
samp.with.rownames
iris
dat <- as.data.frame(assay(rlog.d2)[,c(1:(ncol(assay(rlog.d2))))])
dat
assay(rlog.d2$All_Treatment
assay(rlog.d2$All_Treatment)
assay(rlog.d2$All_Treatment)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(car)
library(nlme)
library(multcompView)
library(agricolae)
library(Rmisc)
library(lmerTest)
library(lme4)
library(pander)
library(performance)
library(Rmisc)
library(maditr)
library(reshape2)
library(ggpubr)
setwd("C:/Users/samuel_gurr/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis") # Work computer
setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis") # Work computer
ShellLength <- read.csv(file="Data/Biodeposition/Raw_masterdata_biodeposition.csv", header = TRUE)
biofep <- read.csv(file="Data/Biodeposition/Raw_masterdata_biodeposition.csv", header = TRUE)
biodep <- read.csv(file="Data/Biodeposition/Raw_masterdata_biodeposition.csv", header = TRUE)
biodep
biodep$TPM <- (biodep$dry_filter_weight_mg - biodep$initial_filter_weight_mg) / biodep$vol_filtered_L
biodep$TPM
biodep
biodep <- read.csv(file="Data/Biodeposition/Raw_masterdata_biodeposition.csv", header = TRUE)
if(biodep$vol_filtered_L == NA) {
biodep$TPM <- biodep$dry_filter_weight_mg - biodep$initial_filter_weight_mg
} else( biodep$TPM <- (biodep$dry_filter_weight_mg - biodep$initial_filter_weight_mg) / biodep$vol_filtered_L )
biodep$vol_filtered_L == NA
biodep$vol_filtered_L[1]
biodep$vol_filtered_L[10]
biodep$vol_filtered_L[20]
biodep$vol_filtered_L[20] == NA
biodep$vol_filtered_L[20] = NA
biodep$vol_filtered_L[20]
biodep$vol_filtered_L[21] == NA
biodep$vol_filtered_L[21]
if(biodep$vol_filtered_L == NA) {
biodep$TPM <- biodep$dry_filter_weight_mg - biodep$initial_filter_weight_mg
} else( biodep$TPM <- (biodep$dry_filter_weight_mg - biodep$initial_filter_weight_mg) / biodep$vol_filtered_L )
## Particulate matter (total and particulate inorganic/organic matter)
biodep2 <- biodep %>% dplyr::mutate(TPM = case_when(vol_filtered_L == NA ~ (dry_filter_weight_mg-initial_filter_weight_mg),
((dry_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ))
biodep2
## Particulate matter (total and particulate inorganic/organic matter)
biodep2 <- biodep %>% dplyr::mutate(TPM = case_when(vol_filtered_L = NA ~ (dry_filter_weight_mg-initial_filter_weight_mg),
((dry_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ))
## Particulate matter (total and particulate inorganic/organic matter)
biodep2 <- biodep %>% dplyr::mutate(TPM = case_when(vol_filtered_L > 0 ~ (dry_filter_weight_mg-initial_filter_weight_mg),
((dry_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ))
biodep
biodep2
## Particulate matter (total and particulate inorganic/organic matter)
biodep2 <- biodep %>% dplyr::mutate(TPM = case_when(vol_filtered_L == 'NA' ~ (dry_filter_weight_mg-initial_filter_weight_mg),
((dry_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ))
biodep <- read.csv(file="Data/Biodeposition/Raw_masterdata_biodeposition.csv", header = TRUE)
## Particulate matter (total and particulate inorganic/organic matter)
biodep2 <- biodep %>% dplyr::mutate(TPM = case_when(vol_filtered_L == 'NA' ~ (dry_filter_weight_mg-initial_filter_weight_mg),
((dry_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ))
biodep
biodep2
## Particulate matter (total and particulate inorganic/organic matter)
biodep2 <- biodep %>% dplyr::mutate(TPM = case_when(vol_filtered_L = 'NA' ~ (dry_filter_weight_mg-initial_filter_weight_mg),
((dry_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ))
## Particulate matter (total and particulate inorganic/organic matter)
biodep2 <- biodep %>% dplyr::mutate(TPM = case_when(vol_filtered_L == NA ~ (dry_filter_weight_mg-initial_filter_weight_mg),
vol_filtered_L > 0    ~ ((dry_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ))
biodep2
## Particulate matter (total and particulate inorganic/organic matter)
biodep2 <- biodep %>% dplyr::mutate(TPM = case_when(vol_filtered_L == 'NA' ~ (dry_filter_weight_mg-initial_filter_weight_mg),
vol_filtered_L > 0    ~ ((dry_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ))
biodep2
## Particulate matter (total and particulate inorganic/organic matter)
biodep2 <- biodep %>% dplyr::mutate(TPM = case_when(vol_filtered_L > 0 ~ ((dry_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ,
(dry_filter_weight_mg - initial_filter_weight_mg) ))
## Particulate matter (total and particulate inorganic/organic matter)
biodep2 <- biodep %>% dplyr::mutate(TPM = case_when(vol_filtered_L > 0 ~ ((dry_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ,
is.na(vol_filtered_L) ~ (dry_filter_weight_mg - initial_filter_weight_mg) ))
biodep2
biodep2
library(ggplot2)
library(dplyr)
library(reshape2)
setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis") # Work computer
setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis") # Work computer
biodep <- read.csv(file="Data/Biodeposition/Raw_masterdata_biodeposition.csv", header = TRUE)
## Particulate matter (total and particulate inorganic/organic matter)
biodep2 <- biodep %>% dplyr::mutate(TPM = case_when(vol_filtered_L > 0 ~ ((dry_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ,
is.na(vol_filtered_L) ~ (dry_filter_weight_mg - initial_filter_weight_mg) ))
## Particulate matter (total and particulate inorganic/organic matter)
biodep2 <- biodep %>% dplyr::mutate(TPM_mgL = case_when(vol_filtered_L > 0 ~ ((dry_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ,
is.na(vol_filtered_L) ~ (dry_filter_weight_mg - initial_filter_weight_mg) ))
biodep
## Particulate matter (total and particulate inorganic/organic matter)
biodep2 <- biodep %>% dplyr::mutate(TPM_mgL = case_when(vol_filtered_L > 0 ~ ((dry_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ,
is.na(vol_filtered_L) ~ (dry_filter_weight_mg - initial_filter_weight_mg) )) %>%
dplyr::mutate(PIM_mgL = case_when(vol_filtered_L > 0 ~ ((ash_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ,
is.na(vol_filtered_L) ~ (ash_filter_weight_mg - initial_filter_weight_mg) ))
biodep2
## Particulate matter (total and particulate inorganic/organic matter)
biodep2 <- biodep %>% dplyr::mutate(TPM_mgL = case_when(vol_filtered_L > 0 ~ ((dry_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ,
is.na(vol_filtered_L) ~ (dry_filter_weight_mg - initial_filter_weight_mg) )) %>%
dplyr::mutate(PIM_mgL = case_when(vol_filtered_L > 0 ~ ((ash_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ,
is.na(vol_filtered_L) ~ (ash_filter_weight_mg - initial_filter_weight_mg) )) %>%
dplyr::mutate(Perc_INORG = ((PIM_mgL/TPM_mgL)*100) )
biodep2
## Particulate matter (total and particulate inorganic/organic matter)
biodep2 <- biodep %>% dplyr::mutate(TPM_mgL = case_when(vol_filtered_L > 0 ~ ((dry_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ,
is.na(vol_filtered_L) ~ (dry_filter_weight_mg - initial_filter_weight_mg) )) %>%
dplyr::mutate(PIM_mgL = case_when(vol_filtered_L > 0 ~ ((ash_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ,
is.na(vol_filtered_L) ~ (ash_filter_weight_mg - initial_filter_weight_mg) )) %>%
dplyr::mutate(POM_mgL = case_when(vol_filtered_L > 0 ~ ((dry_filter_weight_mg - ash_filter_weight_mg) / vol_filtered_L) ,
is.na(vol_filtered_L) ~ (dry_filter_weight_mg - ash_filter_weight_mg) )) %>%
dplyr::mutate(Perc_INORG = ((PIM_mgL/TPM_mgL)*100) ) %>%
dplyr::mutate(Perc_ORG = ((POM_mgL/TPM_mgL)*100) )
biodep2
biodep
## Particulate matter (total and particulate inorganic/organic matter)
biodep2 <- biodep %>%
# Total particulate matter
dplyr::mutate(TPM_mgL = case_when(vol_filtered_L > 0 ~ ((dry_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ,
is.na(vol_filtered_L) ~ (dry_filter_weight_mg - initial_filter_weight_mg) )) %>%
# Particulate Inorganic matter - NOTE: mg/L for the water samples, BUT just mg for the feces and pseuodofeces (although column reads mg_L)
dplyr::mutate(PIM_mgL = case_when(vol_filtered_L > 0 ~ ((ash_filter_weight_mg - initial_filter_weight_mg) / vol_filtered_L) ,
is.na(vol_filtered_L) ~ (ash_filter_weight_mg - initial_filter_weight_mg) )) %>%
# Particulate Organic matter - NOTE: mg/L for the water samples, BUT just mg for the feces and pseuodofeces (although column reads mg_L)
dplyr::mutate(POM_mgL = case_when(vol_filtered_L > 0 ~ ((dry_filter_weight_mg - ash_filter_weight_mg) / vol_filtered_L) ,
is.na(vol_filtered_L) ~ (dry_filter_weight_mg - ash_filter_weight_mg) )) %>%
# % of Total as Particulate Inorganic matter
dplyr::mutate(Perc_INORG = ((PIM_mgL/TPM_mgL)*100) ) %>%
# % of Total as Particulate Organic matter
dplyr::mutate(Perc_ORG = ((POM_mgL/TPM_mgL)*100) ) %>%
# EGESTION RATE DATA (just for feces samples)
# Egestion rate (mg / hour)
dplyr::mutate(ER_mghr = case_when(sample_type =='feces' ~ (TPM_mgL / inclubation_time_hours)) ) %>% # although column reads mgL, feces and pseudofeces are in units of just mg
# Organic Egestion Rate (OER) POM of feces/feces collection time
dplyr::mutate(OER_mghr = case_when(sample_type =='feces' ~ (POM_mgL / inclubation_time_hours)) ) %>% # although column reads mgL, feces and pseudofeces are in units of just mg
# Inorganic Egestion Rate (OER) PIM of feces/feces collection time
dplyr::mutate(IER_mghr = case_when(sample_type =='feces' ~ (PIM_mgL / inclubation_time_hours)) ) %>% # although column reads mgL, feces and pseudofeces are in units of just mg
# REJECTION RATE DATA (just for pseudofeces samples)
# Rejection rate (mg / hour)
dplyr::mutate(RR_mghr = case_when(sample_type =='pseudofeces' ~ (TPM_mgL / inclubation_time_hours)) ) %>% # although column reads mgL, feces and pseudofeces are in units of just mg
# Organic Rejection Rate (ORR) POM of pseudofeces/pseudofeces collection time
dplyr::mutate(ORR_mghr = case_when(sample_type =='pseudofeces' ~ (POM_mgL / inclubation_time_hours)) ) %>% # although column reads mgL, feces and pseudofeces are in units of just mg
# Inorganic Rejection Rate (IRR) PIM of pseudofeces/pseudofeces collection time
dplyr::mutate(IRR_mghr = case_when(sample_type =='pseudofeces' ~ (PIM_mgL / inclubation_time_hours)) )  # although column reads mgL, feces and pseudofeces are in units of just mg
biodep2
biodep2
biodep2 %>%
dplyr::select(c( 'Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::group_by(c('Date', 'sample_type', 'treatment'))
biodep2 %>%
dplyr::select(c( 'Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(c('Date', 'sample_type', 'treatment'))
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG'))
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input')
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(c('Date', 'sample_type', 'treatment'))
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(c('Date', 'treatment'))
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(c( 'treatment'))
biodep2
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(treatment)
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment)
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
dplyr::summarise(across(everything(), list(mean)))
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment)
WaterSamples_Av_dat <- biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
dplyr::select(-c(sample_type,water_sample_time)) %>%  # omit to average across all group_by columns
dplyr::summarise(across(everything(), list(mean)))
WaterSamples_Av_dat
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
dplyr::select(-c(sample_type,water_sample_time))
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG'))
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment)
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
dplyr::filter(water_sample_tim %in% min())
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
dplyr::filter(water_sample_time %in% min())
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
dplyr::filter(water_sample_time %in% min(water_sample_time))
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment)
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
dplyr::filter(water_sample_time %in% min(water_sample_time))
slice(-1)
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
slice(-1)
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
slice(-1) # removes the first timestamp by group
dplyr::select(-c(sample_type,water_sample_time)) %>%  # omit to average across all group_by columns
dplyr::summarise(across(everything(), list(mean)))
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
slice(-1) # removes the first timestamp by group
dplyr::select(-c(sample_type, water_sample_time)) %>%  # omit to average across all group_by columns
dplyr::summarise(across(everything(), list(mean)))
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input')
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
slice(-1)
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
slice(-1) # removes the first timestamp by group
dplyr::select(-c(sample_type, water_sample_time))
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
slice(-1) # removes the first timestamp by group
dplyr::select(-c(sample_type, water_sample_time))
- biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
slice(-1) # removes the first timestamp by group
dplyr::select(-c('sample_type', 'water_sample_time'))
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
slice(-1) # removes the first timestamp by group
dplyr::select(-c('sample_type', 'water_sample_time'))
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
slice(-1)
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
slice(-1) # removes the first timestamp by group
dplyr::select(-c(sample_type , water_sample_time))
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
slice(-1) # removes the first timestamp by group
dplyr::select(-c(water_sample_time))
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment)
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
slice(-1)
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
slice(-1) # removes the first timestamp by group
dplyr::select(-(water_sample_time))
library(ggplot2)
library(dplyr)
library(reshape2)
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
slice(-1) # removes the first timestamp by group
dplyr::select(-(water_sample_time))
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
slice(-1) # removes the first timestamp by group
dplyr::select(-('water_sample_time'))
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
slice(-1) # removes the first timestamp by group
dplyr::select(-c('sample_type', 'water_sample_time'))
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
# slice(-1) # removes the first timestamp by group
dplyr::select(-c('sample_type', 'water_sample_time'))
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
# slice(-1) # removes the first timestamp by group
dplyr::select(-c('sample_type', 'water_sample_time')) %>%  # omit to average across all group_by columns
dplyr::slice(-1) # removes the first timestamp by group
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
# slice(-1) # removes the first timestamp by group
dplyr::select(-c('sample_type', 'water_sample_time')) %>%  # omit to average across all group_by columns
dplyr::slice(-1) # removes the first timestamp by group
dplyr::summarise(across(everything(), list(mean)))
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
# slice(-1) # removes the first timestamp by group
dplyr::select(-c('sample_type', 'water_sample_time'))
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
# slice(-1) # removes the first timestamp by group
dplyr::select(-c('sample_type', 'water_sample_time')) %>%  # omit to average across all group_by columns
dplyr::slice(-1)
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
# slice(-1) # removes the first timestamp by group
dplyr::select(-c('sample_type', 'water_sample_time'))
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
# slice(-1) # removes the first timestamp by group
dplyr::select(-c('sample_type', 'water_sample_time')) %>%  # omit to average across all group_by columns
dplyr::slice(-1)
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
# slice(-1) # removes the first timestamp by group
dplyr::select(-c('sample_type', 'water_sample_time')) %>%  # omit to average across all group_by columns
dplyr::slice(-1) # removes the first timestamp by group
dplyr::summarise(across(everything(), list(mean)))
WaterSamples_dat <- biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
# slice(-1) # removes the first timestamp by group
dplyr::select(-c('sample_type', 'water_sample_time')) %>%  # omit to average across all group_by columns
dplyr::slice(-1) # removes the first timestamp by group
WaterSamples_dat_AVE <- WaterSamples_dat %>%
dplyr::group_by(Date,treatment) %>%
dplyr::summarise(across(everything(), list(mean)))
WaterSamples_dat_AVE
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment)
biodep2 %>%
dplyr::select(c('Date', 'sample_type', 'treatment', 'water_sample_time', 'TPM_mgL',  'PIM_mgL',  'POM_mgL', 'Perc_INORG', 'Perc_ORG')) %>%
dplyr::filter(sample_type %in% 'water_Input') %>%
dplyr::group_by(Date,treatment) %>%
# slice(-1) # removes the first timestamp by group
dplyr::select(-c('sample_type', 'water_sample_time')) %>%  # omit to average across all group_by columns
dplyr::slice(-1)
WaterSamples_dat_AVE
