dplyr::mutate(O_N =(resp_umol_hr*2)/ # for umol of oxygen, curretnly as O2, convert to O
ExcretionRate_umol_mL_hr) %>%
dplyr::mutate(pCO2 = factor(pCO2, levels=c("500 μatm", "800 μatm")))
F1_ON_MasterMEANS <- F1_ON_Master %>% # mean by tank replicate
dplyr::select(c(Date, pCO2,  Replicate, O_N)) %>% # one extreme outlier value!
Rmisc::summarySE(measurevar="O_N",
groupvars=c("Date", "pCO2",  "Replicate"))
F1_ON_MasterMEANS
F1_ON_Master <- F1_ON_Master %>%
dplyr::mutate(O_N =(resp_umol_hr*2)/ # for umol of oxygen, curretnly as O2, convert to O
ExcretionRate_umol_mL_hr) %>%
dplyr::mutate(pCO2 = factor(pCO2, levels=c("500 μatm", "800 μatm")))
F1_ON_Master
#install.packages("pander")
library(dplyr)
library(ggplot2)
library(nlme)
library(lme4)
library(car)
# SET WORKING DIRECTORY
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis") # personal computer
# Extretion data
ER_F1_raw <- read.csv(file="Data/Physiology/Excretion_rates/F1/cumultative_raw/F1_Excretion_master.csv",
header=T,stringsAsFactors=FALSE, fileEncoding="latin1") %>% # master data file
dplyr::mutate(Generation = 'F1')
ER_F2_raw <- read.csv(file="Data/Physiology/Excretion_rates/F2/cumultative_raw/F2_Excretion_master.csv",
header=T,stringsAsFactors=FALSE, fileEncoding="latin1") %>% # master data file
dplyr::mutate(Generation = 'F2')
# how many datapoints do we have
nrow(ER_F1_raw) # 82
unique(ER_F1_raw$Date) # 20220202 20220301 20211026 20220922 20221026
nrow(ER_F2_raw) # 84
unique(ER_F2_raw$Date) # 20221116 20230131 20230223 20230327
82+84 # 166 total
# bind together these datasets
Excretion_data <- rbind(ER_F1_raw, ER_F2_raw)
nrow(Excretion_data) # 166
# lets look into these data
# we have 1-3 measurments per replicate tank
Excretion_count <- as.data.frame(Excretion_data %>%
dplyr::select(c(Date, pH, Replicate)) %>%
dplyr::group_by(Date, pH, Replicate) %>%
summarise(n=n())) %>%
dplyr::mutate(Date = as.factor(Date))
Excretion_count
# Size data
Size_data <- read.csv(file="Data/Physiology/Respiration/Metadata/Reference_resp_size.csv", header=T)
Size_data_filt <- Size_data %>%
dplyr::mutate(Date = paste("20",
(format(as.Date(Date, "%m/%d/%Y"), "%y%m%d")),
sep ='')) %>% # change format of the date to the format in Excretion_data
dplyr::select(-c(Food, Shell_tin_weight, tin_plus_shell, Tissue_tin_.weight,
tin_plus_tissue, Plate, Vessel_well_volume, Notes)) %>%  # get rid of unneeded column(s)
dplyr::filter(Date %in% unique(Excretion_data$Date)) %>% # 20220202 20220301 20211026 20220922 20221026- call these dates in te size dat
dplyr::filter(!Instrument %in% 'SDR_24channel') %>% # dates occasionally have resp for F2s with SDr, call the Loligo system for the correct animals
dplyr::select(-Instrument) # now we can omit Instrument column
nrow(Size_data_filt) # 166
# lets look into these data
# we have 1-3 measurments per replicate tank
Size_count <- as.data.frame(Size_data_filt %>%
dplyr::select(c(Date, pH, Replicate)) %>%
dplyr::group_by(Date, pH, Replicate) %>%
summarise(n=n())) %>% dplyr::mutate(Date = as.factor(Date))
Size_count
# sanity check
# see whether the datasets differ in any way
setdiff(Size_count, Excretion_count) # nmo output means data are exactly the same!
list(unique(Excretion_data$Date)) # 20220202 20220301 20211026 20220922 20221026 20221116 20230131 20230223 20230327- call these dates in the size data and only Loligo RR data (large animals measured excretion!)
list(unique(Size_count$Date)) # 20211026 20220202 20220301 20220922 20221026 20221116 20230131 20230223 20230327- call these dates in the size data and only Loligo RR data (large animals measured excretion!)
nrow(Excretion_data) # 166
nrow(Size_data_filt) # 166
Excretion_data_OM  <- merge(Excretion_data, Size_data_filt) %>%
dplyr::filter(!Dry_Tissue_weight %in% '<add here>')
nrow(Excretion_data_OM) # 145 - with the dry tissue weights omiited
# View(Excretion_data_OM)
# View(Excretion_data)
# View(Size_data_2)
# Excretion_data_OM$Dry_Tissue_weight
# View(Excretion_data_OM)
Excretion_data_OM <- Excretion_data_OM %>% # merge size and excretion data
dplyr::filter(!ExcretionRate_umol_mL_hr < 0) %>% # 3 excretion < 0 omit (20211026 7.5C, 20220202 7.5C, 20220202 8.0C)
dplyr::mutate(pCO2 = case_when(pH == 8.0 ~ "500 μatm",
pH == 7.5 ~ "800 μatm",
pH == 7 ~ "1200 μatm"))
Excretion_data_OM$pCO2 <- fct_relevel(Excretion_data_OM$pCO2, c('500 μatm', '800 μatm', '1200 μatm'))
Excretion_data_OM            <- Excretion_data_OM %>% filter(!is.na(Excretion_data_OM$ExcretionRate_umol_mL_hr))
Excretion_data_OM$log10_VER  <- log10(as.numeric(Excretion_data_OM$ExcretionRate_umol_mL_hr)) # assign resp value
Excretion_data_OM$log10_TDW  <- log10(as.numeric(Excretion_data_OM$Dry_Tissue_weight)) # assign length value
# run plot for b factor
nrow(Excretion_data_OM)
ER_b.factor_PLOT_ALL <- Excretion_data_OM %>%
ggplot(aes(x=log10_TDW, y=log10_VER)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_BodyMass; TDW in g") +
scale_y_continuous(name ="log10_ER; ER in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",axis.title.y=element_text(size=7)) +
ggtitle("Excretion rate scaling: log10_MO2 = log10_a + (b.factor * log10_BodyMass)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "left")
ER_b.factor_PLOT_ALL
ER_b.factor_PLOT_ALL
ER_b.factor_PLOT_ALL <- Excretion_data_OM %>%
ggplot(aes(x=log10_TDW, y=log10_VER)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_BodyMass; TDW in g") +
scale_y_continuous(name ="log10_ER; ER in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",axis.title.y=element_text(size=7)) +
ggtitle("Excretion rate scaling: log10_MO2 = log10_a + (b.factor * log10_BodyMass)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "left")
ER_b.factor_PLOT_ALL
ER_b.factor_PLOT_pCO2 <-Excretion_data_OM %>%
ggplot(aes(x=log10_TDW, y=log10_VER, color = pCO2)) +
geom_point() +
scale_color_manual(values=c("darkgreen","orange", "purple")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_BodyMass; TDW in g") +
scale_y_continuous(name ="log10_ER; ER in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",axis.title.y=element_text(size=7)) +
ggtitle("Excretion rate scaling: log10_MO2 = log10_a + (b.factor * log10_BodyMass)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "left") +
facet_wrap(~pCO2)
ER_b.factor_PLOT_pCO2
ER_b.factor_PLOT_Gen <-Excretion_data_OM %>%
ggplot(aes(x=log10_TDW, y=log10_VER)) +
geom_point() +
# scale_color_manual(values=c("darkgreen","orange", "purple")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_BodyMass; TDW in g") +
scale_y_continuous(name ="log10_ER; ER in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",axis.title.y=element_text(size=7)) +
ggtitle("Excretion rate scaling: log10_MO2 = log10_a + (b.factor * log10_BodyMass)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "left") +
facet_wrap(~Generation)
ER_b.factor_PLOT_Gen
ER_b.factor_PLOT_GenpCO2 <-Excretion_data_OM %>%
ggplot(aes(x=log10_TDW, y=log10_VER, color = pCO2)) +
geom_point() +
scale_color_manual(values=c("darkgreen","orange", "purple")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_BodyMass; TDW in g") +
scale_y_continuous(name ="log10_ER; ER in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",axis.title.y=element_text(size=7)) +
ggtitle("Excretion rate scaling: log10_MO2 = log10_a + (b.factor * log10_BodyMass)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "left") +
facet_wrap(~Generation*pCO2)
ER_b.factor_PLOT_GenpCO2
print(ggarrange(ER_b.factor_PLOT_ALL, ER_b.factor_PLOT_pCO2,
ER_b.factor_PLOT_Gen, ER_b.factor_PLOT_GenpCO2, nrow = 4, ncol = 1)) # print the model diagnostics
ER_b.factor_PLOT_ALL
print(ggarrange(ER_b.factor_PLOT_ALL, ER_b.factor_PLOT_pCO2,
ER_b.factor_PLOT_Gen, ER_b.factor_PLOT_GenpCO2, nrow = 4, ncol = 1)) # print the model diagnostics
ER_b.factor_PLOT_pCO2
ER_b.factor_PLOT_GenpCO2
ER_b.factor_PLOT_Gen
ER_b.factor_PLOT_ALL
pdf(paste0(filename = "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/ExcretionRates/allometric_scaling/ExcretionScaling_bFactor_TDW.pdf"),
width = 8, height = 12)
print(ggarrange(ER_b.factor_PLOT_ALL, ER_b.factor_PLOT_pCO2,
ER_b.factor_PLOT_Gen, ER_b.factor_PLOT_GenpCO2, nrow = 4, ncol = 1)) # print the model diagnostics
# LOAD PACKAGES ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(devtools) # devtools::install_github # use devtools to instlal github link
library(LoLinR) # install_github('colin-olito/LoLinR') # install LoLinR from github
library(dplyr)
library(lubridate)
library(rMR)
library(dplyr)
library(stringr)
library(ggplot2)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis")
# Start to end resp - review the start to end R script if you want more detail on this, okay!
RR_start.end  <- read.csv(file="Output/Respiration/RR_start_end_master.csv", header=T)  %>% dplyr::select(-X)
RR_size.ref   <- read.csv(file="Data/Physiology/Respiration/metadata/Reference_resp_size.csv", header=T)
# Respiration rate master - uses the LoLin R package, again review my days of  work to write a tutorial
# and guide you how this was done.
SMR_F1        <- read.csv(file="Output/Respiration/F1/F1_RR_calc_master.csv", header=T)  %>% dplyr::select(-X)
SMR_F2        <- read.csv(file="Output/Respiration/F2/F2_RR_calc_master.csv", header=T)  %>% dplyr::select(-X)
# note: this data file has Start.End_RR_mgO2hr - already accounting for the blank start end O2 consumption!
ER_F1         <- read.csv(file="Output/ExcretionRates/F1/F1_ExcretionRates_master.csv", header=T) %>% dplyr::select(-X)
ER_F2         <- read.csv(file="Output/ExcretionRates/F2/F2_ExcretionRates_master.csv", header=T) %>% dplyr::select(-X)
# look here to see what i mean!
# how many datapoints do we have for ER
nrow(ER_F1) # 78 total
nrow(ER_F2) # 82 total
# now for SMr
(nrow(SMR_F1)) # 136 - see what I mean!
unique(ER_F1$Date) # 20211026 20220202 20220301 20220922 20221026
unique(ER_F2$Date) # 20221116 20230131 20230223 20230327
# we need to clean up SMR datasets because the Date format will not allow us to merge with ER
SMR_F1_sub <- SMR_F1 %>% dplyr::mutate(Date = paste("20",(format(as.Date(Date, "%m/%d/%Y"), "%y%m%d")), sep ='')) %>% # change format of the date to the format in Excretion_data
dplyr::filter(Date %in% c('20211026', '20220202', '20220301', '20220922', '20221026')) %>%
dplyr::filter(filetype %in% 'LoLigo_data') %>% # ommits all microplate SDR dish data, in which ER MEASUREMENTS WERE NOT COMPLETED!!!!
dplyr::mutate(Replicate = gsub(".*_","",Chamber_tank)) %>%
dplyr::select(-(c(filetype, Length_um, pCO2,Dry_Tissue_weight, whole_Dry_weight))) %>%  # do not need it anymore!
dplyr::select(c('Date','pH','Replicate','Number', 'Run','Length_mm',
'resp_umol_hr'))
nrow(SMR_F1_sub) # 77 - we have one value less than ER due to a bad datapoint
SMR_F2_sub <- SMR_F2 %>% dplyr::mutate(Date = paste("20",(format(as.Date(Date, "%m/%d/%Y"), "%y%m%d")), sep ='')) %>% # change format of the date to the format in Excretion_data
dplyr::filter(Date %in% c('20221116', '20230131', '20230223', '20230327')) %>%
dplyr::mutate(Replicate = gsub(".*_","",Chamber_tank)) %>%
dplyr::select(-(c(Dry_Tissue_weight, whole_Dry_weight))) %>%  # do not need it anymore!
dplyr::select(c('Date','pH','Replicate','Number', 'Run', 'Length_um',
'resp_umol_hr'))
nrow(SMR_F2_sub) # 84
# now when we merge, ER is our limiting factor
F1_ON_Master<- merge(ER_F1,SMR_F1_sub, by=c('Date','pH',  'Replicate','Number', 'Run')) %>%
dplyr::select(-c(Run,Biovolume_g_in_sw,Dry_Shell_weight,whole_Dry_weight,log10_VER,log10_TDW))
nrow(F1_ON_Master) # 74 aligned - 4 less than ER master file
F2_ON_Master <- merge(ER_F2,SMR_F2_sub, by=c('Date','pH','Replicate','Number', 'Length_um')) %>%
dplyr::select(-c(Run.x,Run.y,Biovolume_g_in_sw,Dry_Shell_weight,whole_Dry_weight,log10_VER,log10_TDW))
nrow(F2_ON_Master) # 82 aligned - exact with the master file
# F1 Plots ::::::::::::::::::::::::::
library(forcats)
F1_ON_Master <- F1_ON_Master %>%
dplyr::mutate(O_N =(resp_umol_hr*2)/ # for umol of oxygen, curretnly as O2, convert to O
ExcretionRate_umol_mL_hr) %>%
dplyr::mutate(pCO2 = factor(pCO2, levels=c("500 μatm", "800 μatm")))
write.csv(F1_ON_Master,
"C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/OxygenNitrogen_ratio/F1/F1_ON_master.csv")
F1_ON_MasterMEANS <- F1_ON_Master %>% # mean by tank replicate
dplyr::select(c(Date, pCO2,  Replicate, O_N)) %>% # one extreme outlier value!
Rmisc::summarySE(measurevar="O_N",
groupvars=c("Date", "pCO2",  "Replicate"))
write.csv(F1_ON_MasterMEANS,
"C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/OxygenNitrogen_ratio/F1/F1_ON_master_means.csv")
F1_Boxplot <- F1_ON_MasterMEANS %>%
#dplyr::filter(!(Date %in% '20220301')) %>% # two outliers?
ggplot(aes(x=as.factor(Date),
y=O_N,
color=as.factor(pCO2))) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_color_manual(values=c("forestgreen","orange")) +
theme_classic() +
ggtitle("O:N, F1 Scallops (rep av'd)") +
theme(legend.position="none",
axis.title.y=element_text(size=7),
axis.title.x=element_text(size=7),
axis.text.x=element_text(size=7)) +
scale_y_continuous(name ="O:N (umol TDW b factor)",expand = c(0, 0), limits = c(0, NA)) +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single"))
F1_Boxplot
F1_Boxplot
F1_Boxplot
View(F1_ON_Master)
View(F1_ON_Master %>% dplyr::select(resp_umol_hr, ExcretionRate_umol_mL_hr, O_N))
View(F1_ON_Master %>% dplyr::select(resp_umol_hr, ExcretionRate_umol_mL_hr, O_N))
View(F1_ON_Master %>% dplyr::select(Date,pH, Replicate,resp_umol_hr, ExcretionRate_umol_mL_hr, O_N))
F2_ON_Master <- F2_ON_Master %>%
dplyr::mutate(O_N =(resp_umol_hr*2)/ # for umol of oxygen, curretnly as O2, convert to O
ExcretionRate_umol_mL_hr) %>%
dplyr::mutate(pCO2 = factor(pCO2, levels=c("500 μatm", "800 μatm", "1200 μatm")))
F2_ON_MasterMEANS <- F2_ON_Master %>% # mean by tank replicate
dplyr::filter(!O_N>500) %>%
dplyr::select(c(Date, pCO2,  Replicate, O_N)) %>% # one extreme outlier value!
Rmisc::summarySE(measurevar="O_N",
groupvars=c("Date", "pCO2",  "Replicate"))
F2_Boxplot <- F2_ON_MasterMEANS %>%
# dplyr::filter(!(Date %in% '20230131' & O_N >100)) %>% # two outliers?
ggplot(aes(x=as.factor(Date),
y=O_N,
color=as.factor(pCO2))) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_color_manual(values=c("forestgreen","orange", "purple")) +
theme_classic() +
ggtitle("O:N, F2 Scallops (rep av'd)") +
theme(legend.position="none",
axis.title.y=element_text(size=7),
axis.title.x=element_text(size=7),
axis.text.x=element_text(size=7)) +
scale_y_continuous(name ="O:N (umol hr)",expand = c(0, 0), limits = c(0, NA)) +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single"))
F2_Boxplot
# note: this data file has Start.End_RR_mgO2hr - already accounting for the blank start end O2 consumption!
ER_F1         <- read.csv(file="Output/ExcretionRates/F1/F1_ExcretionRates_master.csv", header=T) %>% dplyr::select(-X) %>%
dplyr::mutate(Age = case_when(Date == "20211026" ~  92,
Date == "20220202" ~  191,
Date == "20220301" ~  218,
Date == "20220922" ~  423,
Date == "20221026" ~  457)) # %>% #edit this!
ER_F1
# look here to see what i mean!
# how many datapoints do we have for ER
nrow(ER_F1) # 78 total
ER_F1
ER_F2         <- read.csv(file="Output/ExcretionRates/F2/F2_ExcretionRates_master.csv", header=T) %>% dplyr::select(-X) %>%
dplyr::mutate(Age = case_when(Date == "20221116" ~  111,
Date == "20230131" ~  169,
Date == "20230223" ~  192,
Date == "20230327" ~  224))
# look here to see what i mean!
# how many datapoints do we have for ER
nrow(ER_F1) # 78 total
nrow(ER_F2) # 82 total
# now for SMr
(nrow(SMR_F1)) # 136 - see what I mean!
unique(ER_F1$Date) # 20211026 20220202 20220301 20220922 20221026
unique(ER_F2$Date) # 20221116 20230131 20230223 20230327
# we need to clean up SMR datasets because the Date format will not allow us to merge with ER
SMR_F1_sub <- SMR_F1 %>% dplyr::mutate(Date = paste("20",(format(as.Date(Date, "%m/%d/%Y"), "%y%m%d")), sep ='')) %>% # change format of the date to the format in Excretion_data
dplyr::filter(Date %in% c('20211026', '20220202', '20220301', '20220922', '20221026')) %>%
dplyr::filter(filetype %in% 'LoLigo_data') %>% # ommits all microplate SDR dish data, in which ER MEASUREMENTS WERE NOT COMPLETED!!!!
dplyr::mutate(Replicate = gsub(".*_","",Chamber_tank)) %>%
dplyr::select(-(c(filetype, Length_um, pCO2,Dry_Tissue_weight, whole_Dry_weight))) %>%  # do not need it anymore!
dplyr::select(c('Date','pH','Replicate','Number', 'Run','Length_mm',
'resp_umol_hr'))
nrow(SMR_F1_sub) # 77 - we have one value less than ER due to a bad datapoint
SMR_F2_sub <- SMR_F2 %>% dplyr::mutate(Date = paste("20",(format(as.Date(Date, "%m/%d/%Y"), "%y%m%d")), sep ='')) %>% # change format of the date to the format in Excretion_data
dplyr::filter(Date %in% c('20221116', '20230131', '20230223', '20230327')) %>%
dplyr::mutate(Replicate = gsub(".*_","",Chamber_tank)) %>%
dplyr::select(-(c(Dry_Tissue_weight, whole_Dry_weight))) %>%  # do not need it anymore!
dplyr::select(c('Date','pH','Replicate','Number', 'Run', 'Length_um',
'resp_umol_hr'))
nrow(SMR_F2_sub) # 84
# now when we merge, ER is our limiting factor
F1_ON_Master<- merge(ER_F1,SMR_F1_sub, by=c('Age', 'Date','pH',  'Replicate','Number', 'Run')) %>%
dplyr::select(-c(Run,Biovolume_g_in_sw,Dry_Shell_weight,whole_Dry_weight,log10_VER,log10_TDW))
F2_ON_Master <- merge(ER_F2,SMR_F2_sub, by=c('Age', 'Date','pH','Replicate','Number', 'Length_um')) %>%
dplyr::select(-c(Run.x,Run.y,Biovolume_g_in_sw,Dry_Shell_weight,whole_Dry_weight,log10_VER,log10_TDW))
F1_ON_Master <- F1_ON_Master %>%
dplyr::mutate(O_N =(resp_umol_hr*2)/ # for umol of oxygen, curretnly as O2, convert to O
ExcretionRate_umol_mL_hr) %>%
dplyr::mutate(pCO2 = factor(pCO2, levels=c("500 μatm", "800 μatm")))
View(F1_ON_Master %>% dplyr::select(Date,pH, Replicate,resp_umol_hr, ExcretionRate_umol_mL_hr, O_N))
F1_ON_MasterMEANS <- F1_ON_Master %>% # mean by tank replicate
dplyr::select(c(Age, pCO2,  Replicate, O_N)) %>% # one extreme outlier value!
Rmisc::summarySE(measurevar="O_N",
groupvars=c("Date", "pCO2",  "Replicate"))
F1_ON_Master <- F1_ON_Master %>%
dplyr::mutate(O_N =(resp_umol_hr*2)/ # for umol of oxygen, curretnly as O2, convert to O
ExcretionRate_umol_mL_hr) %>%
dplyr::mutate(pCO2 = factor(pCO2, levels=c("500 μatm", "800 μatm")))
F1_ON_MasterMEANS <- F1_ON_Master %>% # mean by tank replicate
dplyr::select(c(Age, pCO2,  Replicate, O_N)) %>% # one extreme outlier value!
Rmisc::summarySE(measurevar="O_N",
groupvars=c("Date", "pCO2",  "Replicate"))
F2_ON_Master <- merge(ER_F2,SMR_F2_sub, by=c('Age', 'Date','pH','Replicate','Number', 'Length_um')) %>%
dplyr::select(-c(Run.x,Run.y,Biovolume_g_in_sw,Dry_Shell_weight,whole_Dry_weight,log10_VER,log10_TDW))
nrow(F2_ON_Master) # 82 aligned - exact with the master file
# now when we merge, ER is our limiting factor
F1_ON_Master<- merge(ER_F1,SMR_F1_sub, by=c('Age', 'Date','pH',  'Replicate','Number', 'Run')) %>%
dplyr::select(-c(Run,Biovolume_g_in_sw,Dry_Shell_weight,whole_Dry_weight,log10_VER,log10_TDW))
nrow(F1_ON_Master) # 74 aligned - 4 less than ER master file
F1_ON_MasterMEANS <- F1_ON_Master %>% # mean by tank replicate
dplyr::select(c(Age, pCO2,  Replicate, O_N)) %>% # one extreme outlier value!
Rmisc::summarySE(measurevar="O_N",
groupvars=c("Date", "pCO2",  "Replicate"))
F1_ON_Master
ER_F1
# now when we merge, ER is our limiting factor
F1_ON_Master<- merge(ER_F1,SMR_F1_sub, by=c('Date','pH',  'Replicate','Number', 'Run')) %>%
dplyr::select(-c(Run,Biovolume_g_in_sw,Dry_Shell_weight,whole_Dry_weight,log10_VER,log10_TDW))
F2_ON_Master <- merge(ER_F2,SMR_F2_sub, by=c('Date','pH','Replicate','Number', 'Length_um')) %>%
dplyr::select(-c(Run.x,Run.y,Biovolume_g_in_sw,Dry_Shell_weight,whole_Dry_weight,log10_VER,log10_TDW))
nrow(F2_ON_Master) # 82 aligned - exact with the master file
F1_ON_Master <- F1_ON_Master %>%
dplyr::mutate(O_N =(resp_umol_hr*2)/ # for umol of oxygen, curretnly as O2, convert to O
ExcretionRate_umol_mL_hr) %>%
dplyr::mutate(pCO2 = factor(pCO2, levels=c("500 μatm", "800 μatm")))
F1_ON_Master
F1_ON_MasterMEANS <- F1_ON_Master %>% # mean by tank replicate
dplyr::select(c(Age, pCO2,  Replicate, O_N)) %>% # one extreme outlier value!
Rmisc::summarySE(measurevar="O_N",
groupvars=c("Date", "pCO2",  "Replicate"))
F1_ON_MasterMEANS
F1_Boxplot <- F1_ON_MasterMEANS %>%
#dplyr::filter(!(Date %in% '20220301')) %>% # two outliers?
ggplot(aes(x=as.factor(Age),
y=O_N,
color=as.factor(pCO2))) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_color_manual(values=c("forestgreen","orange")) +
theme_classic() +
ggtitle("O:N, F1 Scallops (rep av'd)") +
theme(legend.position="none",
axis.title.y=element_text(size=7),
axis.title.x=element_text(size=7),
axis.text.x=element_text(size=7)) +
scale_y_continuous(name ="O:N (umol TDW b factor)",expand = c(0, 0), limits = c(0, NA)) +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single"))
F1_Boxplot
F1_ON_MasterMEANS %>%
#dplyr::filter(!(Date %in% '20220301')) %>% # two outliers?
ggplot(aes(x=as.factor(Age),
y=O_N,
color=as.factor(pCO2))) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_color_manual(values=c("forestgreen","orange")) +
theme_classic()
F1_ON_MasterMEANS
F1_ON_MasterMEANS <- F1_ON_Master %>% # mean by tank replicate
dplyr::select(c(Age, pCO2,  Replicate, O_N)) %>% # one extreme outlier value!
Rmisc::summarySE(measurevar="O_N",
groupvars=c("Date", "pCO2",  "Replicate"))
F1_ON_MasterMEANS
F1_ON_Master
F1_ON_MasterMEANS <- F1_ON_Master %>% # mean by tank replicate
dplyr::select(c(as.factor(Age), pCO2,  Replicate, O_N)) %>% # one extreme outlier value!
Rmisc::summarySE(measurevar="O_N",
groupvars=c("Date", "pCO2",  "Replicate"))
F1_ON_Master
F1_ON_Master %>% # mean by tank replicate
dplyr::select(c(Age, pCO2,  Replicate, O_N))
F1_ON_MasterMEANS <- F1_ON_Master %>% # mean by tank replicate
dplyr::select(c(Age, pCO2,  Replicate, O_N)) %>% # one extreme outlier value!
Rmisc::summarySE(measurevar="O_N",
groupvars=c("Age", "pCO2",  "Replicate"))
F1_Boxplot <- F1_ON_MasterMEANS %>%
#dplyr::filter(!(Date %in% '20220301')) %>% # two outliers?
ggplot(aes(x=as.factor(Age),
y=O_N,
color=as.factor(pCO2))) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19,
position = position_jitterdodge(0.01),
size=1) +
scale_color_manual(values=c("forestgreen","orange")) +
theme_classic() +
ggtitle("O:N, F1 Scallops (rep av'd)") +
theme(legend.position="none",
axis.title.y=element_text(size=7),
axis.title.x=element_text(size=7),
axis.text.x=element_text(size=7)) +
scale_y_continuous(name ="O:N (umol TDW b factor)",expand = c(0, 0), limits = c(0, NA)) +
stat_summary(fun.y=mean,
geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.6,
size=0.4,
linetype = "dashed",
position = position_dodge(preserve = "single"))
F1_Boxplot
F1_ON_MasterMEANSMEANS <- F1_ON_MasterMEANS %>% # mean by tank replicate
dplyr::select(c(Age, pCO2, O_N)) %>% # one extreme outlier value!
Rmisc::summarySE(measurevar="O_N",
groupvars=c("Age", "pCO2"))
F1_ON_Plot <- F1_ON_MasterMEANSMEANS %>%
ggplot(aes(x=as.factor(Age),
y=O_N,
color=as.factor(pCO2))) +
geom_point(position=position_dodge(.5))+
scale_color_manual(values=c("forestgreen",
"darkorange2"))+
geom_errorbar(aes(ymin=O_N-se,
ymax=O_N+se), width=.2,
position=position_dodge(.5))+
theme_classic() +
xlab("Age (dpf)") +
ggtitle("O:N, F1 Scallops (mean +- SE; rep av'd)") +
theme_classic() +
theme(legend.position="none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
geom_line(stat = "identity", size=1.0)+
scale_y_continuous(name ="O:N (umol TDW b factor)",expand = c(0, 0), limits = c(0, NA)) +
theme(text = element_text(size=10))
F1_ON_Plot
