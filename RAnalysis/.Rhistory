filter(!Date %in% c('8/30/2022', '11/16/2022','8/30/2022', '11/16/2022', '1/31/2023', '2/23/2023', '3/27/2023',  '5/18/2023')) %>% # an F2 measurement
filter(!(Date == '9/22/2022' & filetype =='SDR_data')) %>%  # F2s were also measured on 9/22 but with the SDR system (F1s with the LoLigo)
dplyr::mutate(Age = case_when(Date == '9/14/2021'  ~ 50,
Date == '9/30/2021'  ~ 66,
Date == '10/26/2021'  ~ 92,
Date == '2/2/2022' ~ 191,
Date == '3/1/2022'  ~ 218,
Date == '9/22/2022'  ~ 423,
Date == '10/26/2022' ~ 457)) %>%
dplyr::mutate(Gen = 'F1') %>%
dplyr::mutate(Age = as.factor(Age)) %>%
dplyr::arrange(Age)
unique(RR_master_F1$Date)
# "9/14/2021"  "9/30/2021"  "10/26/2021" "2/2/2022"   "3/1/2022"   "9/22/2022"  "10/26/2022" "3/27/2023"  "5/18/2023"
# F2s ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
RR_master_F2 <- read.csv(file="Output/Respiration/RR_calc_raw.csv", header=T) %>%
filter(!Food %in% 'unfed') %>% # omit low food trial data
# filter out the F2 measurements
filter(Date %in% c('8/30/2022', '9/22/2022', '11/16/2022', '1/31/2023', '2/23/2023', '3/27/2023')) %>% # an F2 measurement
filter(!(Date == '9/22/2022' & filetype =='LoLigo_data')) %>% # F1s were also measured on 9/22 but with the LoLigo system (F2s with the SDR)
# unique(RR_master$Date) # "10/26/2021" "2/2/2022"   "3/1/2022"   "8/30/2022"  "9/14/2021"  "9/22/2022"  "9/30/2021"
dplyr::mutate(Age = case_when(Date == '8/30/2022'   ~ 13,
Date == '9/22/2022'   ~ 36,
Date == '11/16/2022'  ~ 91,
Date == '1/31/2023'   ~ 167,
Date == '2/23/2023'   ~ 190,
Date == '3/27/2023'   ~ 222)) %>%
dplyr::mutate(Gen = 'F2') %>%
dplyr::mutate(Age = as.factor(Age)) %>%
dplyr::arrange(Age)
unique(RR_master_F2$Date)
# "8/30/2022"  "9/22/2022"  "11/16/2022" "1/31/2023"  "2/23/2023"  "3/27/2023"
# View(RR_master)
# F3s ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
RR_master_F3 <- read.csv(file="Output/Respiration/RR_calc_raw.csv", header=T) %>%
# filter out targets
filter(Date %in% c('5/18/2023')) %>% # an signle F3 grow out measurment (so far!!!)
dplyr::mutate(Age = case_when(Date == '5/18/2023'   ~ 100)) %>%
dplyr::mutate(Gen = 'F3') %>%
dplyr::mutate(Age = as.factor(Age)) %>%
dplyr::arrange(Age)
unique(RR_master_F3$Date)
# "5/18/2023"
RR_master <- rbind(RR_master_F1, RR_master_F2, RR_master_F3)
# FOR SHELL ENGTH WE WILL USE THE 'resp_umol_hr_biovolcalc' data to employ all resp data files across time!
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# GET B FACTOR FOR ALL AVAILABLE INDIVIDUALS WITH LENGTH AND MO2 ::::::::::::::::::::::::::::::
View(RR_master)
# FOR SHELL ENGTH WE WILL USE THE 'resp_umol_hr_biovolcalc' data to employ all resp data files across time!
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# GET B FACTOR FOR ALL AVAILABLE INDIVIDUALS WITH LENGTH AND MO2 ::::::::::::::::::::::::::::::
RR_master_OM               <- RR_master %>% filter(!is.na(resp_umol_hr_biovolcalc)) %>%  filter(!is.na(Length_um))
nrow(RR_master_OM) # 327
RR_master_OM$log10_VO2     <- log10(as.numeric(RR_master_OM$resp_umol_hr_biovolcalc)) # assign resp value
RR_master_OM$log10_Length  <- log10(as.numeric(RR_master_OM$Length_um)) # assign length value
MO2_b.factorLENGTH_PLOT <- RR_master_OM %>%
#filter(!resp_umol_L_hr < 0.08) %>%
ggplot(aes(x=log10_Length, y=log10_VO2)) +
geom_point() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",axis.title.y=element_text(size=7)) +
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
label.x.npc = "left")
MO2_b.factorLENGTH_PLOT_facetted <- RR_master_OM %>%
ggplot(aes(x=log10_Length, y=log10_VO2, color = pCO2)) +
geom_point() +
scale_color_manual(values=c("blue","orange","purple")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",axis.title.y=element_text(size=7)) +
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T,
aes(label = paste(..eq.label..,
..rr.label.., sep = "~~~")),
label.x.npc = "left") +
facet_wrap(~pCO2)
print(ggarrange(MO2_b.factorLENGTH_PLOT, MO2_b.factorLENGTH_PLOT_facetted, nrow = 2, ncol = 1)) # print the model diagnostics
# call all bfactors (calc above!) - these are using ALL DATA
bTDW = 0.674 # review the outlier-omitted b factor plot in previous chunk
bLength = 1.85 # previously 1.71) # review the outlier-omitted b factor plot in previous chunk
# calc the mean for TDw and length
RR_master_F1$Dry_Tissue_weight <- as.numeric(RR_master_F1$Dry_Tissue_weight)
meanTDW      <- mean((RR_master_F1 %>%
dplyr::filter(!Dry_Tissue_weight %in% NA))$Dry_Tissue_weight) # 0.4750597 g
meanLength   <- mean(RR_master_F1$Length_um/1000) # 16.57877 mm
#View(RR_formatted_F1s$TDW_um)
RR_formatted_F1smaster <- RR_master_F1 %>%
# TDW b factor - using 'resp_umol_hr'
dplyr::mutate(resp_mg_hr_bFactorNormTDW.MEAN =
(resp_mg_hr_biovolcalc)*((meanTDW/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - using 'resp_umol_hr' only values with measured biovolume
dplyr::mutate(resp_mg_hr_bFactorNormTDW.1g =
(resp_mg_hr_biovolcalc)*((1/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - using 'resp_umol_hr' only values with measured biovolume
dplyr::mutate(resp_umol_hr_bFactorNormTDW.MEAN =
(resp_umol_hr_biovolcalc)*((meanTDW/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - using 'resp_umol_hr' only values with measured biovolume
dplyr::mutate(resp_umol_hr_bFactorNormTDW.1g =
(resp_umol_hr_biovolcalc)*((1/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - using 'resp_umol_hr' only values with measured biovolume
# Length b factor
dplyr::mutate(resp_mg_hr_bFactorNormLength.MEAN =
(resp_mg_hr_biovolcalc)*((meanLength/Length_mm)^bLength) ) %>% # length b factor  correcred using 'resp_umol_hr_biovolcalc'
dplyr::mutate(resp_umol_hr_bFactorNormLength.MEAN =
(resp_umol_hr_biovolcalc)*((meanLength/Length_mm)^bLength) ) %>% # length b factor  correcred using 'resp_umol_hr_biovolcalc'
dplyr::select(c(Gen,
Age,
Date,
pH,
pCO2,
Replicate,
Chamber_tank,
Number,
Run,
Channel,
filetype,
Filename,
Food,
Length_um,
Length_mm,
Dry_Shell_weight,
Dry_Tissue_weight,
whole_Dry_weight,
volume,
Biovolume_g_in_sw,
measured_volume, # as vessel volume - meausred biovolume (NAs where note measured)
Biovol_length3,
calculated_volume, # as vessel volume - (biovol calc from length^3)
Lpc,
BLANK.mean_Lpc,
resp_blankStand,
resp_mg_hr,
resp_mg_hr_biovolcalc,
resp_mg_hr_bFactorNormTDW.MEAN,
resp_mg_hr_bFactorNormTDW.1g,
resp_mg_hr_bFactorNormLength.MEAN,
resp_umol_hr,
resp_umol_hr_biovolcalc,
resp_umol_hr_bFactorNormTDW.MEAN,
resp_umol_hr_bFactorNormTDW.1g,
resp_umol_hr_bFactorNormLength.MEAN))
#View(RR_formatted_F1smaster)
write.csv(RR_formatted_F1smaster, "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Respiration/F1_RR_calc_master.csv")
# call all bfactors (calc above!) - these are using ALL DATA
bTDW = 0.674 # review the outlier-omitted b factor plot in previous chunk
bLength = 1.85 # previously 1.71) #review the outlier-omitted b factor plot in previous chunk
# calc the mean for TDw and length
RR_master_F2$Dry_Tissue_weight <- as.numeric(RR_master_F2$Dry_Tissue_weight)
meanTDW    <- mean((RR_master_F2 %>%
dplyr::filter(!Dry_Tissue_weight %in% NA))$Dry_Tissue_weight) # 0.3062667 g
meanLength <- mean(RR_master_F2$Length_um/1000) # 14.07185 mm
#View(RR_formatted_F1s$TDW_um)
RR_formatted_F2smaster <- RR_master_F2 %>%
# TDW b factor - using 'resp_umol_hr'
dplyr::mutate(resp_mg_hr_bFactorNormTDW.MEAN =
(resp_mg_hr_biovolcalc)*((meanTDW/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - using 'resp_umol_hr' only values with measured biovolume
dplyr::mutate(resp_mg_hr_bFactorNormTDW.1g =
(resp_mg_hr_biovolcalc)*((1/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - using 'resp_umol_hr' only values with measured biovolume
dplyr::mutate(resp_umol_hr_bFactorNormTDW.MEAN =
(resp_umol_hr_biovolcalc)*((meanTDW/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - using 'resp_umol_hr' only values with measured biovolume
dplyr::mutate(resp_umol_hr_bFactorNormTDW.1g =
(resp_umol_hr_biovolcalc)*((1/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - using 'resp_umol_hr' only values with measured biovolume
# Length b factor
dplyr::mutate(resp_mg_hr_bFactorNormLength.MEAN =
(resp_mg_hr_biovolcalc)*((meanLength/Length_mm)^bLength) ) %>% # length b factor  correcred using 'resp_umol_hr_biovolcalc'
dplyr::mutate(resp_umol_hr_bFactorNormLength.MEAN =
(resp_umol_hr_biovolcalc)*((meanLength/Length_mm)^bLength) ) %>% # length b factor  correcred using 'resp_umol_hr_biovolcalc'
dplyr::select(c(Gen,
Age,
Date,
pH,
pCO2,
Replicate,
Chamber_tank,
Number,
Run,
Channel,
filetype,
Filename,
Food,
Length_um,
Length_mm,
Dry_Shell_weight,
Dry_Tissue_weight,
whole_Dry_weight,
volume,
Biovolume_g_in_sw,
measured_volume, # as vessel volume - meausred biovolume (NAs where note measured)
Biovol_length3,
calculated_volume, # as vessel volume - (biovol calc from length^3)
Lpc,
BLANK.mean_Lpc,
resp_blankStand,
resp_mg_hr,
resp_mg_hr_biovolcalc,
resp_mg_hr_bFactorNormTDW.MEAN,
resp_mg_hr_bFactorNormTDW.1g,
resp_mg_hr_bFactorNormLength.MEAN,
resp_umol_hr,
resp_umol_hr_biovolcalc,
resp_umol_hr_bFactorNormTDW.MEAN,
resp_umol_hr_bFactorNormTDW.1g,
resp_umol_hr_bFactorNormLength.MEAN))
#View(RR_formatted_F1smaster)
write.csv(RR_formatted_F2smaster, "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Respiration/F2_RR_calc_master.csv")
# call all bfactors (calc above!) - these are using ALL DATA
bTDW = 0.674 # review the outlier-omitted b factor plot in previous chunk
bLength = 1.85 # previously 1.71) #review the outlier-omitted b factor plot in previous chunk
meanLength <- mean(RR_master_F3$Length_um/1000) # 14.07185 mm
#View(RR_formatted_F1s$TDW_um)
RR_formatted_F3smaster <- RR_master_F3 %>%
# TDW b factor - using 'resp_umol_hr'
dplyr::mutate(resp_mg_hr_bFactorNormTDW.MEAN = NA) %>% # TDW b factor - using 'resp_umol_hr' only values with measured biovolume
dplyr::mutate(resp_mg_hr_bFactorNormTDW.1g = NA) %>% # TDW b factor - using 'resp_umol_hr' only values with measured biovolume
dplyr::mutate(resp_umol_hr_bFactorNormTDW.MEAN = NA) %>% # TDW b factor - using 'resp_umol_hr' only values with measured biovolume
dplyr::mutate(resp_umol_hr_bFactorNormTDW.1g = NA) %>% # TDW b factor - using 'resp_umol_hr' only values with measured biovolume
# Length b factor
dplyr::mutate(resp_mg_hr_bFactorNormLength.MEAN =
(resp_mg_hr_biovolcalc)*((meanLength/Length_mm)^bLength) ) %>% # length b factor  correcred using 'resp_umol_hr_biovolcalc'
dplyr::mutate(resp_umol_hr_bFactorNormLength.MEAN =
(resp_umol_hr_biovolcalc)*((meanLength/Length_mm)^bLength) ) %>% # length b factor  correcred using 'resp_umol_hr_biovolcalc'
dplyr::select(c(Gen,
Age,
Date,
pH,
pCO2,
Replicate,
Chamber_tank,
Number,
Run,
Channel,
filetype,
Filename,
Food,
Length_um,
Length_mm,
Dry_Shell_weight,
Dry_Tissue_weight,
whole_Dry_weight,
volume,
Biovolume_g_in_sw,
measured_volume, # as vessel volume - meausred biovolume (NAs where note measured)
Biovol_length3,
calculated_volume, # as vessel volume - (biovol calc from length^3)
Lpc,
BLANK.mean_Lpc,
resp_blankStand,
resp_mg_hr,
resp_mg_hr_biovolcalc,
resp_mg_hr_bFactorNormTDW.MEAN,
resp_mg_hr_bFactorNormTDW.1g,
resp_mg_hr_bFactorNormLength.MEAN,
resp_umol_hr,
resp_umol_hr_biovolcalc,
resp_umol_hr_bFactorNormTDW.MEAN,
resp_umol_hr_bFactorNormTDW.1g,
resp_umol_hr_bFactorNormLength.MEAN))
#View(RR_formatted_F1smaster)
write.csv(RR_formatted_F3smaster, "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Respiration/F3_RR_calc_master.csv")
library(devtools) # devtools::install_github # use devtools to instlal github link
library(LoLinR) # install_github('colin-olito/LoLinR') # install LoLinR from github
library(dplyr)
library(lubridate)
library(rMR)
library(dplyr)
library(stringr)
library(rlang)
library(ggplot2)
library(ggfortify)
library(DESeq2)
library(devtools)
library(ggbiplot)
library(VennDiagram)# venn diagrams
library(eulerr) #venn diagrams -  check out the R shiny app (http://eulerr.co/)
# set wd
knitr::opts_knit$set(root.dir = 'C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis')
getwd()
Biodeposition    <- read.csv("Output/Biodeposition/Biodeposition_master_F2.csv", header = T)
RespirationRates <- read.csv(file="Output/Respiration/F2_RR_calc_master.csv", header=T)
ExcretionRates   <- read.csv(file="Output/ExcretionRates/F2/F2_ExcretionRates_master.csv", header=T)
# biodep
Biodeposition_adj    <- Biodeposition %>%
dplyr::select(-c(X, tank_ID.y)) %>%
dplyr::rename(tank_ID = tank_ID.x) %>%
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Replicate = gsub("[^a-zA-Z]", "", tank_ID)) %>% # new replicate column - reflects RR dataset
dplyr::rename(Dry_Tissue_weight = animal_dry_weight_g) %>% # change name to match RR
dplyr::rename(Length_mm = animal_length_mm) %>% # change name to match RR
dplyr::rename(pH = treatment) %>% # rename to match
dplyr::select(-c(tank_ID, animal_number, initial_filter_weight_mg, dry_filter_weight_mg,ash_filter_weight_mg, inclubation_time_hours)) %>%
dplyr::mutate(Date = case_when(Date == "02/01/2023" ~ '1/31/2023',
Date == "02/24/2023" ~ '2/23/2023',
Date == "03/28/2023" ~ '3/27/2023')) %>%
dplyr::select(-Length_mm) # lenngth is the exact same as the resp and Excretion data except diff sig figs and some missing
nrow(Biodeposition_adj) # nrow 61
# RR
RespirationRates_adj <- RespirationRates %>%
dplyr::filter(Date %in% c('1/31/2023','2/23/2023')) %>% # , '3/27/2023'
dplyr::mutate(Replicate =
gsub("[^a-zA-Z]", "", Chamber_tank)) %>% # new replicate column - reflects RR dataset
dplyr::select(c(Date,
Age,
pH,
pCO2,
Replicate,
Length_mm,
Dry_Tissue_weight,
resp_umol_hr_bFactorNormTDW.1g)) %>%
dplyr::rename(RR_resp_umol_hr_bfactorTDW =
resp_umol_hr_bFactorNormTDW.1g)
# RR
RespirationRates_adj <- RespirationRates %>%
dplyr::filter(Date %in% c('1/31/2023','2/23/2023', '3/27/2023')) %>% # , '3/27/2023'
dplyr::mutate(Replicate =
gsub("[^a-zA-Z]", "", Chamber_tank)) %>% # new replicate column - reflects RR dataset
dplyr::select(c(Date,
Age,
pH,
pCO2,
Replicate,
Length_mm,
Dry_Tissue_weight,
resp_umol_hr_bFactorNormTDW.1g)) %>%
dplyr::rename(RR_resp_umol_hr_bfactorTDW =
resp_umol_hr_bFactorNormTDW.1g)
RespirationRates_adj$Dry_Tissue_weight <- as.numeric(RespirationRates_adj$Dry_Tissue_weight)
nrow(RespirationRates_adj) # 42
ri
# ER
# note - we will bfctor and mean corret for TDW)
bTDW    <- 1.07 # FR_bfactor script using ALL F1 and F2 data!
ExcretionRates_adj  <- ExcretionRates  %>%
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Date = case_when(Date == "01/31/2023" ~ '1/31/2023',
Date == "02/23/2023" ~ '2/23/2023')) %>%
dplyr::mutate(ExcretionRate_mg_hr = ExcretionRate_ug_mL_hr/1000) %>%
dplyr::rename(ExcretionRate_umol_hr = ExcretionRate_umol_mL_hr) %>%
dplyr::mutate(ExcretionRate_mg_hr_bFactorNormTDW =
(ExcretionRate_mg_hr)*((1/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - mg
dplyr::mutate(ExcretionRate_umol_hr_bFactorNormTDW =
(ExcretionRate_umol_hr)*((1/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - umol
dplyr::mutate(Length_mm = as.numeric(Length_um / 1000)) %>% # Length_mm matched biodep and RR
dplyr::select(c(Date,
pH,
Replicate,
Chamber_tank,
Length_um,
Dry_Tissue_weight,
ExcretionRate_mg_hr_bFactorNormTDW,
ExcretionRate_umol_hr_bFactorNormTDW))
# sanity check before we merge
nrow(ExcretionRates_adj)          == (nrow(RespirationRates_adj)  + nrow(Biodeposition_adj)) / 2 # should be TRUE
nrow(RespirationRates_adj)
nrow(Biodeposition_adj))
nrow(Biodeposition_adj)
unique(ExcretionRates_adj$Date)   == unique(RespirationRates_adj$Date) # should be TRUE
unique(RespirationRates_adj$Date) ==  unique(Biodeposition_adj$Date)  # should be TRUE
unique(RespirationRates_adj$Date)
unique(ExcretionRates_adj$Date)
ExcretionRates_adj  <- ExcretionRates  %>%
dplyr::mutate(Date = format(strptime(Date, format = "%Y%m%d"), "%m/%d/%Y")) %>% # format to mm/dd/yyy as RR dataset
dplyr::mutate(Date = case_when(Date == "01/31/2023" ~ '1/31/2023',
Date == "02/23/2023" ~ '2/23/2023',
Date == "03/27/2023" ~ '3/27/2023',)) %>%
dplyr::mutate(ExcretionRate_mg_hr = ExcretionRate_ug_mL_hr/1000) %>%
dplyr::rename(ExcretionRate_umol_hr = ExcretionRate_umol_mL_hr) %>%
dplyr::mutate(ExcretionRate_mg_hr_bFactorNormTDW =
(ExcretionRate_mg_hr)*((1/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - mg
dplyr::mutate(ExcretionRate_umol_hr_bFactorNormTDW =
(ExcretionRate_umol_hr)*((1/Dry_Tissue_weight)^bTDW)) %>% # TDW b factor - umol
dplyr::mutate(Length_mm = as.numeric(Length_um / 1000)) %>% # Length_mm matched biodep and RR
dplyr::select(c(Date,
pH,
Replicate,
Chamber_tank,
Length_um,
Dry_Tissue_weight,
ExcretionRate_mg_hr_bFactorNormTDW,
ExcretionRate_umol_hr_bFactorNormTDW))
unique(RespirationRates_adj$Date) ==  unique(Biodeposition_adj$Date)  # should be TRUE
unique(ExcretionRates_adj$Date)   == unique(RespirationRates_adj$Date) # should be TRUE
Biodeposition_adj$uniqueID <- paste(Biodeposition_adj$Date,
Biodeposition_adj$pH,
Biodeposition_adj$Dry_Tissue_weight,
sep = '_')
RespirationRates_adj$uniqueID <- paste(RespirationRates_adj$Date,
RespirationRates_adj$pH,
RespirationRates_adj$Dry_Tissue_weight,
sep = '_')
ExcretionRates_adj$uniqueID <- paste(ExcretionRates_adj$Date,
ExcretionRates_adj$pH,
ExcretionRates_adj$Dry_Tissue_weight,
sep = '_')
# btwn RR and ER
nrow(subset(ExcretionRates_adj,
!(uniqueID %in% RespirationRates_adj$uniqueID))) # no discrepancies btwn files (yay!)
# now btwn RR and biodep
nrow(subset(RespirationRates_adj,
!(uniqueID %in% Biodeposition_adj$uniqueID))) # no discrepancies btwn files (yay!)
# merge RR and ER - check the number of rows == 42
RR_ER_merge <- merge(RespirationRates_adj,ExcretionRates_adj) %>% dplyr::select(!pCO2)
# ommitted pCO2 because biodep has the correct micro symbol and is merged below
nrow(RR_ER_merge) # 42 - no rows lost!
# merge this data with the biodep - adjust the columns to be our master file!
F2_Masterfile <- merge(RR_ER_merge, Biodeposition_adj,
by = c('Date','uniqueID','Dry_Tissue_weight', 'Replicate', 'pH')) %>%
dplyr::select(c(Date,
Age,
pCO2,
pH,
Replicate,
Chamber_tank,
Length_mm,
Dry_Tissue_weight,
RR_resp_umol_hr_bfactorTDW,
ExcretionRate_umol_hr_bFactorNormTDW,
IER_correct,
IRR_correct,
OER_correct,
ORR_correct,
CR_correct,
FR_correct,
RR_correct,
p,
f,
i,
SE,
AR,
AE))
nrow(F2_Masterfile) # 42 rows - as expected!!!!!
# ommitted pCO2 because biodep has the correct micro symbol and is merged below
nrow(RR_ER_merge) # 63 - no rows lost!
write.csv(F2_Masterfile, "Output/F2_RR_ER_Biodep_master.csv")
# merge this data with the biodep - adjust the columns to be our master file!
F2_Masterfile <- merge(RR_ER_merge, Biodeposition_adj,
by = c('Date','uniqueID','Dry_Tissue_weight', 'Replicate', 'pH')) %>%
dplyr::select(c(Date,
Age,
pCO2,
pH,
Replicate,
Chamber_tank,
Length_mm,
Dry_Tissue_weight,
RR_resp_umol_hr_bfactorTDW,
ExcretionRate_umol_hr_bFactorNormTDW,
IER_correct,
IRR_correct,
OER_correct,
ORR_correct,
CR_correct,
FR_correct,
RR_correct,
p,
f,
i,
SE,
AR,
AE))
write.csv(F2_Masterfile, "Output/F2_RR_ER_Biodep_master.csv")
F2_Masterfile$RR_Energy    <- (14.14*(F2_Masterfile$RR_resp_umol_hr_bfactorTDW))
F2_Masterfile$RR_Excretion <- (0.025*(F2_Masterfile$ExcretionRate_umol_hr_bFactorNormTDW))
F2_Masterfile$SfG <- (F2_Masterfile$AR -
(F2_Masterfile$RR_Energy+F2_Masterfile$RR_Excretion)
)
# following the Widdows and Johnson 1988 aper described above..
# Note- RR is in L O2 so we will multiply 20.33*1000 to account for 20.33 Joules per ml-1 O2
F2_Masterfile$RR_Energy_Widdows.1988     <- (20.33*F2_Masterfile$RR_resp_umol_hr_bfactorTDW)
F2_Masterfile$RR_Excretion_Widdows.1988  <- (19.4*F2_Masterfile$ExcretionRate_umol_hr_bFactorNormTDW)
F2_Masterfile$SfG_Widdows.1988           <- (
(F2_Masterfile$AR * (F2_Masterfile$CR_correct*23)) -
(F2_Masterfile$RR_Energy_Widdows.1988 + F2_Masterfile$RR_Excretion_Widdows.1988)
)
F2_Masterfile$pCO2 <- factor(F2_Masterfile$pCO2, levels= c('500 μatm','800 μatm','1200 μatm'))
SFG_F2             <- ggplot(data=F2_Masterfile, aes(x=pCO2, y=SfG, colour=pCO2)) +
scale_colour_manual(values=c("forestgreen","orange", "purple"))+
theme_classic() +
geom_boxplot(fill="white",
outlier.colour=NA,
position=position_dodge(width=0.9)) +
geom_point(position=position_jitterdodge()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.text.x=element_blank(),axis.title.x=element_blank()) +
labs(title="Scope for Growth ", x ="Month", y = "Scope for Growth") +
facet_wrap(~Date)
SFG_F2_Widdows1988 <- ggplot(data=F2_Masterfile, aes(x=pCO2, y=SfG_Widdows.1988, colour=pCO2)) +
scale_colour_manual(values=c("forestgreen","orange", "purple"))+
theme_classic() +
geom_boxplot(fill="white",
outlier.colour=NA,
position=position_dodge(width=0.9)) +
geom_point(position=position_jitterdodge()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.text.x=element_blank(),axis.title.x=element_blank()) +
labs(title="Scope for Growth (Widdows and Johnson 1988)",
x ="Month",
y = "Scope for Growth") +
facet_wrap(~Date)
ggarrange(SFG_F2, SFG_F2_Widdows1988, nrow = 2)
F2_Masterfile$ExcretionRate_umol_hr_bFactorNormTDW
F2_Masterfile$AR
F2_Masterfile$RR_Energy
F2_Masterfile$RR_Excretion
